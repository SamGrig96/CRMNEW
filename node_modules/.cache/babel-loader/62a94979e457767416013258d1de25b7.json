{"ast":null,"code":"import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n\nvar Virtualization =\n/** @class */\nfunction () {\n  function Virtualization(instance) {\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.uiVirtualization = function () {\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.content\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    this.wireScrollEvent(false);\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) : EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n    }\n  };\n\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount = this.listViewInstance.isWindow ? Math.round(window.innerHeight / this.listItemHeight * 3) : Math.round(height / this.listItemHeight * 1.5);\n\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n\n    return itemCount;\n  };\n\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    var _this = this;\n\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    this.listViewInstance.curViewDS.forEach(function (ds, index) {\n      if (_this.listViewInstance.showCheckBox && ds[_this.listViewInstance.fields.isChecked]) {\n        _this.uiIndices.activeIndices.push(index);\n      }\n\n      if (!isNullOrUndefined(ds[_this.listViewInstance.fields.enabled]) && !ds[_this.listViewInstance.fields.enabled]) {\n        _this.uiIndices.disabledItemIndices.push(index);\n      }\n    });\n\n    if (this.isNgTemplate()) {\n      Array.prototype.forEach.call(this.listViewInstance.element.querySelectorAll('.' + classNames.listItem), function (item, index) {\n        item.context = _this.listViewInstance.viewContainerRef._embeddedViews[index].context;\n      });\n    }\n  };\n\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n\n  Virtualization.prototype.onVirtualUiScroll = function () {\n    var _a;\n\n    var startingHeight;\n\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n\n      this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n      if (typeof this.listViewInstance.onUIScrolled === 'function') {\n        this.listViewInstance.onUIScrolled();\n      }\n    }\n\n    this.scrollPosition = scroll;\n  };\n\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var _this = this;\n\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    Array.prototype.forEach.call(this.listViewInstance.ulElement.querySelectorAll('li'), function (element) {\n      _this.updateUI(element, index);\n\n      index++;\n    });\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    var curViewDs = this.listViewInstance.curViewDS;\n\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = curViewDs[index][this.listViewInstance.fields.text].toString();\n    }\n\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n\n      var textContent = element.querySelector('.' + classNames.textContent);\n\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n\n    element.style.display = '';\n\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] && fields[_this.listViewInstance.fields.id].toString() === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString()) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return resultJSON;\n  };\n\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection_1 = [];\n      var textCollection_1 = [];\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n\n        if (this.listViewInstance.showCheckBox) {\n          this.uiIndices.activeIndices.forEach(function (index) {\n            dataCollection_1.push(curViewDS_1[index]);\n          });\n          return {\n            text: dataCollection_1,\n            data: dataCollection_1,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text_1 = this.listViewInstance.fields.text;\n\n        if (this.listViewInstance.showCheckBox) {\n          this.uiIndices.activeIndices.forEach(function (index) {\n            textCollection_1.push(curViewDS_2[index][text_1]);\n            dataCollection_1.push(curViewDS_2[index]);\n          });\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection_1,\n            data: dataCollection_1,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  Virtualization.prototype.selectItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        var eventArgs = void 0;\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n\n  Virtualization.prototype.enableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.disableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.showItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.hideItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    } // recollect all the list item into collection\n\n\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n\n  Virtualization.prototype.checkedItem = function (checked) {\n    var _this = this;\n\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      this.listViewInstance.curViewDS.forEach(function (ds, index) {\n        if (!ds.isHeader) {\n          _this.uiIndices.activeIndices.push(index);\n        }\n      });\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n\n      if (target) {\n        this.updateUI(liItem, index, target);\n        this.listViewInstance.isWindow ? window.scrollTo(0, pageYOffset + this.listItemHeight) : this.listViewInstance.element.scrollTop += this.listItemHeight;\n      }\n    }\n\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var _this = this;\n\n    Object.keys(this.uiIndices).forEach(function (key) {\n      _this.uiIndices[key] = _this.uiIndices[key].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    });\n  };\n\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    var _this = this;\n\n    data.forEach(function (currentItem) {\n      // push the given data to main data array\n      dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n      _this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n\n      if (!_this.domItemCount) {\n        // fresh rendering for first time\n        if ((_this.listViewInstance.template || _this.listViewInstance.groupTemplate) && !_this.isNgTemplate()) {\n          _this.listViewInstance.listBaseOption.template = null;\n          _this.listViewInstance.listBaseOption.groupTemplate = null;\n          _this.listViewInstance.listBaseOption.itemCreated = _this.createUIItem.bind(_this);\n        }\n\n        _this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n\n      } else if (_this.domItemCount < _this.expectedDomItemCount) {\n        var ds = _this.listViewInstance.findItemFromDS(dataSource, fields);\n\n        if (ds instanceof Array) {\n          if (_this.listViewInstance.ulElement) {\n            var index = _this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n\n            _this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n\n            var curViewDS = _this.listViewInstance.curViewDS[index - 1];\n\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index; // inject new group header into DOM for previously created list item\n\n              _this.createAndInjectNewItem(curViewDS, index);\n            }\n          } // recollect all the list item into collection\n\n\n          _this.listViewInstance.liCollection = _this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        var index = _this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n\n        _this.addUiItem(index); // check for group header item needs to be added\n\n\n        var curViewDS = _this.listViewInstance.curViewDS[index - 1];\n\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          _this.addUiItem(index - 1);\n        }\n      }\n    });\n  };\n\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption); // check for target element whether to insert before last item or group item\n\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    } // insert before the target element\n\n\n    this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n    this.domItemCount++;\n\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    } // recalculate the current item height, to avoid jumpy scroller\n\n\n    this.refreshItemHeight();\n  };\n\n  Virtualization.prototype.createUIItem = function (args) {\n    var template = this.listViewInstance.createElement('div');\n    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n    template.innerHTML = this.listViewInstance.template || commonTemplate; // tslint:disable-next-line:no-any\n\n    var templateElements = template.getElementsByTagName('*');\n    var groupTemplate = this.listViewInstance.createElement('div');\n\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    } // tslint:disable-next-line:no-any\n\n\n    var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n    args.item.innerHTML = '';\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n\n    for (var i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n\n    for (var i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n    args.item.insertBefore(element.firstElementChild, null);\n  };\n\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  };\n\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData;\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n      groupTemplateNodes.forEach(function (node) {\n        return node.onChange(newData);\n      });\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n      flatTemplateNodes.forEach(function (node) {\n        return node.onChange(newData);\n      });\n    } else if (!newData.isHeader) {\n      flatTemplateNodes.forEach(function (node) {\n        return node.onChange(newData);\n      });\n    } else {\n      groupTemplateNodes.forEach(function (node) {\n        return node.onChange(newData);\n      });\n    }\n  };\n\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n\n  Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n    var _this = this;\n\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    if (resultantOutput && resultantOutput.length) {\n      resultantOutput.forEach(function (classNameMatch) {\n        var classFunction;\n\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        }\n\n        var subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(_this.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(_this.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          var newCss = classFunction(value);\n\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          subNode.bindedvalue = newCss;\n        };\n\n        classNameMatch[0].split(' ').forEach(function (className) {\n          element.classList.remove(className);\n        });\n\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n            return css;\n          }));\n        }\n\n        _this.updateContextData(listElement, subNode, isHeader);\n      });\n    }\n  };\n\n  Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n    var _this = this;\n\n    var attributeNames = [];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n\n    attributeNames.forEach(function (attributeName) {\n      var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || [];\n      var attributeNameFunction;\n      var attributeValueFunction;\n\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        }\n\n        var subNode_1 = {};\n\n        if (isHeader) {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.headerData)];\n        } else {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.templateData)];\n        }\n\n        subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? attributeName : subNode_1.bindedvalue[0];\n\n        subNode_1.onChange = function (value) {\n          var bindedvalue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode_1.attrName);\n          subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode_1.attrName, bindedvalue);\n          subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n\n        var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode_1.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode_1.attrName, attributeValue);\n\n        _this.updateContextData(listElement, subNode_1, isHeader);\n      }\n    });\n  };\n\n  Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n    var _this = this;\n\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      resultantOutput.forEach(function (textPropertyMatch) {\n        var subNode = {};\n        var textFunction;\n\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(_this.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(_this.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n\n        _this.updateContextData(listElement, subNode, isHeader);\n      });\n    }\n  };\n\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n\n    this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n\n    this.changeElementAttributes(element, index);\n\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(resultElement[0]);\n  };\n\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n  };\n\n  return Virtualization;\n}();\n\nexport { Virtualization };","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","ListBase","DataManager","Virtualization","instance","listViewInstance","prototype","isNgTemplate","templateRef","uiVirtualization","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","content","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","wireScrollEvent","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","remove","dataSourceLength","parseFloat","itemCount","Math","round","innerHeight","_this","uiIndices","forEach","ds","index","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","Array","call","listItem","item","context","viewContainerRef","_embeddedViews","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","scrollTop","_a","top","document","documentElement","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","updateUI","i","nextElementSibling","target","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","querySelector","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","changeElementAttributes","disable","indexOf","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","resultJSON","getElementUID","some","data","getSelectedItems","dataCollection_1","textCollection_1","curViewDS_1","map","curViewDS_2","text_1","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","items","removeUiItem","listDataSource","localData","setViewDataSource","li","e","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","key","addItem","currentItem","template","groupTemplate","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","args","commonTemplate","templateElements","getElementsByTagName","groupTemplateElements","curData","headerData","templateData","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","textProperty","classProperty","attributeProperty","onChange","newData","listElement","node","updateContextData","regex","RegExp","resultantOutput","regexMatch","match","exec","pop","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","value","split","filter","css","newCss","attributeNames","attributes","nodeName","attributeName","attrNameMatch","attrValueMatch","getAttribute","attributeNameFunction","attributeValueFunction","subNode_1","attrName","attributeValue","innerText","isChildHasTextContent","children","textPropertyMatch","textFunction","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","virtualThis","templateCompiler","resultElement","lastChild","removeChild","getModuleName"],"mappings":"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","sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        this.wireScrollEvent(false);\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) :\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount = this.listViewInstance.isWindow ?\n            Math.round((window.innerHeight / this.listItemHeight) * 3) :\n            Math.round((height / this.listItemHeight) * 1.5);\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        var _this = this;\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        this.listViewInstance.curViewDS.forEach(function (ds, index) {\n            if (_this.listViewInstance.showCheckBox && ds[_this.listViewInstance.fields.isChecked]) {\n                _this.uiIndices.activeIndices.push(index);\n            }\n            if (!isNullOrUndefined(ds[_this.listViewInstance.fields.enabled]) && !ds[_this.listViewInstance.fields.enabled]) {\n                _this.uiIndices.disabledItemIndices.push(index);\n            }\n        });\n        if (this.isNgTemplate()) {\n            Array.prototype.forEach.call(this.listViewInstance.element.querySelectorAll('.' + classNames.listItem), function (item, index) {\n                item.context = _this.listViewInstance.viewContainerRef._embeddedViews[index].context;\n            });\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function () {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n            this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n            if (typeof this.listViewInstance.onUIScrolled === 'function') {\n                this.listViewInstance.onUIScrolled();\n            }\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var _this = this;\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        Array.prototype.forEach.call(this.listViewInstance.ulElement.querySelectorAll('li'), function (element) {\n            _this.updateUI(element, index);\n            index++;\n        });\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n                curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                curViewDs[index][this.listViewInstance.fields.text].toString();\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    fields[_this.listViewInstance.fields.id].toString()\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString())) || fields === data) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection_1 = [];\n            var textCollection_1 = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    this.uiIndices.activeIndices.forEach(function (index) {\n                        dataCollection_1.push(curViewDS_1[index]);\n                    });\n                    return {\n                        text: dataCollection_1,\n                        data: dataCollection_1,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text_1 = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    this.uiIndices.activeIndices.forEach(function (index) {\n                        textCollection_1.push(curViewDS_2[index][text_1]);\n                        dataCollection_1.push(curViewDS_2[index]);\n                    });\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection_1,\n                        data: dataCollection_1,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        var _this = this;\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            this.listViewInstance.curViewDS.forEach(function (ds, index) {\n                if (!ds.isHeader) {\n                    _this.uiIndices.activeIndices.push(index);\n                }\n            });\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                this.listViewInstance.isWindow ? window.scrollTo(0, (pageYOffset + this.listItemHeight)) :\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var _this = this;\n        Object.keys(this.uiIndices).forEach(function (key) {\n            _this.uiIndices[key] = _this.uiIndices[key].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        });\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        var _this = this;\n        data.forEach(function (currentItem) {\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            _this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!_this.domItemCount) {\n                // fresh rendering for first time\n                if ((_this.listViewInstance.template || _this.listViewInstance.groupTemplate) && !_this.isNgTemplate()) {\n                    _this.listViewInstance.listBaseOption.template = null;\n                    _this.listViewInstance.listBaseOption.groupTemplate = null;\n                    _this.listViewInstance.listBaseOption.itemCreated = _this.createUIItem.bind(_this);\n                }\n                _this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (_this.domItemCount < _this.expectedDomItemCount) {\n                var ds = _this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (_this.listViewInstance.ulElement) {\n                        var index = _this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        _this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = _this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            _this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    _this.listViewInstance.liCollection =\n                        _this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                var index = _this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                _this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = _this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    _this.addUiItem(index - 1);\n                }\n            }\n        });\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        template.innerHTML = this.listViewInstance.template || commonTemplate;\n        // tslint:disable-next-line:no-any\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // tslint:disable-next-line:no-any\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        args.item.innerHTML = '';\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        args.item.insertBefore(element.firstElementChild, null);\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            groupTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            flatTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else if (!newData.isHeader) {\n            flatTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n        else {\n            groupTemplateNodes.forEach(function (node) { return node.onChange(newData); });\n        }\n    };\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            resultantOutput.forEach(function (classNameMatch) {\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(_this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(_this.templateData);\n                }\n                subNode.onChange = function (value) {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                    }\n                    var newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter(function (css) { return css; }));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                classNameMatch[0].split(' ').forEach(function (className) {\n                    element.classList.remove(className);\n                });\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                }\n                _this.updateContextData(listElement, subNode, isHeader);\n            });\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        attributeNames.forEach(function (attributeName) {\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            var attributeNameFunction;\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(_this.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(_this.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                _this.updateContextData(listElement, subNode_1, isHeader);\n            }\n        });\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var _this = this;\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            resultantOutput.forEach(function (textPropertyMatch) {\n                var subNode = {};\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(_this.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(_this.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                _this.updateContextData(listElement, subNode, isHeader);\n            });\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n                curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"]},"metadata":{},"sourceType":"module"}