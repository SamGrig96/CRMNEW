{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\content\\\\message-list\\\\message-toolbar\\\\MessageToolbar.jsx\";\nimport React, { PureComponent } from \"react\";\nimport ComposeMessage from \"../../../compose-message/ComposeMessage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faReply, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { getNameEmail } from \"../../../../utils\";\nimport moment from \"moment\";\nimport \"./messageToolbar.scss\";\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\n    this.prevBack = this.getClickHandler([\"BACK\"]);\n  }\n\n  getClickHandler(action) {\n    console.log(action, 'action');\n    return evt => {\n      this.props.onClick(action);\n    };\n  }\n\n  render() {\n    if (!this.props.messageResult.result) {\n      return null;\n    }\n\n    const message = this.props.messageResult.result;\n    const {\n      messageHeaders\n    } = message;\n    let replyTo, cc, subject;\n\n    for (let i = 0; i < messageHeaders.length; i++) {\n      const header = messageHeaders[i];\n\n      switch (header.name) {\n        case \"Subject\":\n          subject = header;\n          break;\n\n        case \"From\":\n          if (!replyTo) {\n            replyTo = header;\n          }\n\n          break;\n\n        case \"Reply-To\":\n          replyTo = header;\n          break;\n\n        case \"Cc\":\n          cc = header;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (replyTo.value === '') {\n      replyTo = messageHeaders.find(e => e.name === \"From\");\n    }\n\n    const nameEmail = getNameEmail(replyTo.value);\n    const receivedHeader = messageHeaders.find(el => el.name === \"X-Received\");\n    const date = receivedHeader ? receivedHeader.value.split(\";\")[1].trim() : \"\";\n    let parsedDate = moment(date);\n\n    if (!parsedDate.isValid()) {\n      parsedDate = moment(parseInt(this.props.messageResult.result.internalDate));\n    }\n\n    const replyHeader = `<p>On ${parsedDate.format(\"MMMM Do YYYY, h:mm:ss a\")} < ${nameEmail.email} > wrote:</p>`;\n    const composeProps = {\n      subject: `Re: ${subject.value}`,\n      to: nameEmail.email,\n      content: `<p>&nbsp;</p>\n          <p>&nbsp;</p>\n          <p>&nbsp;</p>\n          ${replyHeader}\n          <blockquote>${this.props.messageResult.body}</blockquote>`,\n      ...(cc && {\n        cc: cc.value\n      })\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center message-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-btn mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"action-btn\",\n      onClick: this.prevBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      title: \"back\",\n      icon: faArrowLeft,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-btn mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.trashHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      title: \"Move to Trash\",\n      icon: faTrash,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-btn mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ComposeMessage, Object.assign({}, composeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      title: \"Reply\",\n      icon: faReply,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\nexport default MessageToolbar;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/content/message-list/message-toolbar/MessageToolbar.jsx"],"names":["React","PureComponent","ComposeMessage","FontAwesomeIcon","faTrash","faReply","faArrowLeft","getNameEmail","moment","MessageToolbar","constructor","props","trashHandler","getClickHandler","prevBack","action","console","log","evt","onClick","render","messageResult","result","message","messageHeaders","replyTo","cc","subject","i","length","header","name","value","find","e","nameEmail","receivedHeader","el","date","split","trim","parsedDate","isValid","parseInt","internalDate","replyHeader","format","email","composeProps","to","content","body"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ComposeMessage from \"../../../compose-message/ComposeMessage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faReply,faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNameEmail } from \"../../../../utils\";\r\nimport moment from \"moment\";\r\nimport \"./messageToolbar.scss\";\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.trashHandler = this.getClickHandler([\"TRASH\"]);\r\n    this.prevBack=this.getClickHandler([\"BACK\"])\r\n  }\r\n\r\n  getClickHandler(action) {\r\n    console.log(action,'action')\r\n    return evt => {\r\n      this.props.onClick(action);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.messageResult.result) {\r\n      return null;\r\n    }\r\n\r\n    const message = this.props.messageResult.result;\r\n    const { messageHeaders } = message;\r\n\r\n    let replyTo, cc, subject;\r\n\r\n    for (let i = 0; i < messageHeaders.length; i++) {\r\n      const header = messageHeaders[i];\r\n      switch (header.name) {\r\n        case \"Subject\":\r\n          subject = header;\r\n          break;\r\n        case \"From\":\r\n          if (!replyTo) {\r\n            replyTo = header;\r\n          }\r\n          break;\r\n        case \"Reply-To\":\r\n          replyTo = header;\r\n          break;\r\n        case \"Cc\":\r\n          cc = header;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (replyTo.value === '') {\r\n      replyTo = messageHeaders.find(e => e.name === \"From\");\r\n    }\r\n\r\n    const nameEmail = getNameEmail(replyTo.value);\r\n    const receivedHeader = messageHeaders.find(el => el.name === \"X-Received\");\r\n    const date = receivedHeader ? receivedHeader.value\r\n          .split(\";\")[1]\r\n          .trim() : \"\";\r\n\r\n    let parsedDate = moment(date);\r\n\r\n    if (!parsedDate.isValid()) {\r\n      parsedDate = moment(\r\n        parseInt(this.props.messageResult.result.internalDate)\r\n      );\r\n    }\r\n    const replyHeader = `<p>On ${parsedDate.format(\"MMMM Do YYYY, h:mm:ss a\")} < ${nameEmail.email} > wrote:</p>`;\r\n\r\n    const composeProps = {\r\n      subject: `Re: ${subject.value}`,\r\n      to: nameEmail.email,\r\n      content: `<p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          <p>&nbsp;</p>\r\n          ${replyHeader}\r\n          <blockquote>${this.props.messageResult.body}</blockquote>`,\r\n      ...(cc && { cc: cc.value })\r\n    };\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center message-toolbar\">\r\n        <div className=\"action-btns\">\r\n          <div className=\"action-btn mr-2\">\r\n            <button className=\"action-btn\" onClick={this.prevBack}>\r\n              <FontAwesomeIcon\r\n                  title=\"back\"\r\n                  icon={faArrowLeft}\r\n                  size=\"lg\"\r\n              /> \r\n            </button>\r\n          </div>\r\n          <div className=\"action-btn mr-2\">\r\n            <button className=\"btn\" onClick={this.trashHandler}>\r\n              <FontAwesomeIcon\r\n                title=\"Move to Trash\"\r\n                icon={faTrash}\r\n                size=\"lg\"\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"action-btn mr-2\">\r\n          <ComposeMessage {...composeProps}>\r\n              <button className=\"btn\">\r\n                <FontAwesomeIcon\r\n                  title=\"Reply\"\r\n                  icon={faReply}\r\n                  size=\"lg\"\r\n                />\r\n              </button>\r\n            </ComposeMessage>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageToolbar;\r\n"]},"metadata":{},"sourceType":"module"}