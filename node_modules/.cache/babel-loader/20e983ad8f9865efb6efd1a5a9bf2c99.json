{"ast":null,"code":"import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\n/**\n * `touch` module is used to handle touch interactions.\n */\n\nvar ScheduleTouch =\n/** @class */\nfunction () {\n  function ScheduleTouch(parent) {\n    this.parent = parent;\n    this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\n    this.touchObj = new Touch(this.element, {\n      scroll: this.scrollHandler.bind(this),\n      swipe: this.swipeHandler.bind(this),\n      tapHold: this.tapHoldHandler.bind(this),\n      swipeSettings: {\n        swipeThresholdDistance: 1\n      }\n    });\n    EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\n    this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\n    this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\n  }\n\n  ScheduleTouch.prototype.scrollHandler = function (e) {\n    if (isBlazor() || this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action || e.originalEvent && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) || closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS))) {\n      return;\n    }\n\n    if (!this.timeStampStart) {\n      this.timeStampStart = Date.now();\n    }\n\n    if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\n      this.onTransitionEnd();\n    }\n\n    if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionBegin, args);\n\n      if (args.cancel) {\n        return;\n      }\n\n      var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n\n      if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\n        return;\n      } else {\n        this.isScrollTriggered = true;\n        e.originalEvent.preventDefault();\n        e.originalEvent.stopPropagation();\n      }\n    }\n\n    if (e.scrollDirection === this.touchLeftDirection) {\n      if (!this.nextPanel) {\n        this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\n        this.nextPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.nextPanel.element);\n      }\n\n      var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    } else if (e.scrollDirection === this.touchRightDirection) {\n      var prevWidth = 0;\n\n      if (!this.previousPanel) {\n        this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\n        this.previousPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.previousPanel.element);\n        prevWidth = this.previousPanel.element.offsetWidth;\n      }\n\n      var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    }\n  };\n\n  ScheduleTouch.prototype.swipeHandler = function (e) {\n    if (!this.isScrollTriggered || this.parent.uiStateValues.action) {\n      return;\n    }\n\n    this.isScrollTriggered = false;\n\n    if (e.swipeDirection === 'Left' || e.swipeDirection === 'Right') {\n      var time = Date.now() - this.timeStampStart;\n      var offsetDist = e.distanceX * (Browser.isDevice ? 6 : 1.66);\n\n      if (offsetDist > time || e.distanceX > this.parent.element.offsetWidth / 2) {\n        this.swapPanels(e.swipeDirection);\n\n        if (offsetDist > time && e.distanceX > this.parent.element.offsetWidth / 2) {\n          this.element.style.transitionDuration = offsetDist / time / 10 + 's';\n        }\n\n        this.confirmSwipe(e.swipeDirection);\n      } else {\n        this.cancelSwipe();\n      }\n\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionComplete, args);\n    } else {\n      this.cancelSwipe();\n    }\n\n    this.timeStampStart = null;\n  };\n\n  ScheduleTouch.prototype.tapHoldHandler = function (e) {\n    var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\n\n    if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n      this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\n      return;\n    }\n  };\n\n  ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\n    if (!this.currentPanel) {\n      this.currentPanel = {\n        element: this.parent.activeView.getPanel(),\n        selectedDate: new Date(this.parent.selectedDate.getTime())\n      };\n      this.setDimensions(this.currentPanel.element);\n    } else {\n      this.parent.setProperties({\n        selectedDate: this.currentPanel.selectedDate\n      }, true);\n    }\n\n    this.parent.setProperties({\n      selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType)\n    }, true);\n\n    if (this.parent.headerModule) {\n      this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\n    }\n\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.renderLayout(clsName);\n  };\n\n  ScheduleTouch.prototype.swapPanels = function (direction) {\n    if (direction === this.touchLeftDirection) {\n      var temp = this.nextPanel;\n      this.nextPanel = this.currentPanel;\n      this.currentPanel = temp;\n    } else {\n      var temp = this.previousPanel;\n      this.previousPanel = this.currentPanel;\n      this.currentPanel = temp;\n    }\n  };\n\n  ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\n    var _this = this;\n\n    var previousDate = swipeDirection === this.touchLeftDirection ? this.nextPanel.selectedDate : this.previousPanel.selectedDate;\n    var args = {\n      action: 'date',\n      cancel: false,\n      previousDate: previousDate,\n      currentDate: this.currentPanel.selectedDate\n    };\n    this.parent.trigger(events.navigating, args, function (navArgs) {\n      if (navArgs.cancel) {\n        _this.swapPanels(swipeDirection);\n\n        _this.cancelSwipe();\n      } else {\n        _this.parent.activeView.setPanel(_this.currentPanel.element);\n\n        _this.parent.setProperties({\n          selectedDate: _this.currentPanel.selectedDate\n        }, true);\n\n        var translateX = void 0;\n\n        if (_this.parent.enableRtl) {\n          translateX = swipeDirection === _this.touchLeftDirection ? _this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth : 0;\n        } else {\n          translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\n        }\n\n        addClass([_this.element], cls.TRANSLATE_CLASS);\n        _this.element.style.transform = 'translatex(' + translateX + 'px)';\n\n        if (_this.parent.headerModule) {\n          _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\n        }\n\n        _this.parent.renderModule.refreshDataManager();\n      }\n    });\n  };\n\n  ScheduleTouch.prototype.cancelSwipe = function () {\n    this.parent.activeView.setPanel(this.currentPanel.element);\n    this.parent.setProperties({\n      selectedDate: this.currentPanel.selectedDate\n    }, true);\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.generateColumnLevels();\n    addClass([this.element], cls.TRANSLATE_CLASS);\n    var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\n    this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\n  };\n\n  ScheduleTouch.prototype.onTransitionEnd = function () {\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n    this.element.style.transitionDuration = '';\n    this.element.style.transform = '';\n\n    if (this.previousPanel) {\n      remove(this.previousPanel.element);\n      this.previousPanel = null;\n      removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    if (this.nextPanel) {\n      remove(this.nextPanel.element);\n      this.nextPanel = null;\n      removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    this.currentPanel = null;\n    this.parent.activeView.getPanel().style.width = '';\n  };\n\n  ScheduleTouch.prototype.getTranslateX = function (element) {\n    var style = window.getComputedStyle(element);\n    return new WebKitCSSMatrix(style.webkitTransform).m41;\n  };\n\n  ScheduleTouch.prototype.setDimensions = function (element) {\n    element.style.width = this.parent.element.clientWidth + 'px';\n  };\n\n  ScheduleTouch.prototype.resetValues = function () {\n    this.currentPanel = null;\n    this.previousPanel = null;\n    this.nextPanel = null;\n    this.timeStampStart = null;\n    this.element.style.transform = '';\n\n    if (!isBlazor()) {\n      util.removeChildren(this.element);\n    }\n\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n  };\n  /**\n   * @hidden\n   */\n\n\n  ScheduleTouch.prototype.destroy = function () {\n    this.touchObj.destroy();\n    EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\n    this.resetValues();\n  };\n\n  return ScheduleTouch;\n}();\n\nexport { ScheduleTouch };","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/touch.js"],"names":["addClass","removeClass","Touch","remove","EventHandler","Browser","closest","isNullOrUndefined","isBlazor","events","cls","util","ScheduleTouch","parent","element","querySelector","TABLE_CONTAINER_CLASS","touchObj","scroll","scrollHandler","bind","swipe","swipeHandler","tapHold","tapHoldHandler","swipeSettings","swipeThresholdDistance","add","onTransitionEnd","touchLeftDirection","enableRtl","touchRightDirection","prototype","e","currentView","uiStateValues","action","originalEvent","target","classList","contains","APPOINTMENT_CLASS","timeStampStart","Date","now","TRANSLATE_CLASS","scrollDirection","args","requestType","cancel","event","trigger","actionBegin","scrollDiv","CONTENT_WRAP_CLASS","scrollWidth","clientWidth","isScrollTriggered","preventDefault","stopPropagation","nextPanel","renderPanel","NEXT_PANEL_CLASS","activeView","getPanel","selectedDate","getTime","setDimensions","x","distanceX","style","transform","getTranslateX","prevWidth","previousPanel","PREVIOUS_PANEL_CLASS","offsetWidth","swipeDirection","time","offsetDist","isDevice","swapPanels","transitionDuration","confirmSwipe","cancelSwipe","actionComplete","isAdaptive","quickPopup","tapHoldEventPopup","clsName","nextPrevType","currentPanel","setProperties","getNextPreviousDate","headerModule","setCalendarDate","getRenderDates","renderLayout","direction","temp","_this","previousDate","currentDate","navigating","navArgs","setPanel","translateX","offsetLeft","updateDateRange","getDateRangeText","renderModule","refreshDataManager","generateColumnLevels","CURRENT_PANEL_CLASS","width","window","getComputedStyle","WebKitCSSMatrix","webkitTransform","m41","resetValues","removeChildren","destroy"],"mappings":"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","sourcesContent":["import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\n/**\n * `touch` module is used to handle touch interactions.\n */\nvar ScheduleTouch = /** @class */ (function () {\n    function ScheduleTouch(parent) {\n        this.parent = parent;\n        this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\n        this.touchObj = new Touch(this.element, {\n            scroll: this.scrollHandler.bind(this),\n            swipe: this.swipeHandler.bind(this),\n            tapHold: this.tapHoldHandler.bind(this),\n            swipeSettings: { swipeThresholdDistance: 1 }\n        });\n        EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\n        this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\n        this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\n    }\n    ScheduleTouch.prototype.scrollHandler = function (e) {\n        if (isBlazor() || this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action ||\n            (e.originalEvent && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) ||\n                closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS)))) {\n            return;\n        }\n        if (!this.timeStampStart) {\n            this.timeStampStart = Date.now();\n        }\n        if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\n            this.onTransitionEnd();\n        }\n        if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\n            this.parent.trigger(events.actionBegin, args);\n            if (args.cancel) {\n                return;\n            }\n            var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n            if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\n                return;\n            }\n            else {\n                this.isScrollTriggered = true;\n                e.originalEvent.preventDefault();\n                e.originalEvent.stopPropagation();\n            }\n        }\n        if (e.scrollDirection === this.touchLeftDirection) {\n            if (!this.nextPanel) {\n                this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\n                this.nextPanel = {\n                    element: this.parent.activeView.getPanel(),\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\n                };\n                this.setDimensions(this.nextPanel.element);\n            }\n            var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n        }\n        else if (e.scrollDirection === this.touchRightDirection) {\n            var prevWidth = 0;\n            if (!this.previousPanel) {\n                this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\n                this.previousPanel = {\n                    element: this.parent.activeView.getPanel(),\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\n                };\n                this.setDimensions(this.previousPanel.element);\n                prevWidth = this.previousPanel.element.offsetWidth;\n            }\n            var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n        }\n    };\n    ScheduleTouch.prototype.swipeHandler = function (e) {\n        if (!this.isScrollTriggered || this.parent.uiStateValues.action) {\n            return;\n        }\n        this.isScrollTriggered = false;\n        if (e.swipeDirection === 'Left' || e.swipeDirection === 'Right') {\n            var time = Date.now() - this.timeStampStart;\n            var offsetDist = (e.distanceX * (Browser.isDevice ? 6 : 1.66));\n            if (offsetDist > time || (e.distanceX > (this.parent.element.offsetWidth / 2))) {\n                this.swapPanels(e.swipeDirection);\n                if (offsetDist > time && (e.distanceX > (this.parent.element.offsetWidth / 2))) {\n                    this.element.style.transitionDuration = ((offsetDist / time) / 10) + 's';\n                }\n                this.confirmSwipe(e.swipeDirection);\n            }\n            else {\n                this.cancelSwipe();\n            }\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\n            this.parent.trigger(events.actionComplete, args);\n        }\n        else {\n            this.cancelSwipe();\n        }\n        this.timeStampStart = null;\n    };\n    ScheduleTouch.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\n            return;\n        }\n    };\n    ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\n        if (!this.currentPanel) {\n            this.currentPanel = {\n                element: this.parent.activeView.getPanel(),\n                selectedDate: new Date(this.parent.selectedDate.getTime())\n            };\n            this.setDimensions(this.currentPanel.element);\n        }\n        else {\n            this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\n        }\n        this.parent.setProperties({ selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType) }, true);\n        if (this.parent.headerModule) {\n            this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\n        }\n        this.parent.activeView.getRenderDates();\n        this.parent.activeView.renderLayout(clsName);\n    };\n    ScheduleTouch.prototype.swapPanels = function (direction) {\n        if (direction === this.touchLeftDirection) {\n            var temp = this.nextPanel;\n            this.nextPanel = this.currentPanel;\n            this.currentPanel = temp;\n        }\n        else {\n            var temp = this.previousPanel;\n            this.previousPanel = this.currentPanel;\n            this.currentPanel = temp;\n        }\n    };\n    ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\n        var _this = this;\n        var previousDate = swipeDirection === this.touchLeftDirection ? this.nextPanel.selectedDate : this.previousPanel.selectedDate;\n        var args = {\n            action: 'date', cancel: false, previousDate: previousDate, currentDate: this.currentPanel.selectedDate\n        };\n        this.parent.trigger(events.navigating, args, function (navArgs) {\n            if (navArgs.cancel) {\n                _this.swapPanels(swipeDirection);\n                _this.cancelSwipe();\n            }\n            else {\n                _this.parent.activeView.setPanel(_this.currentPanel.element);\n                _this.parent.setProperties({ selectedDate: _this.currentPanel.selectedDate }, true);\n                var translateX = void 0;\n                if (_this.parent.enableRtl) {\n                    translateX = swipeDirection === _this.touchLeftDirection ?\n                        (_this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth) : 0;\n                }\n                else {\n                    translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\n                }\n                addClass([_this.element], cls.TRANSLATE_CLASS);\n                _this.element.style.transform = 'translatex(' + translateX + 'px)';\n                if (_this.parent.headerModule) {\n                    _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\n                }\n                _this.parent.renderModule.refreshDataManager();\n            }\n        });\n    };\n    ScheduleTouch.prototype.cancelSwipe = function () {\n        this.parent.activeView.setPanel(this.currentPanel.element);\n        this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\n        this.parent.activeView.getRenderDates();\n        this.parent.activeView.generateColumnLevels();\n        addClass([this.element], cls.TRANSLATE_CLASS);\n        var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\n        this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\n    };\n    ScheduleTouch.prototype.onTransitionEnd = function () {\n        removeClass([this.element], cls.TRANSLATE_CLASS);\n        this.element.style.transitionDuration = '';\n        this.element.style.transform = '';\n        if (this.previousPanel) {\n            remove(this.previousPanel.element);\n            this.previousPanel = null;\n            removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n        }\n        if (this.nextPanel) {\n            remove(this.nextPanel.element);\n            this.nextPanel = null;\n            removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n        }\n        this.currentPanel = null;\n        this.parent.activeView.getPanel().style.width = '';\n    };\n    ScheduleTouch.prototype.getTranslateX = function (element) {\n        var style = window.getComputedStyle(element);\n        return new WebKitCSSMatrix(style.webkitTransform).m41;\n    };\n    ScheduleTouch.prototype.setDimensions = function (element) {\n        element.style.width = (this.parent.element.clientWidth) + 'px';\n    };\n    ScheduleTouch.prototype.resetValues = function () {\n        this.currentPanel = null;\n        this.previousPanel = null;\n        this.nextPanel = null;\n        this.timeStampStart = null;\n        this.element.style.transform = '';\n        if (!isBlazor()) {\n            util.removeChildren(this.element);\n        }\n        removeClass([this.element], cls.TRANSLATE_CLASS);\n    };\n    /**\n     * @hidden\n     */\n    ScheduleTouch.prototype.destroy = function () {\n        this.touchObj.destroy();\n        EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\n        this.resetValues();\n    };\n    return ScheduleTouch;\n}());\nexport { ScheduleTouch };\n"]},"metadata":{},"sourceType":"module"}