{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\content\\\\message-list\\\\list-toolbar\\\\ListToolbar.jsx\";\nimport React, { PureComponent } from \"react\";\nimport Checkbox from \"../../../common/Checkbox\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { toggleSelected, modifyMessages } from \"../actions/message-list.actions\";\nimport Pager from \"../pager-buttons/PagerButtons\";\nimport ListActionButtons from \"./ListActionButtons\";\nexport class MessageToolbar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\n    this.modifyMessages = this.modifyMessages.bind(this);\n    this.state = {\n      selectedMessageIds: []\n    };\n  }\n\n  onSelectionChange(evt) {\n    const checked = evt.target.checked;\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\n      acc.push(el.id);\n      return acc;\n    }, []);\n    this.setState({\n      selectedMessageIds: messageIds\n    });\n    this.props.toggleSelected(messageIds, checked);\n  }\n\n  navigateToNextPage() {\n    this.props.navigateToNextPage(this.props.nextToken);\n  }\n\n  navigateToPrevPage() {\n    this.props.navigateToPrevPage(this.props.prevToken);\n  }\n\n  modifyMessages(addLabelIds, removeLabelIds) {\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\n\n    const actionParams = _objectSpread({}, addLabelIds && {\n      addLabelIds\n    }, {}, removeLabelIds && {\n      removeLabelIds\n    });\n\n    this.props.modifyMessages(_objectSpread({\n      ids\n    }, actionParams));\n  }\n\n  render() {\n    let checked = false;\n    let selectedMessages = [];\n\n    if (this.props.messagesResult) {\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\n      checked = this.props.messagesResult.messages.length > 0 && selectedMessages.length === this.props.messagesResult.messages.length;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"msg-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pl-4 py-4 pr-6 d-flex align-items-center bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex align-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: checked,\n      onChange: this.onSelectionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ml-auto p-2 bd-highlight test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, selectedMessages.length ? React.createElement(ListActionButtons, {\n      onClick: this.modifyMessages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : null))), React.createElement(Pager, {\n      nextToken: this.props.nextToken,\n      prevToken: this.props.prevToken,\n      navigateToPrevPage: this.navigateToPrevPage,\n      navigateToNextPage: this.navigateToNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  messagesResult: state.messagesResult\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  toggleSelected,\n  modifyMessages\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageToolbar);","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/content/message-list/list-toolbar/ListToolbar.jsx"],"names":["React","PureComponent","Checkbox","connect","bindActionCreators","toggleSelected","modifyMessages","Pager","ListActionButtons","MessageToolbar","constructor","props","onSelectionChange","bind","navigateToNextPage","navigateToPrevPage","state","selectedMessageIds","evt","checked","target","messageIds","messagesResult","messages","reduce","acc","el","push","id","setState","nextToken","prevToken","addLabelIds","removeLabelIds","ids","filter","selected","map","actionParams","render","selectedMessages","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport Checkbox from \"../../../common/Checkbox\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  toggleSelected,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\nimport Pager from \"../pager-buttons/PagerButtons\";\r\nimport ListActionButtons from \"./ListActionButtons\";\r\n\r\nexport class MessageToolbar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n    this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n    this.modifyMessages = this.modifyMessages.bind(this);\r\n\r\n    this.state = {\r\n      selectedMessageIds: []\r\n    };\r\n  }\r\n\r\n  onSelectionChange(evt) {\r\n    const checked = evt.target.checked;\r\n\r\n    const messageIds = this.props.messagesResult.messages.reduce((acc, el) => {\r\n      acc.push(el.id);\r\n      return acc;\r\n    }, []);\r\n\r\n    this.setState({\r\n      selectedMessageIds: messageIds\r\n    });\r\n\r\n    this.props.toggleSelected(messageIds, checked);\r\n  }\r\n\r\n  navigateToNextPage() {\r\n    this.props.navigateToNextPage(this.props.nextToken);\r\n  }\r\n\r\n  navigateToPrevPage() {\r\n    this.props.navigateToPrevPage(this.props.prevToken);\r\n  }\r\n\r\n  modifyMessages(addLabelIds, removeLabelIds) {\r\n    const ids = this.props.messagesResult.messages.filter(el => el.selected).map(el => el.id);\r\n    const actionParams = {\r\n      ...addLabelIds && {addLabelIds},\r\n      ...removeLabelIds && {removeLabelIds}\r\n    };\r\n    this.props.modifyMessages({ ids, ...actionParams});\r\n  }\r\n\r\n  render() {\r\n\r\n    let checked = false;\r\n    let selectedMessages = [];\r\n\r\n    if (this.props.messagesResult) {\r\n      selectedMessages = this.props.messagesResult.messages.filter(el => el.selected);\r\n      checked = this.props.messagesResult.messages.length > 0 &&  selectedMessages.length === this.props.messagesResult.messages.length;\r\n    }\r\n\r\n    return (\r\n      <div className=\"msg-toolbar\">\r\n        <div className=\"pl-4 py-4 pr-6 d-flex align-items-center bd-highlight\">\r\n          <div className=\"d-flex align-content-center align-items-center\">\r\n            <div>\r\n              <Checkbox checked={checked} onChange={this.onSelectionChange} />\r\n            </div>\r\n            <div />\r\n\r\n            <div className=\"ml-auto p-2 bd-highlight test\">\r\n              <div>\r\n                {selectedMessages.length ? (\r\n                  <ListActionButtons onClick={this.modifyMessages} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Pager\r\n            nextToken={this.props.nextToken}\r\n            prevToken={this.props.prevToken}\r\n            navigateToPrevPage={this.navigateToPrevPage}\r\n            navigateToNextPage={this.navigateToNextPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  messagesResult: state.messagesResult\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      toggleSelected,\r\n      modifyMessages\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MessageToolbar);\r\n"]},"metadata":{},"sourceType":"module"}