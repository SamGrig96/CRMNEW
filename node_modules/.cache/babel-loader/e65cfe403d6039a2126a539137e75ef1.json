{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\content\\\\message-list\\\\message-content\\\\MessageContent.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { bindActionCreators, compose } from \"redux\";\nimport { getEmailMessage, modifyMessages } from \"../actions/message-list.actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\nimport \"./messageContent.scss\";\nexport class MessageContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: undefined\n    };\n    this.iframeRef = React.createRef();\n    this.modifyMessage = this.modifyMessage.bind(this);\n  }\n\n  componentDidMount(prevProps) {\n    const messageId = this.props.match.params.id;\n    console.log(this.props.match.path, \"message\");\n    this.props.getEmailMessage(messageId);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props, \"props\");\n    const emailMessageResult = this.props.emailMessageResult;\n    console.log(emailMessageResult, 'emailMessageResult ');\n\n    if (!emailMessageResult.loading) {\n      if (!emailMessageResult.failed) {\n        if (this.iframeRef.current) {\n          const body = this.iframeRef.current.contentWindow.document.body;\n          body.style.margin = \"0px\";\n          body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\n          body.style.fontSize = \"13px\";\n          body.innerHTML = this.props.emailMessageResult.body;\n        }\n      } else {\n        if (!this.state.errorMessage) {\n          this.setState({\n            // errorMessage: emailMessageResult.error.result.error.message,\n            modal: true\n          });\n        }\n      }\n    }\n  }\n\n  renderSpinner() {\n    return React.createElement(\"div\", {\n      className: \"d-flex h-100 justify-content-center align-items-center  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSpinner,\n      spin: true,\n      size: \"5x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n  renderErrorModal() {\n    return React.createElement(Redirect, {\n      to: \"/notfound\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  modifyMessage(addLabelIds, removeLabelIds) {\n    const id = this.props.emailMessageResult.result.id;\n\n    const actionParams = _objectSpread({}, addLabelIds && {\n      addLabelIds\n    }, {}, removeLabelIds && {\n      removeLabelIds\n    });\n\n    this.props.modifyMessages(_objectSpread({\n      ids: [id]\n    }, actionParams));\n    this.props.history.goBack();\n  }\n\n  render() {\n    if (this.props.emailMessageResult.loading) {\n      return this.renderSpinner();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center message-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.emailMessageResult.loading ? this.renderSpinner() : null, this.state.errorMessage ? this.renderErrorModal() : React.createElement(\"iframe\", {\n      ref: this.iframeRef,\n      title: \"Message contents\",\n      id: \"message-iframe\",\n      style: {\n        display: this.props.emailMessageResult.loading ? \"none\" : \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  emailMessageResult: state.emailMessageResult\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getEmailMessage,\n  modifyMessages\n}, dispatch);\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(MessageContent);","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/content/message-list/message-content/MessageContent.jsx"],"names":["React","Component","connect","Redirect","withRouter","bindActionCreators","compose","getEmailMessage","modifyMessages","FontAwesomeIcon","faSpinner","MessageToolbar","MessageContent","constructor","props","state","errorMessage","undefined","iframeRef","createRef","modifyMessage","bind","componentDidMount","prevProps","messageId","match","params","id","console","log","path","componentDidUpdate","emailMessageResult","loading","failed","current","body","contentWindow","document","style","margin","fontFamily","fontSize","innerHTML","setState","modal","renderSpinner","renderErrorModal","addLabelIds","removeLabelIds","result","actionParams","ids","history","goBack","render","display","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport {\r\n  getEmailMessage,\r\n  modifyMessages\r\n} from \"../actions/message-list.actions\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nimport MessageToolbar from \"../message-toolbar/MessageToolbar\";\r\n\r\nimport \"./messageContent.scss\";\r\n\r\nexport class MessageContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errorMessage: undefined\r\n    \r\n    };\r\n\r\n    this.iframeRef = React.createRef();\r\n    this.modifyMessage = this.modifyMessage.bind(this);\r\n  }\r\n\r\n  componentDidMount(prevProps) {\r\n    \r\n    const messageId = this.props.match.params.id;\r\n    console.log(this.props.match.path,\"message\")\r\n    this.props.getEmailMessage(messageId);\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log(this.props,\"props\")\r\n    const { emailMessageResult } = this.props;\r\n    console.log(emailMessageResult ,'emailMessageResult ');\r\n    \r\n    if (!emailMessageResult.loading) {\r\n      if (!emailMessageResult.failed) {\r\n        if (this.iframeRef.current) {\r\n          const { body } = this.iframeRef.current.contentWindow.document;\r\n          body.style.margin = \"0px\";\r\n          body.style.fontFamily = \"Arial, Helvetica, sans-serif\";\r\n          body.style.fontSize = \"13px\";\r\n          body.innerHTML = this.props.emailMessageResult.body;\r\n        }\r\n      } else {\r\n        if (!this.state.errorMessage) {\r\n          this.setState({\r\n            // errorMessage: emailMessageResult.error.result.error.message,\r\n            modal: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"5x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderErrorModal() {\r\n    return <Redirect to=\"/notfound\" />;\r\n  }\r\n\r\n  modifyMessage(addLabelIds, removeLabelIds) {\r\n    const id = this.props.emailMessageResult.result.id;\r\n    \r\n    const actionParams = {\r\n      ...(addLabelIds && { addLabelIds }),\r\n      ...(removeLabelIds && { removeLabelIds })\r\n    };\r\n    this.props.modifyMessages({ ids: [id], ...actionParams });\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.emailMessageResult.loading) {\r\n      return this.renderSpinner();\r\n    }\r\n\r\n    return (\r\n     \r\n     \r\n        <div className=\"d-flex justify-content-center align-items-center message-content\">\r\n          {this.props.emailMessageResult.loading ? this.renderSpinner() : null}\r\n          {this.state.errorMessage ? (\r\n            this.renderErrorModal()\r\n          ) : (\r\n            <iframe\r\n              ref={this.iframeRef}\r\n              title=\"Message contents\"\r\n              id=\"message-iframe\"\r\n              style={{\r\n                display: this.props.emailMessageResult.loading\r\n                  ? \"none\"\r\n                  : \"block\"\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  emailMessageResult: state.emailMessageResult\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      getEmailMessage,\r\n      modifyMessages\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )\r\n)(MessageContent);\r\n"]},"metadata":{},"sourceType":"module"}