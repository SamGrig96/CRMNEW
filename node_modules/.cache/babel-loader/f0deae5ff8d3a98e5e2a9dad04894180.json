{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{MAX_RESULTS}from\"../constants\";import{getBody,isHTML}from'./utils';var getLabelDetailPromise=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(labelId){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return window.gapi.client.gmail.users.labels.get({userId:\"me\",id:labelId});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function getLabelDetailPromise(_x){return _ref.apply(this,arguments);};}();var getLabelDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(labelList){var labelPromises;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:labelPromises=labelList.result.labels.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(el){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getLabelDetailPromise(el.id);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref3.apply(this,arguments);};}());return _context3.abrupt(\"return\",Promise.all(labelPromises));case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function getLabelDetails(_x2){return _ref2.apply(this,arguments);};}();export var getLabelList=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var labelIds,labelDetails;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return window.gapi.client.gmail.users.labels.list({userId:\"me\"});case 2:labelIds=_context4.sent;_context4.next=5;return getLabelDetails(labelIds);case 5:labelDetails=_context4.sent;return _context4.abrupt(\"return\",labelDetails.map(function(el){return el.result;}));case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function getLabelList(){return _ref4.apply(this,arguments);};}();export var getMessageList=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5){var labelIds,maxResults,q,pageToken,rawList,messageHeaders,flattenedMessages;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:labelIds=_ref5.labelIds,maxResults=_ref5.maxResults,q=_ref5.q,pageToken=_ref5.pageToken;_context5.next=3;return getMessageRawList({labelIds:labelIds,maxResults:maxResults,pageToken:pageToken,q:q});case 3:rawList=_context5.sent;_context5.next=6;return getMessageHeaders(rawList);case 6:messageHeaders=_context5.sent;_context5.next=9;return flattenMessagesWithLabel(messageHeaders.messages,labelIds);case 9:flattenedMessages=_context5.sent;return _context5.abrupt(\"return\",_objectSpread(_objectSpread({},messageHeaders),{},{messages:flattenedMessages.messages,label:flattenedMessages.label}));case 11:case\"end\":return _context5.stop();}}},_callee5);}));return function getMessageList(_x4){return _ref6.apply(this,arguments);};}();export var flattenMessagesWithLabel=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(messages,labelIds){var labels;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(labelIds){_context6.next=2;break;}return _context6.abrupt(\"return\",{messages:messages,label:{result:{messagesTotal:0}}});case 2:_context6.next=4;return window.gapi.client.gmail.users.labels.get({userId:\"me\",id:labelIds[0]});case 4:labels=_context6.sent;return _context6.abrupt(\"return\",{messages:messages,label:labels});case 6:case\"end\":return _context6.stop();}}},_callee6);}));return function flattenMessagesWithLabel(_x5,_x6){return _ref7.apply(this,arguments);};}();var getMessageRawList=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref8){var labelIds,maxResults,pageToken,_ref8$q,q;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:labelIds=_ref8.labelIds,maxResults=_ref8.maxResults,pageToken=_ref8.pageToken,_ref8$q=_ref8.q,q=_ref8$q===void 0?\"\":_ref8$q;_context7.next=3;return window.gapi.client.gmail.users.messages.list(_objectSpread(_objectSpread({userId:\"me\",q:q,maxResults:maxResults||MAX_RESULTS},labelIds&&{labelIds:labelIds}),pageToken&&{pageToken:pageToken}));case 3:return _context7.abrupt(\"return\",_context7.sent);case 4:case\"end\":return _context7.stop();}}},_callee7);}));return function getMessageRawList(_x7){return _ref9.apply(this,arguments);};}();var getMessageHeaders=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(messageRawList){var messageResult,headerPromises,messages;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:messageResult=messageRawList.result;headerPromises=(messageResult.messages||[]).map(/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(el){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return getMessageHeader(el.id);case 2:return _context8.abrupt(\"return\",_context8.sent);case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function(_x9){return _ref11.apply(this,arguments);};}());_context9.next=4;return Promise.all(headerPromises);case 4:messages=_context9.sent;return _context9.abrupt(\"return\",_objectSpread(_objectSpread({},messageResult),{},{messages:messages}));case 6:case\"end\":return _context9.stop();}}},_callee9);}));return function getMessageHeaders(_x8){return _ref10.apply(this,arguments);};}();var getMessageHeader=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id){var messages;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return window.gapi.client.gmail.users.messages.get({userId:\"me\",id:id,format:\"metadata\",metadataHeaders:[\"Delivered-To\",\"X-Received\",\"To\",\"Message-ID\",\"Date\",\"Content-Type\",\"MIME-Version\",\"Reply-To\",\"From\",\"Subject\",\"Return-Path\"// See https://www.iana.org/assignments/message-headers/message-headers.xhtml\n// for more headers\n]});case 2:messages=_context10.sent;return _context10.abrupt(\"return\",messages.result);case 4:case\"end\":return _context10.stop();}}},_callee10);}));return function getMessageHeader(_x10){return _ref12.apply(this,arguments);};}();export var getMessage=/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(messageId){var response,result,body;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return window.gapi.client.gmail.users.messages.get({userId:\"me\",id:messageId,format:\"full\"});case 2:response=_context11.sent;result=response.result;body=getBody(result.payload,\"text/html\");if(body===\"\"){body=getBody(result.payload,\"text/plain\");body=body.replace(/(\\r\\n)+/g,'<br data-break=\"rn-1\">').replace(/[\\n\\r]+/g,'<br data-break=\"nr\">');}if(body!==\"\"&&!isHTML(body)){body=body.replace(/(\\r\\n)+/g,'<div data-break=\"rn-1\" style=\"margin-bottom:10px\"></div>').replace(/[\\n\\r]+/g,'<br data-break=\"nr\">');}return _context11.abrupt(\"return\",{body:body,headers:response.headers,result:_objectSpread(_objectSpread({},result),{},{messageHeaders:response.result.payload.headers,payload:undefined})});case 8:case\"end\":return _context11.stop();}}},_callee11);}));return function getMessage(_x11){return _ref13.apply(this,arguments);};}();export var sendMessage=function sendMessage(_ref14){var headers=_ref14.headers,body=_ref14.body;var email=\"\";var headersClone=_objectSpread({},headers);headersClone[\"Content-Type\"]=\"text/html; charset='UTF-8'\";headersClone[\"Content-Transfer-Encoding\"]=\"base64\";for(var header in headersClone){email+=\"\".concat(header,\": \").concat(headersClone[header],\"\\r\\n\");}email+=\"\\r\\n<html><body>\".concat(body,\"</body></html>\");var encodedEmail=unescape(encodeURIComponent(email));return window.gapi.client.gmail.users.messages.send({userId:\"me\",resource:{raw:window.btoa(encodedEmail).replace(/\\+/g,\"-\").replace(/\\//g,\"_\")}});};export var batchModify=/*#__PURE__*/function(){var _ref16=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_ref15){var ids,_ref15$addLabelIds,addLabelIds,_ref15$removeLabelIds,removeLabelIds,batchModifyResult;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:ids=_ref15.ids,_ref15$addLabelIds=_ref15.addLabelIds,addLabelIds=_ref15$addLabelIds===void 0?[]:_ref15$addLabelIds,_ref15$removeLabelIds=_ref15.removeLabelIds,removeLabelIds=_ref15$removeLabelIds===void 0?[]:_ref15$removeLabelIds;_context12.next=3;return window.gapi.client.gmail.users.messages.batchModify({userId:\"me\",ids:ids,addLabelIds:addLabelIds,removeLabelIds:removeLabelIds});case 3:batchModifyResult=_context12.sent;return _context12.abrupt(\"return\",ids);case 5:case\"end\":return _context12.stop();}}},_callee12);}));return function batchModify(_x12){return _ref16.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/api/index.jsx"],"names":["MAX_RESULTS","getBody","isHTML","getLabelDetailPromise","labelId","window","gapi","client","gmail","users","labels","get","userId","id","getLabelDetails","labelList","labelPromises","result","map","el","Promise","all","getLabelList","list","labelIds","labelDetails","getMessageList","maxResults","q","pageToken","getMessageRawList","rawList","getMessageHeaders","messageHeaders","flattenMessagesWithLabel","messages","flattenedMessages","label","messagesTotal","messageRawList","messageResult","headerPromises","getMessageHeader","format","metadataHeaders","getMessage","messageId","response","body","payload","replace","headers","undefined","sendMessage","email","headersClone","header","encodedEmail","unescape","encodeURIComponent","send","resource","raw","btoa","batchModify","ids","addLabelIds","removeLabelIds","batchModifyResult"],"mappings":"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","sourcesContent":["import { MAX_RESULTS } from \"../constants\";\r\nimport {getBody, isHTML} from './utils';\r\n\r\nconst getLabelDetailPromise = async (labelId) => {\r\n  return await window.gapi.client.gmail.users.labels.get({\r\n      userId: \"me\",\r\n      id: labelId\r\n    });\r\n};\r\n\r\nconst getLabelDetails = async (labelList) => {\r\n  const labelPromises = labelList.result.labels.map(async (el) => {\r\n    return await getLabelDetailPromise(el.id);\r\n  });\r\n\r\n  return Promise.all(labelPromises);\r\n};\r\n\r\nexport const getLabelList = async () => {\r\n  // console.log('hello', getLabelList);\r\n  const labelIds = await window.gapi.client.gmail.users.labels.list({userId: \"me\"});\r\n  const labelDetails = await getLabelDetails(labelIds);\r\n  return labelDetails.map(el => el.result);\r\n}\r\n\r\nexport const getMessageList = async ({ labelIds, maxResults, q, pageToken }) => {\r\n  const rawList = await getMessageRawList({ labelIds, maxResults, pageToken, q });\r\n  const messageHeaders = await getMessageHeaders(rawList);\r\n  const flattenedMessages = await flattenMessagesWithLabel(messageHeaders.messages, labelIds);\r\n  return {\r\n    ...messageHeaders,\r\n    messages: flattenedMessages.messages,\r\n    label: flattenedMessages.label\r\n  };\r\n}\r\n\r\nexport const flattenMessagesWithLabel = async (messages, labelIds) => {\r\n  if (!labelIds) {\r\n    return {\r\n      messages,\r\n      label: {\r\n        result: {\r\n          messagesTotal: 0\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  const labels = await window.gapi.client.gmail.users.labels.get({userId: \"me\", id: labelIds[0]});\r\n  \r\n  return {\r\n    messages,\r\n    label: labels\r\n  };\r\n}\r\n\r\nconst getMessageRawList = async ({ labelIds, maxResults, pageToken, q = \"\" }) => {\r\n  return await window.gapi.client.gmail.users.messages\r\n    .list({\r\n      userId: \"me\",\r\n      q,\r\n      maxResults: maxResults || MAX_RESULTS,\r\n      ...(labelIds && {labelIds}),\r\n      ...(pageToken && { pageToken })\r\n    });\r\n}\r\n \r\nconst getMessageHeaders = async (messageRawList) => {\r\n  const messageResult = messageRawList.result;\r\n\r\n  const headerPromises = (messageResult.messages || []).map(async (el) => {\r\n    return await getMessageHeader(el.id);\r\n  });\r\n\r\n  const messages = await Promise.all(headerPromises);\r\n\r\n  return {\r\n    ...messageResult,\r\n    messages\r\n  };  \r\n};\r\n\r\nconst getMessageHeader = async (id) => {\r\n    const messages = await window.gapi.client.gmail.users.messages\r\n      .get({\r\n        userId: \"me\",\r\n        id: id,\r\n        format: \"metadata\",\r\n        metadataHeaders: [\r\n          \"Delivered-To\",\r\n          \"X-Received\",\r\n          \"To\",\r\n          \"Message-ID\",\r\n          \"Date\",\r\n          \"Content-Type\",\r\n          \"MIME-Version\",\r\n          \"Reply-To\",\r\n          \"From\",\r\n          \"Subject\",\r\n          \"Return-Path\",\r\n          // See https://www.iana.org/assignments/message-headers/message-headers.xhtml\r\n          // for more headers\r\n        ]\r\n      });\r\n      return messages.result;\r\n};\r\n\r\nexport const getMessage = async(messageId) => {  \r\n  const response = await window.gapi.client.gmail.users.messages\r\n  .get({\r\n    userId: \"me\",\r\n    id: messageId,\r\n    format: \"full\"\r\n  });\r\n\r\n  const { result } = response;\r\n\r\n  let body = getBody(result.payload, \"text/html\");        \r\n\r\n  if (body === \"\") {\r\n    body = getBody(result.payload, \"text/plain\");\r\n    body = body.replace(/(\\r\\n)+/g, '<br data-break=\"rn-1\">').replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\r\n  }\r\n\r\n  if (body !== \"\" && !isHTML(body)) {\r\n    body = body.replace(/(\\r\\n)+/g, '<div data-break=\"rn-1\" style=\"margin-bottom:10px\"></div>').replace(/[\\n\\r]+/g, '<br data-break=\"nr\">');\r\n  }\r\n    \r\n  return {\r\n    body,\r\n    headers: response.headers,\r\n    result: { ...result, messageHeaders: response.result.payload.headers, payload: undefined }\r\n  };\r\n};\r\n\r\nexport const sendMessage = ({ headers, body }) => {\r\n  let email = \"\";\r\n\r\n  const headersClone = { ...headers };\r\n  headersClone[\"Content-Type\"] = \"text/html; charset='UTF-8'\";\r\n  headersClone[\"Content-Transfer-Encoding\"] = \"base64\";\r\n\r\n  for (let header in headersClone) {\r\n    email += `${header}: ${headersClone[header]}\\r\\n`;\r\n  }\r\n\r\n  email += `\\r\\n<html><body>${body}</body></html>`;\r\n  const encodedEmail = unescape(encodeURIComponent(email));\r\n\r\n  return window.gapi.client.gmail.users.messages.send({\r\n    userId: \"me\",\r\n    resource: {\r\n      raw: window.btoa(encodedEmail).replace(/\\+/g, \"-\").replace(/\\//g, \"_\")\r\n    }\r\n  });\r\n};\r\n\r\nexport const batchModify = async ({ids, addLabelIds = [], removeLabelIds = []}) => {\r\n  const batchModifyResult = await window.gapi.client.gmail.users.messages\r\n    .batchModify({\r\n      userId: \"me\",\r\n      ids,\r\n      addLabelIds,\r\n      removeLabelIds\r\n    });\r\n\r\n    return ids;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}