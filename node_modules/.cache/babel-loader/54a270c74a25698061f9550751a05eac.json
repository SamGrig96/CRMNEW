{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{PureComponent}from\"react\";import groupBy from\"lodash/groupBy\";import sortBy from\"lodash/sortBy\";import Menu from\"../menu/menu\";import{faInbox,faEnvelope,faTrash,faCircle,faExclamationCircle}from\"@fortawesome/free-solid-svg-icons\";import LabelItem from\"./LabelItem\";import\"./sidebar.scss\";export var Sidebar=/*#__PURE__*/function(_PureComponent){_inherits(Sidebar,_PureComponent);var _super=_createSuper(Sidebar);function Sidebar(props){var _this;_classCallCheck(this,Sidebar);_this=_super.call(this,props);_this.state={selectedLabel:props.pathname};//this.renderLabels = this.renderLabels.bind(this);\n_this.navigateToList=_this.navigateToList.bind(_assertThisInitialized(_this));return _this;}_createClass(Sidebar,[{key:\"componentDidMount\",value:function componentDidMount(){//this.props.getLabelList(); //.then(labels => {});\n/*  */ //this.props.getLabelMessages();\n}},{key:\"navigateToList\",value:function navigateToList(evt,labelId){var label=this.props.labelsResult.labels.find(function(el){return el.id===labelId;});this.props.onLabelClick(label||{id:\"\"});}},{key:\"renderItems\",value:function renderItems(labelList){if(labelList.length===0){return/*#__PURE__*/React.createElement(\"div\",null);}var labels=labelList.reduce(function(acc,el){acc.push(el);return acc;},[]);var labelGroups=groupBy(labels,\"type\");console.log('==================',labelGroups);// const visibleLabels = labelGroups.user.filter(\n//   el =>\n//     // el.labelListVisibility === \"labelShow\" ||\n//     // el.labelListVisibility === \"labelShowIfUnread\" ||\n//     !el.labelListVisibility || true\n// );\n// const sortedLabels = sortBy(visibleLabels, \"name\");\n// // console.log(visibleLabels)\n//\n// return (\n//   <React.Fragment>\n//     {this.renderFolders(labelGroups.system)}\n//     {this.renderLabels(sortedLabels)}\n//   </React.Fragment>\n// );\n}},{key:\"renderFolders\",value:function renderFolders(labels){var inboxLabel=_objectSpread(_objectSpread({},labels.find(function(el){return el.id===\"INBOX\";})),{},{name:\"Inbox\",icon:faInbox});var sentLabel=_objectSpread(_objectSpread({},labels.find(function(el){return el.id===\"SENT\";})),{},{messagesUnread:0,name:\"Sent\",icon:faEnvelope});var trashLabel=_objectSpread(_objectSpread({},labels.find(function(el){return el.id===\"TRASH\";})),{},{messagesUnread:0,name:\"Trash\",icon:faTrash});var spamLabel=_objectSpread(_objectSpread({},labels.find(function(el){return el.id===\"SPAM\";})),{},{name:\"Spam\",icon:faExclamationCircle});var folders=[inboxLabel,sentLabel,trashLabel,spamLabel];// return (\n//   // <React.Fragment>\n//   //   <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\n//   //     Folders\n//   //   </li>\n//   //   {folders.map(el => {\n//   //     const iconProps = { icon: el.icon, size: \"lg\" };\n//   //     return (\n//   //       <LabelItem\n//   //         key={el.id + \"_label\"}\n//   //         onClick={this.navigateToList}\n//   //         name={el.name}\n//   //         id={el.id}\n//   //         messagesUnread={el.messagesUnread}\n//   //         iconProps={iconProps}\n//   //         selected={el.selected}\n//   //       />\n//   //     );\n//   //   })}\n//   // </React.Fragment>\n// );\n}},{key:\"renderLabels\",value:function renderLabels(labels){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"li\",{key:\"olders-nav-title\",className:\"pl-2 nav-title\"},\"Labels\"),labels.map(function(el){var iconProps={icon:faCircle,color:el.color?el.color.backgroundColor:\"gainsboro\",size:\"sm\"};return/*#__PURE__*/React.createElement(LabelItem,{key:el.id+\"_label\",onClick:_this2.navigateToList,name:el.name,id:el.id,messagesUnread:el.messagesUnread,iconProps:iconProps,selected:el.selected});}));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(Menu,null),\" */}\");}}]);return Sidebar;}(PureComponent);export default Sidebar;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/sidebar/Sidebar.jsx"],"names":["React","PureComponent","groupBy","sortBy","Menu","faInbox","faEnvelope","faTrash","faCircle","faExclamationCircle","LabelItem","Sidebar","props","state","selectedLabel","pathname","navigateToList","bind","evt","labelId","label","labelsResult","labels","find","el","id","onLabelClick","labelList","length","reduce","acc","push","labelGroups","console","log","inboxLabel","name","icon","sentLabel","messagesUnread","trashLabel","spamLabel","folders","map","iconProps","color","backgroundColor","size","selected"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\nimport groupBy from \"lodash/groupBy\";\r\n\r\nimport sortBy from \"lodash/sortBy\";\r\nimport Menu from \"../menu/menu\";\r\nimport {\r\n  faInbox,\r\n  faEnvelope,\r\n  faTrash,\r\n  faCircle,\r\n  faExclamationCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport LabelItem from \"./LabelItem\";\r\n\r\nimport \"./sidebar.scss\";\r\n\r\nexport class Sidebar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedLabel: props.pathname\r\n    };\r\n\r\n    //this.renderLabels = this.renderLabels.bind(this);\r\n    this.navigateToList = this.navigateToList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.props.getLabelList(); //.then(labels => {});\r\n    /*  */\r\n    //this.props.getLabelMessages();\r\n  }\r\n\r\n  navigateToList(evt, labelId) {\r\n    const label = this.props.labelsResult.labels.find(el => el.id === labelId);\r\n    this.props.onLabelClick(label || { id: \"\" });\r\n  }\r\n\r\n  renderItems(labelList) {\r\n    if (labelList.length === 0) {\r\n      return <div />;\r\n    }\r\n\r\n    const labels = labelList.reduce((acc, el) => {\r\n      acc.push(el);\r\n      return acc;\r\n    }, []);\r\n\r\n    const labelGroups = groupBy(labels, \"type\");\r\n    console.log('==================', labelGroups);\r\n\r\n    // const visibleLabels = labelGroups.user.filter(\r\n    //   el =>\r\n    //     // el.labelListVisibility === \"labelShow\" ||\r\n    //     // el.labelListVisibility === \"labelShowIfUnread\" ||\r\n    //     !el.labelListVisibility || true\r\n    // );\r\n    // const sortedLabels = sortBy(visibleLabels, \"name\");\r\n    // // console.log(visibleLabels)\r\n    //\r\n    // return (\r\n    //   <React.Fragment>\r\n    //     {this.renderFolders(labelGroups.system)}\r\n    //     {this.renderLabels(sortedLabels)}\r\n    //   </React.Fragment>\r\n    // );\r\n  }\r\n\r\n  renderFolders(labels) {\r\n    const inboxLabel = {\r\n      ...labels.find(el => el.id === \"INBOX\"),\r\n      name: \"Inbox\",\r\n      icon: faInbox\r\n    };\r\n    const sentLabel = {\r\n      ...labels.find(el => el.id === \"SENT\"),\r\n      messagesUnread: 0,\r\n      name: \"Sent\",\r\n      icon: faEnvelope\r\n    };\r\n    const trashLabel = {\r\n      ...labels.find(el => el.id === \"TRASH\"),\r\n      messagesUnread: 0,\r\n      name: \"Trash\",\r\n      icon: faTrash\r\n    };\r\n    const spamLabel = {\r\n      ...labels.find(el => el.id === \"SPAM\"),\r\n      name: \"Spam\",\r\n      icon: faExclamationCircle\r\n    };\r\n\r\n    const folders = [inboxLabel, sentLabel, trashLabel, spamLabel];\r\n\r\n    // return (\r\n    //   // <React.Fragment>\r\n    //   //   <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n    //   //     Folders\r\n    //   //   </li>\r\n    //   //   {folders.map(el => {\r\n    //   //     const iconProps = { icon: el.icon, size: \"lg\" };\r\n    //   //     return (\r\n    //   //       <LabelItem\r\n    //   //         key={el.id + \"_label\"}\r\n    //   //         onClick={this.navigateToList}\r\n    //   //         name={el.name}\r\n    //   //         id={el.id}\r\n    //   //         messagesUnread={el.messagesUnread}\r\n    //   //         iconProps={iconProps}\r\n    //   //         selected={el.selected}\r\n    //   //       />\r\n    //   //     );\r\n    //   //   })}\r\n    //   // </React.Fragment>\r\n    // );\r\n  }\r\n\r\n  renderLabels(labels) {\r\n    return (\r\n      <React.Fragment>\r\n        <li key=\"olders-nav-title\" className=\"pl-2 nav-title\">\r\n          Labels\r\n        </li>\r\n        {labels.map(el => {\r\n          const iconProps = {\r\n            icon: faCircle,\r\n            color: el.color ? el.color.backgroundColor : \"gainsboro\",\r\n            size: \"sm\"\r\n          };\r\n          return (\r\n            <LabelItem\r\n              key={el.id + \"_label\"}\r\n              onClick={this.navigateToList}\r\n              name={el.name}\r\n              id={el.id}\r\n              messagesUnread={el.messagesUnread}\r\n              iconProps={iconProps}\r\n              selected={el.selected}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"\">\r\n        <Menu />\r\n         {/* <div className=\"compose-panel\">\r\n          <div className=\"\">\r\n            <ComposeMessage\r\n              subject=\"\"\r\n              to=\"\"\r\n            >\r\n            \r\n              <button className=\"btn btn-dark align-self-center w-150 font-weight-bold\">\r\n                 Compose\r\n             </button>\r\n            </ComposeMessage>\r\n\r\n          </div> \r\n\r\n        </div> */}\r\n        {/* <Link to='/sent'>\r\n          <button\r\n              className=\"btn btn-red align-self-center w-150 font-weight-bold, gmailClass\">\r\n            Sent\r\n          </button>\r\n        </Link>\r\n        <Link to='/inbox'>\r\n          <button\r\n              className=\"btn btn-red align-self-center w-150 font-weight-bold, gmailClass\">\r\n            Inbox\r\n          </button>\r\n        </Link>\r\n        <Link to='/spam'>\r\n          <button\r\n              className=\"btn btn-red align-self-center w-150 font-weight-bold, gmailClass\">\r\n            Spam\r\n          </button>\r\n        </Link>\r\n\r\n        <Link to='/trash'>\r\n          <button\r\n              className=\"btn btn-red align-self-center w-150 font-weight-bold, gmailClass\">\r\n            Trash\r\n          </button>\r\n        </Link> */} */}\r\n\r\n        {/* <PerfectScrollbar\r\n          component=\"ul\"\r\n          className=\"d-flex flex-column border-0 m-0 sidebar\"\r\n        >\r\n          {this.renderItems(this.props.labelsResult.labels)}\r\n        </PerfectScrollbar> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}