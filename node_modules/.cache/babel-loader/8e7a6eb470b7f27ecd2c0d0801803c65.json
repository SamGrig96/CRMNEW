{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { addClass, Browser, EventHandler, closest, extend, formatUnit, setStyleAttribute, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement, isBlazor } from '@syncfusion/ej2-base';\nimport { ActionBase } from '../actions/action-base';\nimport * as util from '../base/util';\nimport * as event from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport { MonthEvent } from '../event-renderer/month';\n/**\n * Schedule events resize actions\n */\n\nvar Resize =\n/** @class */\nfunction (_super) {\n  __extends(Resize, _super);\n\n  function Resize() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Resize.prototype.wireResizeEvent = function (element) {\n    var _this = this;\n\n    var resizeElement = [].slice.call(element.querySelectorAll('.' + cls.EVENT_RESIZE_CLASS));\n    resizeElement.forEach(function (element) {\n      return EventHandler.add(element, Browser.touchStartEvent, _this.resizeStart, _this);\n    });\n  };\n\n  Resize.prototype.resizeHelper = function () {\n    var _this = this;\n\n    if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.activeViewOptions.group.allowGroupEdit) {\n      this.actionObj.originalElement.forEach(function (element, index) {\n        var cloneElement = _this.createCloneElement(element);\n\n        _this.actionObj.cloneElement[index] = cloneElement;\n\n        if (_this.actionObj.element === element) {\n          _this.actionObj.clone = cloneElement;\n        }\n      });\n    } else {\n      this.actionObj.clone = this.createCloneElement(this.actionObj.element);\n      this.actionObj.cloneElement = [this.actionObj.clone];\n      this.actionObj.originalElement = [this.actionObj.element];\n    }\n  };\n\n  Resize.prototype.resizeStart = function (e) {\n    var _this = this;\n\n    this.actionObj.action = 'resize';\n    this.actionObj.slotInterval = this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount;\n    this.actionObj.interval = this.actionObj.slotInterval;\n    var resizeTarget = closest(e.target, '.' + cls.EVENT_RESIZE_CLASS);\n    this.actionObj.element = closest(resizeTarget, '.' + cls.APPOINTMENT_CLASS);\n    this.actionObj.event = this.parent.eventBase.getEventByGuid(this.actionObj.element.getAttribute('data-guid'));\n    var eventObj = extend({}, this.actionObj.event, null, true);\n    var resizeArgs = {\n      cancel: false,\n      data: eventObj,\n      element: this.actionObj.element,\n      event: e,\n      interval: this.actionObj.interval,\n      scroll: {\n        enable: true,\n        scrollBy: 30,\n        timeDelay: 100\n      }\n    };\n    this.parent.trigger(event.resizeStart, resizeArgs, function (resizeEventArgs) {\n      if (resizeEventArgs.cancel) {\n        return;\n      }\n\n      if (isBlazor()) {\n        resizeEventArgs.element = getElement(resizeEventArgs.element);\n      }\n\n      _this.actionClass('addClass');\n\n      _this.parent.uiStateValues.action = true;\n      _this.resizeEdges = {\n        left: resizeTarget.classList.contains(cls.LEFT_RESIZE_HANDLER),\n        right: resizeTarget.classList.contains(cls.RIGHT_RESIZE_HANDLER),\n        top: resizeTarget.classList.contains(cls.TOP_RESIZE_HANDLER),\n        bottom: resizeTarget.classList.contains(cls.BOTTOM_RESIZE_HANDLER)\n      };\n      _this.actionObj.groupIndex = _this.parent.uiStateValues.isGroupAdaptive ? _this.parent.uiStateValues.groupIndex : 0;\n\n      var workCell = _this.parent.element.querySelector('.' + cls.WORK_CELLS_CLASS);\n\n      _this.actionObj.cellWidth = workCell.offsetWidth;\n      _this.actionObj.cellHeight = workCell.offsetHeight;\n\n      var headerRows = _this.parent.activeViewOptions.headerRows.map(function (row) {\n        return row.option;\n      });\n\n      if (_this.parent.activeView.isTimelineView() && headerRows.length > 0 && ['Date', 'Hour'].indexOf(headerRows.slice(-1)[0]) < 0) {\n        var tr = _this.parent.getContentTable().querySelector('tr');\n\n        var noOfDays_1 = 0;\n        var tdCollections = [].slice.call(tr.children);\n        tdCollections.forEach(function (td) {\n          return noOfDays_1 += parseInt(td.getAttribute('colspan'), 10);\n        });\n        _this.actionObj.cellWidth = tr.offsetWidth / noOfDays_1;\n        _this.actionObj.cellHeight = tr.offsetHeight;\n      }\n\n      var pages = _this.getPageCoordinates(e);\n\n      _this.actionObj.X = pages.pageX;\n      _this.actionObj.Y = pages.pageY;\n      _this.actionObj.groupIndex = parseInt(_this.actionObj.element.getAttribute('data-group-index') || '0', 10);\n      _this.actionObj.interval = resizeEventArgs.interval;\n      _this.actionObj.scroll = resizeEventArgs.scroll;\n      _this.actionObj.start = new Date(eventObj[_this.parent.eventFields.startTime].getTime());\n      _this.actionObj.end = new Date(eventObj[_this.parent.eventFields.endTime].getTime());\n      _this.actionObj.originalElement = _this.getOriginalElement(_this.actionObj.element);\n\n      if (_this.parent.currentView === 'Month') {\n        _this.daysVariation = -1;\n        _this.monthEvent = new MonthEvent(_this.parent);\n      }\n\n      var viewElement = _this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n\n      _this.scrollArgs = {\n        element: viewElement,\n        width: viewElement.scrollWidth,\n        height: viewElement.scrollHeight\n      };\n      EventHandler.add(document, Browser.touchMoveEvent, _this.resizing, _this);\n      EventHandler.add(document, Browser.touchEndEvent, _this.resizeStop, _this);\n    });\n  };\n\n  Resize.prototype.resizing = function (e) {\n    this.parent.quickPopup.quickPopupHide();\n\n    if (this.parent.element.querySelectorAll('.' + cls.RESIZE_CLONE_CLASS).length === 0) {\n      this.resizeHelper();\n    }\n\n    if (!isNullOrUndefined(e.target) && e.target.classList.contains(cls.DISABLE_DATES)) {\n      return;\n    }\n\n    var pages = this.getPageCoordinates(e);\n    this.actionObj.pageX = pages.pageX;\n    this.actionObj.pageY = pages.pageY;\n    this.updateScrollPosition(e);\n    this.updateResizingDirection(e);\n    var eventObj = extend({}, this.actionObj.event, null, true);\n    var resizeArgs = {\n      cancel: false,\n      data: eventObj,\n      element: this.actionObj.element,\n      event: e,\n      startTime: this.actionObj.start,\n      endTime: this.actionObj.end\n    };\n\n    if (this.parent.group.resources.length > 0) {\n      resizeArgs.groupIndex = this.actionObj.groupIndex;\n    }\n\n    this.parent.trigger(event.resizing, resizeArgs);\n  };\n\n  Resize.prototype.updateResizingDirection = function (e) {\n    if (this.parent.currentView === 'Month') {\n      this.monthResizing();\n      return;\n    }\n\n    var resizeValidation = this.resizeValidation(e);\n\n    if (this.resizeEdges.left) {\n      if (resizeValidation) {\n        var leftStyles = this.getLeftRightStyles(e, true);\n\n        for (var _i = 0, _a = this.actionObj.cloneElement; _i < _a.length; _i++) {\n          var cloneElement = _a[_i];\n          setStyleAttribute(cloneElement, leftStyles);\n          addClass([cloneElement], cls.LEFT_RESIZE_HANDLER);\n        }\n      }\n\n      this.horizontalResizing(!this.parent.enableRtl);\n    }\n\n    if (this.resizeEdges.right) {\n      if (resizeValidation) {\n        var rightStyles = this.getLeftRightStyles(e, false);\n\n        for (var _b = 0, _c = this.actionObj.cloneElement; _b < _c.length; _b++) {\n          var cloneElement = _c[_b];\n          setStyleAttribute(cloneElement, rightStyles);\n          addClass([cloneElement], cls.RIGHT_RESIZE_HANDLER);\n        }\n      }\n\n      this.horizontalResizing(this.parent.enableRtl);\n    }\n\n    if (this.resizeEdges.top) {\n      if (resizeValidation) {\n        var topStyles = this.getTopBottomStyles(e, true);\n\n        for (var _d = 0, _e = this.actionObj.cloneElement; _d < _e.length; _d++) {\n          var cloneElement = _e[_d];\n          setStyleAttribute(cloneElement, topStyles);\n          addClass([cloneElement], cls.TOP_RESIZE_HANDLER);\n        }\n      }\n\n      this.verticalResizing(true);\n    }\n\n    if (this.resizeEdges.bottom) {\n      if (resizeValidation) {\n        var bottomStyles = this.getTopBottomStyles(e, false);\n\n        for (var _f = 0, _g = this.actionObj.cloneElement; _f < _g.length; _f++) {\n          var cloneElement = _g[_f];\n          setStyleAttribute(cloneElement, bottomStyles);\n          addClass([cloneElement], cls.BOTTOM_RESIZE_HANDLER);\n        }\n      }\n\n      this.verticalResizing(false);\n    }\n  };\n\n  Resize.prototype.monthResizing = function () {\n    this.removeCloneElement();\n    var td = document.elementFromPoint(this.actionObj.pageX, this.actionObj.pageY);\n\n    if (isNullOrUndefined(td)) {\n      return;\n    }\n\n    var resizeTime = this.parent.getDateFromElement(td);\n    var isSameCell = this.parent.activeViewOptions.group.resources.length > 0 ? parseInt(td.getAttribute('data-group-index'), 10) === this.actionObj.groupIndex : true;\n    var startTime = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n    var endTime = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n\n    if (!this.parent.enableRtl && this.resizeEdges.left || this.parent.enableRtl && this.resizeEdges.right) {\n      startTime = resizeTime;\n    } else if (!this.parent.enableRtl && this.resizeEdges.right || this.parent.enableRtl && this.resizeEdges.left) {\n      endTime = util.addDays(resizeTime, 1);\n    }\n\n    if (isSameCell && startTime < endTime) {\n      this.actionObj.start = startTime;\n      this.actionObj.end = endTime;\n      var event_1 = this.getUpdatedEvent(this.actionObj.start, this.actionObj.end, this.actionObj.event);\n      this.dynamicEventsRendering(event_1);\n      this.updateOriginalElement(this.actionObj.clone);\n    }\n  };\n\n  Resize.prototype.resizeStop = function (e) {\n    var _this = this;\n\n    EventHandler.remove(document, Browser.touchMoveEvent, this.resizing);\n    EventHandler.remove(document, Browser.touchEndEvent, this.resizeStop);\n    clearInterval(this.actionObj.scrollInterval);\n    this.actionObj.scrollInterval = null;\n    this.removeCloneElementClasses();\n    this.removeCloneElement();\n    this.actionClass('removeClass');\n    this.parent.uiStateValues.action = false;\n    var resizeArgs = {\n      cancel: false,\n      data: this.getChangedData(),\n      element: this.actionObj.element,\n      event: e\n    };\n    this.parent.trigger(event.resizeStop, resizeArgs, function (resizeEventArgs) {\n      if (resizeEventArgs.cancel) {\n        return;\n      }\n\n      _this.saveChangedData(resizeEventArgs);\n    });\n  };\n\n  Resize.prototype.verticalResizing = function (isTop) {\n    var offsetValue = this.actionObj.clone.offsetTop;\n\n    if (!isTop) {\n      offsetValue += this.actionObj.clone.offsetHeight;\n    }\n\n    var minutes = offsetValue / this.actionObj.cellHeight * this.actionObj.slotInterval;\n    var element = this.actionObj.clone.offsetParent;\n\n    if (isNullOrUndefined(element)) {\n      return;\n    }\n\n    var resizeTime = util.resetTime(this.parent.getDateFromElement(element));\n    resizeTime.setHours(this.parent.activeView.getStartHour().getHours());\n    resizeTime.setMinutes(minutes);\n\n    if (isTop) {\n      this.actionObj.start = this.calculateIntervalTime(resizeTime);\n    } else {\n      this.actionObj.end = this.calculateIntervalTime(resizeTime);\n    }\n\n    this.updateTimePosition(resizeTime);\n  };\n\n  Resize.prototype.horizontalResizing = function (isLeft) {\n    var eventStart = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n    var eventEnd = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n    var resizeTime;\n\n    if (this.parent.activeView.isTimelineView()) {\n      var tr = this.parent.getContentTable().querySelector('tr');\n      var headerName = this.parent.currentView;\n\n      if (this.parent.activeViewOptions.headerRows.length > 0) {\n        var rows = this.parent.activeViewOptions.headerRows.map(function (row) {\n          return row.option;\n        });\n        headerName = rows.slice(-1)[0];\n\n        if (this.parent.currentView === 'TimelineMonth' && headerName === 'Hour') {\n          headerName = rows.slice(-2)[0] || 'Month';\n        }\n      }\n\n      resizeTime = isLeft ? eventStart : eventEnd;\n      var cellIndex = 0;\n      var tdCollections = [].slice.call(tr.children);\n      var isLastCell = false;\n\n      if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n        var noOfDays_2 = 0;\n        tdCollections.forEach(function (td) {\n          return noOfDays_2 += parseInt(td.getAttribute('colspan'), 10);\n        });\n        var offsetValue = this.parent.enableRtl ? parseInt(this.actionObj.clone.style.right, 10) : parseInt(this.actionObj.clone.style.left, 10);\n\n        if (!isLeft) {\n          offsetValue += this.actionObj.clone.offsetWidth - this.actionObj.cellWidth;\n        }\n\n        cellIndex = Math.floor(offsetValue / Math.floor(tr.offsetWidth / noOfDays_2));\n        cellIndex = isLeft ? cellIndex : this.parent.currentView === 'TimelineMonth' ? cellIndex + 1 : cellIndex;\n        isLastCell = cellIndex === tdCollections.length;\n        cellIndex = cellIndex < 0 ? 0 : cellIndex >= noOfDays_2 ? noOfDays_2 - 1 : cellIndex;\n      } else {\n        var cellWidth = this.parent.currentView === 'TimelineMonth' || !this.parent.activeViewOptions.timeScale.enable ? this.actionObj.cellWidth : this.actionObj.cellWidth - this.actionObj.interval * (this.actionObj.cellWidth / this.actionObj.slotInterval);\n        cellIndex = isLeft ? Math.floor(this.actionObj.clone.offsetLeft / this.actionObj.cellWidth) : Math.ceil((this.actionObj.clone.offsetLeft + (this.actionObj.clone.offsetWidth - cellWidth)) / this.actionObj.cellWidth);\n\n        if (this.parent.enableRtl) {\n          var cellOffsetWidth = 0;\n\n          if (headerName === 'TimelineMonth' || !this.parent.activeViewOptions.timeScale.enable && this.parent.currentView !== 'TimelineMonth') {\n            cellOffsetWidth = this.actionObj.cellWidth;\n          }\n\n          var offsetWidth = Math.floor(parseInt(this.actionObj.clone.style.right, 10) / this.actionObj.cellWidth) * this.actionObj.cellWidth + (isLeft ? 0 : this.actionObj.clone.offsetWidth - cellOffsetWidth);\n          cellIndex = Math.floor(offsetWidth / this.actionObj.cellWidth);\n        }\n\n        isLastCell = cellIndex === tdCollections.length;\n        cellIndex = this.getIndex(cellIndex);\n      }\n\n      var resizeDate = void 0;\n\n      if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n        resizeDate = new Date(this.parent.activeView.renderDates[cellIndex].getTime());\n      } else {\n        resizeDate = this.parent.getDateFromElement(tr.children[cellIndex]);\n      }\n\n      if (['TimelineMonth', 'Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1 || !this.parent.activeViewOptions.timeScale.enable) {\n        resizeTime = new Date(resizeDate.setHours(resizeTime.getHours(), resizeTime.getMinutes(), resizeTime.getSeconds()));\n      } else {\n        var offsetValue = this.parent.enableRtl ? parseFloat(this.actionObj.clone.style.right) : parseFloat(this.actionObj.clone.style.left);\n\n        if (!isLeft) {\n          offsetValue += this.actionObj.clone.offsetWidth;\n        }\n\n        var spanMinutes = Math.ceil(this.actionObj.slotInterval / this.actionObj.cellWidth * (offsetValue - Math.floor(offsetValue / this.actionObj.cellWidth) * this.actionObj.cellWidth));\n        spanMinutes = isLastCell ? this.actionObj.slotInterval : spanMinutes;\n        resizeTime = new Date(resizeDate.getTime());\n        resizeTime.setMinutes(resizeTime.getMinutes() + spanMinutes);\n        this.updateTimePosition(resizeTime);\n      }\n    } else {\n      var cloneIndex = closest(this.actionObj.clone, 'td').cellIndex;\n      var originalWidth = Math.ceil((isLeft ? this.actionObj.element.offsetWidth : 0) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n      var noOfDays = Math.ceil((this.actionObj.clone.offsetWidth - originalWidth) / this.actionObj.cellWidth);\n      var tr = closest(this.actionObj.clone, 'tr');\n      var dayIndex = isLeft ? cloneIndex - noOfDays : cloneIndex + noOfDays - 1;\n      dayIndex = this.getIndex(dayIndex);\n      resizeTime = this.parent.getDateFromElement(tr.children[dayIndex]);\n\n      if (isLeft) {\n        resizeTime.setHours(eventStart.getHours(), eventStart.getMinutes(), eventStart.getSeconds());\n      } else {\n        resizeTime.setHours(eventEnd.getHours(), eventEnd.getMinutes(), eventEnd.getSeconds());\n      }\n    }\n\n    if (isLeft) {\n      this.actionObj.start = this.parent.activeViewOptions.timeScale.enable ? this.calculateIntervalTime(resizeTime) : resizeTime;\n    } else {\n      var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 && this.parent.activeViewOptions.timeScale.enable;\n      var resizeEnd = !isTimeViews && resizeTime.getHours() === 0 && resizeTime.getMinutes() === 0 ? util.addDays(resizeTime, 1) : resizeTime;\n      this.actionObj.end = this.parent.activeViewOptions.timeScale.enable && this.parent.currentView !== 'Month' ? this.calculateIntervalTime(resizeEnd) : resizeEnd;\n    }\n  };\n\n  Resize.prototype.getTopBottomStyles = function (e, isTop) {\n    var viewElement = this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n    var slotInterval = this.actionObj.cellHeight / this.actionObj.slotInterval * this.actionObj.interval;\n    var clnHeight = isTop ? this.actionObj.element.offsetHeight + (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.element.offsetHeight + (this.actionObj.pageY - this.actionObj.Y);\n    var clnTop = isTop ? this.actionObj.element.offsetTop - (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.clone.offsetTop;\n    clnHeight = clnTop < 0 ? this.actionObj.clone.offsetHeight : this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight > this.scrollArgs.height ? this.actionObj.clone.offsetHeight : clnHeight;\n    clnTop = clnTop < 0 ? 0 : clnTop;\n    clnTop = Math.floor(clnTop / slotInterval) * slotInterval;\n    clnHeight = clnTop + clnHeight >= viewElement.scrollHeight ? viewElement.scrollHeight - clnTop : Math.ceil(clnHeight / slotInterval) * slotInterval;\n    var styles = {\n      height: formatUnit(clnHeight < this.actionObj.cellHeight ? this.actionObj.cellHeight : clnHeight),\n      top: formatUnit(clnHeight < this.actionObj.cellHeight && isTop ? this.actionObj.clone.offsetTop : clnTop),\n      left: '0px',\n      right: '0px',\n      width: '100%'\n    };\n    return styles;\n  };\n\n  Resize.prototype.getLeftRightStyles = function (e, isLeft) {\n    var styles = {};\n    var isTimelineView = this.parent.activeView.isTimelineView();\n    var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 && this.parent.activeViewOptions.timeScale.enable;\n    var slotInterval = this.actionObj.cellWidth / this.actionObj.slotInterval * this.actionObj.interval;\n    var pageWidth = isLeft ? this.actionObj.X - this.actionObj.pageX : this.actionObj.pageX - this.actionObj.X;\n    var targetWidth = isTimelineView ? this.actionObj.element.offsetWidth / this.actionObj.cellWidth * this.actionObj.cellWidth : this.parent.currentView === 'Month' ? this.actionObj.element.offsetWidth : Math.ceil(this.actionObj.element.offsetWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n    var offsetWidth = targetWidth + Math.ceil(pageWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n    var left = this.parent.enableRtl ? parseInt(this.actionObj.element.style.right, 10) : this.actionObj.clone.offsetLeft;\n\n    if (isTimeViews) {\n      offsetWidth = targetWidth + Math.ceil(pageWidth / slotInterval) * slotInterval;\n      offsetWidth = Math.ceil((left + offsetWidth) / slotInterval) * slotInterval - left;\n      this.actionObj.event[this.parent.eventFields.isAllDay] = false;\n    }\n\n    var width = !isLeft && offsetWidth + this.actionObj.clone.offsetLeft > this.scrollArgs.width ? this.actionObj.clone.offsetWidth : offsetWidth < this.actionObj.cellWidth ? this.actionObj.cellWidth : offsetWidth;\n\n    if (this.parent.enableRtl) {\n      var rightValue = isTimelineView ? parseInt(this.actionObj.element.style.right, 10) : -(offsetWidth - this.actionObj.cellWidth);\n      rightValue = isTimelineView ? rightValue : isLeft ? 0 : rightValue > 0 ? 0 : rightValue;\n\n      if (isTimelineView && !isLeft) {\n        rightValue = Math.ceil((this.actionObj.element.offsetLeft + (this.actionObj.element.offsetWidth + (this.actionObj.pageX - this.actionObj.X))) / slotInterval) * slotInterval;\n        rightValue = rightValue < 0 ? Math.abs(rightValue) : -rightValue;\n      }\n\n      rightValue = rightValue >= this.scrollArgs.width ? this.scrollArgs.width - this.actionObj.cellWidth : rightValue;\n      styles.right = formatUnit(rightValue);\n      width = width + rightValue > this.scrollArgs.width ? this.actionObj.clone.offsetWidth : width;\n    } else {\n      var offsetLeft = isLeft ? this.actionObj.element.offsetLeft - (this.actionObj.X - this.actionObj.pageX) : this.parent.enableRtl ? this.actionObj.element.offsetLeft : 0;\n\n      if (isTimelineView) {\n        offsetLeft = isLeft ? offsetLeft : parseInt(this.actionObj.clone.style.left, 10);\n\n        if (this.parent.enableRtl) {\n          offsetLeft = !isLeft ? this.actionObj.pageX < this.actionObj.X - this.actionObj.clone.offsetWidth ? parseInt(this.actionObj.clone.style.right, 10) : offsetLeft : offsetLeft;\n        } else {\n          offsetLeft = isLeft ? this.actionObj.pageX > this.actionObj.X + this.actionObj.clone.offsetWidth && this.actionObj.clone.offsetWidth === this.actionObj.cellWidth ? parseInt(this.actionObj.clone.style.left, 10) : offsetLeft : offsetLeft;\n        }\n      }\n\n      var leftValue = offsetLeft;\n      offsetLeft = isTimelineView ? isTimeViews ? isLeft ? Math.floor(offsetLeft / slotInterval) * slotInterval : offsetLeft : Math.floor(offsetLeft / this.actionObj.cellWidth) * this.actionObj.cellWidth : Math.ceil(Math.abs(offsetLeft) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n\n      if (offsetLeft < 0) {\n        offsetLeft = 0;\n        width = this.actionObj.clone.offsetWidth;\n      }\n\n      var cloneWidth = Math.ceil(this.actionObj.clone.offsetWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n\n      if (isLeft) {\n        styles.left = formatUnit(isTimelineView ? offsetLeft : isLeft ? leftValue < 0 ? -offsetLeft : Math.ceil((targetWidth - cloneWidth) / this.actionObj.cellWidth) * this.actionObj.cellWidth : offsetLeft);\n      }\n    }\n\n    styles.width = formatUnit(width);\n    return styles;\n  };\n\n  Resize.prototype.resizeValidation = function (e) {\n    var pages = this.getPageCoordinates(e);\n    var viewDimension = this.getContentAreaDimension();\n    var resizeValidation = false;\n\n    if (this.resizeEdges.left) {\n      resizeValidation = pages.pageX - this.actionObj.cellWidth >= viewDimension.left;\n    }\n\n    if (this.resizeEdges.right) {\n      resizeValidation = pages.pageX + this.actionObj.cellWidth <= viewDimension.right;\n    }\n\n    if (this.resizeEdges.top) {\n      resizeValidation = this.actionObj.clone.offsetTop >= viewDimension.top;\n    }\n\n    if (this.resizeEdges.bottom) {\n      resizeValidation = this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight <= this.scrollArgs.height;\n    }\n\n    return resizeValidation;\n  };\n  /**\n   * Get module name.\n   */\n\n\n  Resize.prototype.getModuleName = function () {\n    return 'resize';\n  };\n\n  return Resize;\n}(ActionBase);\n\nexport { Resize };","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/resize.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","addClass","Browser","EventHandler","closest","extend","formatUnit","setStyleAttribute","isNullOrUndefined","getElement","isBlazor","ActionBase","util","event","cls","MonthEvent","Resize","_super","apply","arguments","wireResizeEvent","element","_this","resizeElement","slice","call","querySelectorAll","EVENT_RESIZE_CLASS","forEach","add","touchStartEvent","resizeStart","resizeHelper","parent","activeViewOptions","group","resources","length","allowGroupEdit","actionObj","originalElement","index","cloneElement","createCloneElement","clone","e","action","slotInterval","timeScale","interval","slotCount","resizeTarget","target","APPOINTMENT_CLASS","eventBase","getEventByGuid","getAttribute","eventObj","resizeArgs","cancel","data","scroll","enable","scrollBy","timeDelay","trigger","resizeEventArgs","actionClass","uiStateValues","resizeEdges","left","classList","contains","LEFT_RESIZE_HANDLER","right","RIGHT_RESIZE_HANDLER","top","TOP_RESIZE_HANDLER","bottom","BOTTOM_RESIZE_HANDLER","groupIndex","isGroupAdaptive","workCell","querySelector","WORK_CELLS_CLASS","cellWidth","offsetWidth","cellHeight","offsetHeight","headerRows","map","row","option","activeView","isTimelineView","indexOf","tr","getContentTable","noOfDays_1","tdCollections","children","td","parseInt","pages","getPageCoordinates","X","pageX","Y","pageY","start","Date","eventFields","startTime","getTime","end","endTime","getOriginalElement","currentView","daysVariation","monthEvent","viewElement","CONTENT_WRAP_CLASS","scrollArgs","width","scrollWidth","height","scrollHeight","document","touchMoveEvent","resizing","touchEndEvent","resizeStop","quickPopup","quickPopupHide","RESIZE_CLONE_CLASS","DISABLE_DATES","updateScrollPosition","updateResizingDirection","monthResizing","resizeValidation","leftStyles","getLeftRightStyles","_i","_a","horizontalResizing","enableRtl","rightStyles","_b","_c","topStyles","getTopBottomStyles","_d","_e","verticalResizing","bottomStyles","_f","_g","removeCloneElement","elementFromPoint","resizeTime","getDateFromElement","isSameCell","addDays","event_1","getUpdatedEvent","dynamicEventsRendering","updateOriginalElement","remove","clearInterval","scrollInterval","removeCloneElementClasses","getChangedData","saveChangedData","isTop","offsetValue","offsetTop","minutes","offsetParent","resetTime","setHours","getStartHour","getHours","setMinutes","calculateIntervalTime","updateTimePosition","isLeft","eventStart","eventEnd","headerName","rows","cellIndex","isLastCell","noOfDays_2","style","Math","floor","offsetLeft","ceil","cellOffsetWidth","getIndex","resizeDate","renderDates","getMinutes","getSeconds","parseFloat","spanMinutes","cloneIndex","originalWidth","noOfDays","dayIndex","isTimeViews","resizeEnd","clnHeight","clnTop","styles","pageWidth","targetWidth","isAllDay","rightValue","abs","leftValue","cloneWidth","viewDimension","getContentAreaDimension","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { addClass, Browser, EventHandler, closest, extend, formatUnit, setStyleAttribute, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement, isBlazor } from '@syncfusion/ej2-base';\nimport { ActionBase } from '../actions/action-base';\nimport * as util from '../base/util';\nimport * as event from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport { MonthEvent } from '../event-renderer/month';\n/**\n * Schedule events resize actions\n */\nvar Resize = /** @class */ (function (_super) {\n    __extends(Resize, _super);\n    function Resize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Resize.prototype.wireResizeEvent = function (element) {\n        var _this = this;\n        var resizeElement = [].slice.call(element.querySelectorAll('.' + cls.EVENT_RESIZE_CLASS));\n        resizeElement.forEach(function (element) { return EventHandler.add(element, Browser.touchStartEvent, _this.resizeStart, _this); });\n    };\n    Resize.prototype.resizeHelper = function () {\n        var _this = this;\n        if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.activeViewOptions.group.allowGroupEdit) {\n            this.actionObj.originalElement.forEach(function (element, index) {\n                var cloneElement = _this.createCloneElement(element);\n                _this.actionObj.cloneElement[index] = cloneElement;\n                if (_this.actionObj.element === element) {\n                    _this.actionObj.clone = cloneElement;\n                }\n            });\n        }\n        else {\n            this.actionObj.clone = this.createCloneElement(this.actionObj.element);\n            this.actionObj.cloneElement = [this.actionObj.clone];\n            this.actionObj.originalElement = [this.actionObj.element];\n        }\n    };\n    Resize.prototype.resizeStart = function (e) {\n        var _this = this;\n        this.actionObj.action = 'resize';\n        this.actionObj.slotInterval = this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount;\n        this.actionObj.interval = this.actionObj.slotInterval;\n        var resizeTarget = closest(e.target, '.' + cls.EVENT_RESIZE_CLASS);\n        this.actionObj.element = closest(resizeTarget, '.' + cls.APPOINTMENT_CLASS);\n        this.actionObj.event = this.parent.eventBase.getEventByGuid(this.actionObj.element.getAttribute('data-guid'));\n        var eventObj = extend({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            interval: this.actionObj.interval,\n            scroll: { enable: true, scrollBy: 30, timeDelay: 100 }\n        };\n        this.parent.trigger(event.resizeStart, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            if (isBlazor()) {\n                resizeEventArgs.element = getElement(resizeEventArgs.element);\n            }\n            _this.actionClass('addClass');\n            _this.parent.uiStateValues.action = true;\n            _this.resizeEdges = {\n                left: resizeTarget.classList.contains(cls.LEFT_RESIZE_HANDLER),\n                right: resizeTarget.classList.contains(cls.RIGHT_RESIZE_HANDLER),\n                top: resizeTarget.classList.contains(cls.TOP_RESIZE_HANDLER),\n                bottom: resizeTarget.classList.contains(cls.BOTTOM_RESIZE_HANDLER)\n            };\n            _this.actionObj.groupIndex = _this.parent.uiStateValues.isGroupAdaptive ? _this.parent.uiStateValues.groupIndex : 0;\n            var workCell = _this.parent.element.querySelector('.' + cls.WORK_CELLS_CLASS);\n            _this.actionObj.cellWidth = workCell.offsetWidth;\n            _this.actionObj.cellHeight = workCell.offsetHeight;\n            var headerRows = _this.parent.activeViewOptions.headerRows.map(function (row) {\n                return row.option;\n            });\n            if (_this.parent.activeView.isTimelineView() && headerRows.length > 0 &&\n                ['Date', 'Hour'].indexOf(headerRows.slice(-1)[0]) < 0) {\n                var tr = _this.parent.getContentTable().querySelector('tr');\n                var noOfDays_1 = 0;\n                var tdCollections = [].slice.call(tr.children);\n                tdCollections.forEach(function (td) { return noOfDays_1 += parseInt(td.getAttribute('colspan'), 10); });\n                _this.actionObj.cellWidth = tr.offsetWidth / noOfDays_1;\n                _this.actionObj.cellHeight = tr.offsetHeight;\n            }\n            var pages = _this.getPageCoordinates(e);\n            _this.actionObj.X = pages.pageX;\n            _this.actionObj.Y = pages.pageY;\n            _this.actionObj.groupIndex = parseInt(_this.actionObj.element.getAttribute('data-group-index') || '0', 10);\n            _this.actionObj.interval = resizeEventArgs.interval;\n            _this.actionObj.scroll = resizeEventArgs.scroll;\n            _this.actionObj.start = new Date(eventObj[_this.parent.eventFields.startTime].getTime());\n            _this.actionObj.end = new Date(eventObj[_this.parent.eventFields.endTime].getTime());\n            _this.actionObj.originalElement = _this.getOriginalElement(_this.actionObj.element);\n            if (_this.parent.currentView === 'Month') {\n                _this.daysVariation = -1;\n                _this.monthEvent = new MonthEvent(_this.parent);\n            }\n            var viewElement = _this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n            _this.scrollArgs = { element: viewElement, width: viewElement.scrollWidth, height: viewElement.scrollHeight };\n            EventHandler.add(document, Browser.touchMoveEvent, _this.resizing, _this);\n            EventHandler.add(document, Browser.touchEndEvent, _this.resizeStop, _this);\n        });\n    };\n    Resize.prototype.resizing = function (e) {\n        this.parent.quickPopup.quickPopupHide();\n        if (this.parent.element.querySelectorAll('.' + cls.RESIZE_CLONE_CLASS).length === 0) {\n            this.resizeHelper();\n        }\n        if ((!isNullOrUndefined(e.target)) && e.target.classList.contains(cls.DISABLE_DATES)) {\n            return;\n        }\n        var pages = this.getPageCoordinates(e);\n        this.actionObj.pageX = pages.pageX;\n        this.actionObj.pageY = pages.pageY;\n        this.updateScrollPosition(e);\n        this.updateResizingDirection(e);\n        var eventObj = extend({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            startTime: this.actionObj.start,\n            endTime: this.actionObj.end\n        };\n        if (this.parent.group.resources.length > 0) {\n            resizeArgs.groupIndex = this.actionObj.groupIndex;\n        }\n        this.parent.trigger(event.resizing, resizeArgs);\n    };\n    Resize.prototype.updateResizingDirection = function (e) {\n        if (this.parent.currentView === 'Month') {\n            this.monthResizing();\n            return;\n        }\n        var resizeValidation = this.resizeValidation(e);\n        if (this.resizeEdges.left) {\n            if (resizeValidation) {\n                var leftStyles = this.getLeftRightStyles(e, true);\n                for (var _i = 0, _a = this.actionObj.cloneElement; _i < _a.length; _i++) {\n                    var cloneElement = _a[_i];\n                    setStyleAttribute(cloneElement, leftStyles);\n                    addClass([cloneElement], cls.LEFT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(!this.parent.enableRtl);\n        }\n        if (this.resizeEdges.right) {\n            if (resizeValidation) {\n                var rightStyles = this.getLeftRightStyles(e, false);\n                for (var _b = 0, _c = this.actionObj.cloneElement; _b < _c.length; _b++) {\n                    var cloneElement = _c[_b];\n                    setStyleAttribute(cloneElement, rightStyles);\n                    addClass([cloneElement], cls.RIGHT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(this.parent.enableRtl);\n        }\n        if (this.resizeEdges.top) {\n            if (resizeValidation) {\n                var topStyles = this.getTopBottomStyles(e, true);\n                for (var _d = 0, _e = this.actionObj.cloneElement; _d < _e.length; _d++) {\n                    var cloneElement = _e[_d];\n                    setStyleAttribute(cloneElement, topStyles);\n                    addClass([cloneElement], cls.TOP_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(true);\n        }\n        if (this.resizeEdges.bottom) {\n            if (resizeValidation) {\n                var bottomStyles = this.getTopBottomStyles(e, false);\n                for (var _f = 0, _g = this.actionObj.cloneElement; _f < _g.length; _f++) {\n                    var cloneElement = _g[_f];\n                    setStyleAttribute(cloneElement, bottomStyles);\n                    addClass([cloneElement], cls.BOTTOM_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(false);\n        }\n    };\n    Resize.prototype.monthResizing = function () {\n        this.removeCloneElement();\n        var td = document.elementFromPoint(this.actionObj.pageX, this.actionObj.pageY);\n        if (isNullOrUndefined(td)) {\n            return;\n        }\n        var resizeTime = this.parent.getDateFromElement(td);\n        var isSameCell = this.parent.activeViewOptions.group.resources.length > 0 ?\n            parseInt(td.getAttribute('data-group-index'), 10) === this.actionObj.groupIndex : true;\n        var startTime = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var endTime = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        if ((!this.parent.enableRtl && this.resizeEdges.left) || (this.parent.enableRtl && this.resizeEdges.right)) {\n            startTime = resizeTime;\n        }\n        else if ((!this.parent.enableRtl && this.resizeEdges.right) || (this.parent.enableRtl && this.resizeEdges.left)) {\n            endTime = util.addDays(resizeTime, 1);\n        }\n        if (isSameCell && startTime < endTime) {\n            this.actionObj.start = startTime;\n            this.actionObj.end = endTime;\n            var event_1 = this.getUpdatedEvent(this.actionObj.start, this.actionObj.end, this.actionObj.event);\n            this.dynamicEventsRendering(event_1);\n            this.updateOriginalElement(this.actionObj.clone);\n        }\n    };\n    Resize.prototype.resizeStop = function (e) {\n        var _this = this;\n        EventHandler.remove(document, Browser.touchMoveEvent, this.resizing);\n        EventHandler.remove(document, Browser.touchEndEvent, this.resizeStop);\n        clearInterval(this.actionObj.scrollInterval);\n        this.actionObj.scrollInterval = null;\n        this.removeCloneElementClasses();\n        this.removeCloneElement();\n        this.actionClass('removeClass');\n        this.parent.uiStateValues.action = false;\n        var resizeArgs = { cancel: false, data: this.getChangedData(), element: this.actionObj.element, event: e };\n        this.parent.trigger(event.resizeStop, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            _this.saveChangedData(resizeEventArgs);\n        });\n    };\n    Resize.prototype.verticalResizing = function (isTop) {\n        var offsetValue = this.actionObj.clone.offsetTop;\n        if (!isTop) {\n            offsetValue += this.actionObj.clone.offsetHeight;\n        }\n        var minutes = (offsetValue / this.actionObj.cellHeight) * this.actionObj.slotInterval;\n        var element = this.actionObj.clone.offsetParent;\n        if (isNullOrUndefined(element)) {\n            return;\n        }\n        var resizeTime = util.resetTime(this.parent.getDateFromElement(element));\n        resizeTime.setHours(this.parent.activeView.getStartHour().getHours());\n        resizeTime.setMinutes(minutes);\n        if (isTop) {\n            this.actionObj.start = this.calculateIntervalTime(resizeTime);\n        }\n        else {\n            this.actionObj.end = this.calculateIntervalTime(resizeTime);\n        }\n        this.updateTimePosition(resizeTime);\n    };\n    Resize.prototype.horizontalResizing = function (isLeft) {\n        var eventStart = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var eventEnd = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        var resizeTime;\n        if (this.parent.activeView.isTimelineView()) {\n            var tr = this.parent.getContentTable().querySelector('tr');\n            var headerName = this.parent.currentView;\n            if (this.parent.activeViewOptions.headerRows.length > 0) {\n                var rows = this.parent.activeViewOptions.headerRows.map(function (row) { return row.option; });\n                headerName = rows.slice(-1)[0];\n                if (this.parent.currentView === 'TimelineMonth' && headerName === 'Hour') {\n                    headerName = rows.slice(-2)[0] || 'Month';\n                }\n            }\n            resizeTime = isLeft ? eventStart : eventEnd;\n            var cellIndex = 0;\n            var tdCollections = [].slice.call(tr.children);\n            var isLastCell = false;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                var noOfDays_2 = 0;\n                tdCollections.forEach(function (td) { return noOfDays_2 += parseInt(td.getAttribute('colspan'), 10); });\n                var offsetValue = this.parent.enableRtl ? parseInt(this.actionObj.clone.style.right, 10) :\n                    parseInt(this.actionObj.clone.style.left, 10);\n                if (!isLeft) {\n                    offsetValue += (this.actionObj.clone.offsetWidth - this.actionObj.cellWidth);\n                }\n                cellIndex = Math.floor(offsetValue / Math.floor(tr.offsetWidth / noOfDays_2));\n                cellIndex = isLeft ? cellIndex : this.parent.currentView === 'TimelineMonth' ? cellIndex + 1 : cellIndex;\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = (cellIndex < 0) ? 0 : (cellIndex >= noOfDays_2) ? noOfDays_2 - 1 : cellIndex;\n            }\n            else {\n                var cellWidth = this.parent.currentView === 'TimelineMonth' || !this.parent.activeViewOptions.timeScale.enable ?\n                    this.actionObj.cellWidth : this.actionObj.cellWidth - (this.actionObj.interval *\n                    (this.actionObj.cellWidth / this.actionObj.slotInterval));\n                cellIndex = isLeft ? Math.floor(this.actionObj.clone.offsetLeft / this.actionObj.cellWidth) :\n                    Math.ceil((this.actionObj.clone.offsetLeft + (this.actionObj.clone.offsetWidth - cellWidth)) /\n                        this.actionObj.cellWidth);\n                if (this.parent.enableRtl) {\n                    var cellOffsetWidth = 0;\n                    if (headerName === 'TimelineMonth' || (!this.parent.activeViewOptions.timeScale.enable &&\n                        this.parent.currentView !== 'TimelineMonth')) {\n                        cellOffsetWidth = this.actionObj.cellWidth;\n                    }\n                    var offsetWidth = (Math.floor(parseInt(this.actionObj.clone.style.right, 10) / this.actionObj.cellWidth) *\n                        this.actionObj.cellWidth) + (isLeft ? 0 : this.actionObj.clone.offsetWidth - cellOffsetWidth);\n                    cellIndex = Math.floor(offsetWidth / this.actionObj.cellWidth);\n                }\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = this.getIndex(cellIndex);\n            }\n            var resizeDate = void 0;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                resizeDate = new Date(this.parent.activeView.renderDates[cellIndex].getTime());\n            }\n            else {\n                resizeDate = this.parent.getDateFromElement(tr.children[cellIndex]);\n            }\n            if (['TimelineMonth', 'Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1 ||\n                !this.parent.activeViewOptions.timeScale.enable) {\n                resizeTime = new Date(resizeDate.setHours(resizeTime.getHours(), resizeTime.getMinutes(), resizeTime.getSeconds()));\n            }\n            else {\n                var offsetValue = this.parent.enableRtl ? parseFloat(this.actionObj.clone.style.right) :\n                    parseFloat(this.actionObj.clone.style.left);\n                if (!isLeft) {\n                    offsetValue += this.actionObj.clone.offsetWidth;\n                }\n                var spanMinutes = Math.ceil((this.actionObj.slotInterval / this.actionObj.cellWidth) *\n                    (offsetValue - Math.floor(offsetValue / this.actionObj.cellWidth) * this.actionObj.cellWidth));\n                spanMinutes = isLastCell ? this.actionObj.slotInterval : spanMinutes;\n                resizeTime = new Date(resizeDate.getTime());\n                resizeTime.setMinutes(resizeTime.getMinutes() + spanMinutes);\n                this.updateTimePosition(resizeTime);\n            }\n        }\n        else {\n            var cloneIndex = closest(this.actionObj.clone, 'td').cellIndex;\n            var originalWidth = Math.ceil((isLeft ? this.actionObj.element.offsetWidth : 0) / this.actionObj.cellWidth) *\n                this.actionObj.cellWidth;\n            var noOfDays = Math.ceil((this.actionObj.clone.offsetWidth - originalWidth) / this.actionObj.cellWidth);\n            var tr = closest(this.actionObj.clone, 'tr');\n            var dayIndex = isLeft ? cloneIndex - noOfDays : cloneIndex + noOfDays - 1;\n            dayIndex = this.getIndex(dayIndex);\n            resizeTime = this.parent.getDateFromElement(tr.children[dayIndex]);\n            if (isLeft) {\n                resizeTime.setHours(eventStart.getHours(), eventStart.getMinutes(), eventStart.getSeconds());\n            }\n            else {\n                resizeTime.setHours(eventEnd.getHours(), eventEnd.getMinutes(), eventEnd.getSeconds());\n            }\n        }\n        if (isLeft) {\n            this.actionObj.start = this.parent.activeViewOptions.timeScale.enable ? this.calculateIntervalTime(resizeTime) : resizeTime;\n        }\n        else {\n            var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 &&\n                this.parent.activeViewOptions.timeScale.enable;\n            var resizeEnd = (!isTimeViews && resizeTime.getHours() === 0 && resizeTime.getMinutes() === 0) ?\n                util.addDays(resizeTime, 1) : resizeTime;\n            this.actionObj.end = this.parent.activeViewOptions.timeScale.enable && this.parent.currentView !== 'Month' ?\n                this.calculateIntervalTime(resizeEnd) : resizeEnd;\n        }\n    };\n    Resize.prototype.getTopBottomStyles = function (e, isTop) {\n        var viewElement = this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n        var slotInterval = (this.actionObj.cellHeight / this.actionObj.slotInterval) * this.actionObj.interval;\n        var clnHeight = isTop ? this.actionObj.element.offsetHeight + (this.actionObj.Y - this.actionObj.pageY) :\n            this.actionObj.element.offsetHeight + (this.actionObj.pageY - this.actionObj.Y);\n        var clnTop = isTop ? this.actionObj.element.offsetTop -\n            (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.clone.offsetTop;\n        clnHeight = (clnTop < 0) ? this.actionObj.clone.offsetHeight :\n            (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) > this.scrollArgs.height ?\n                this.actionObj.clone.offsetHeight : clnHeight;\n        clnTop = (clnTop < 0) ? 0 : clnTop;\n        clnTop = Math.floor(clnTop / slotInterval) * slotInterval;\n        clnHeight = clnTop + clnHeight >= viewElement.scrollHeight ? viewElement.scrollHeight - clnTop :\n            Math.ceil(clnHeight / slotInterval) * slotInterval;\n        var styles = {\n            height: formatUnit(clnHeight < this.actionObj.cellHeight ? this.actionObj.cellHeight : clnHeight),\n            top: formatUnit((clnHeight < this.actionObj.cellHeight && isTop) ? this.actionObj.clone.offsetTop : clnTop),\n            left: '0px', right: '0px', width: '100%'\n        };\n        return styles;\n    };\n    Resize.prototype.getLeftRightStyles = function (e, isLeft) {\n        var styles = {};\n        var isTimelineView = this.parent.activeView.isTimelineView();\n        var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 &&\n            this.parent.activeViewOptions.timeScale.enable;\n        var slotInterval = (this.actionObj.cellWidth / this.actionObj.slotInterval) * this.actionObj.interval;\n        var pageWidth = isLeft ? (this.actionObj.X - this.actionObj.pageX) : (this.actionObj.pageX - this.actionObj.X);\n        var targetWidth = isTimelineView ?\n            (this.actionObj.element.offsetWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n            this.parent.currentView === 'Month' ? this.actionObj.element.offsetWidth :\n                Math.ceil(this.actionObj.element.offsetWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n        var offsetWidth = targetWidth + (Math.ceil(pageWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth);\n        var left = (this.parent.enableRtl) ? parseInt(this.actionObj.element.style.right, 10) : this.actionObj.clone.offsetLeft;\n        if (isTimeViews) {\n            offsetWidth = targetWidth + (Math.ceil(pageWidth / slotInterval) * slotInterval);\n            offsetWidth = (Math.ceil((left + offsetWidth) / slotInterval) * slotInterval) - left;\n            this.actionObj.event[this.parent.eventFields.isAllDay] = false;\n        }\n        var width = !isLeft && ((offsetWidth + this.actionObj.clone.offsetLeft > this.scrollArgs.width)) ?\n            this.actionObj.clone.offsetWidth : (offsetWidth < this.actionObj.cellWidth) ? this.actionObj.cellWidth : offsetWidth;\n        if (this.parent.enableRtl) {\n            var rightValue = isTimelineView ? parseInt(this.actionObj.element.style.right, 10) :\n                -(offsetWidth - this.actionObj.cellWidth);\n            rightValue = isTimelineView ? rightValue : isLeft ? 0 : rightValue > 0 ? 0 : rightValue;\n            if (isTimelineView && !isLeft) {\n                rightValue = Math.ceil((this.actionObj.element.offsetLeft + (this.actionObj.element.offsetWidth +\n                    (this.actionObj.pageX - this.actionObj.X))) / slotInterval) * slotInterval;\n                rightValue = rightValue < 0 ? Math.abs(rightValue) : -rightValue;\n            }\n            rightValue = rightValue >= this.scrollArgs.width ? this.scrollArgs.width - this.actionObj.cellWidth : rightValue;\n            styles.right = formatUnit(rightValue);\n            width = width + rightValue > this.scrollArgs.width ? this.actionObj.clone.offsetWidth : width;\n        }\n        else {\n            var offsetLeft = isLeft ? this.actionObj.element.offsetLeft - (this.actionObj.X - this.actionObj.pageX) :\n                this.parent.enableRtl ? this.actionObj.element.offsetLeft : 0;\n            if (isTimelineView) {\n                offsetLeft = isLeft ? offsetLeft : parseInt(this.actionObj.clone.style.left, 10);\n                if (this.parent.enableRtl) {\n                    offsetLeft = !isLeft ? (this.actionObj.pageX < this.actionObj.X - this.actionObj.clone.offsetWidth) ?\n                        parseInt(this.actionObj.clone.style.right, 10) : offsetLeft : offsetLeft;\n                }\n                else {\n                    offsetLeft = isLeft ? (this.actionObj.pageX > this.actionObj.X + this.actionObj.clone.offsetWidth &&\n                        this.actionObj.clone.offsetWidth === this.actionObj.cellWidth) ?\n                        parseInt(this.actionObj.clone.style.left, 10) : offsetLeft : offsetLeft;\n                }\n            }\n            var leftValue = offsetLeft;\n            offsetLeft = isTimelineView ? isTimeViews ? isLeft ? Math.floor(offsetLeft / slotInterval) * slotInterval : offsetLeft :\n                Math.floor(offsetLeft / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n                Math.ceil(Math.abs(offsetLeft) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            if (offsetLeft < 0) {\n                offsetLeft = 0;\n                width = this.actionObj.clone.offsetWidth;\n            }\n            var cloneWidth = Math.ceil(this.actionObj.clone.offsetWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            if (isLeft) {\n                styles.left = formatUnit(isTimelineView ? offsetLeft : isLeft ? leftValue < 0 ? -offsetLeft :\n                    (Math.ceil((targetWidth - cloneWidth) / this.actionObj.cellWidth) * this.actionObj.cellWidth) : offsetLeft);\n            }\n        }\n        styles.width = formatUnit(width);\n        return styles;\n    };\n    Resize.prototype.resizeValidation = function (e) {\n        var pages = this.getPageCoordinates(e);\n        var viewDimension = this.getContentAreaDimension();\n        var resizeValidation = false;\n        if (this.resizeEdges.left) {\n            resizeValidation = (pages.pageX - this.actionObj.cellWidth) >= viewDimension.left;\n        }\n        if (this.resizeEdges.right) {\n            resizeValidation = (pages.pageX + this.actionObj.cellWidth) <= viewDimension.right;\n        }\n        if (this.resizeEdges.top) {\n            resizeValidation = this.actionObj.clone.offsetTop >= viewDimension.top;\n        }\n        if (this.resizeEdges.bottom) {\n            resizeValidation = (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) <= this.scrollArgs.height;\n        }\n        return resizeValidation;\n    };\n    /**\n     * Get module name.\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    return Resize;\n}(ActionBase));\nexport { Resize };\n"]},"metadata":{},"sourceType":"module"}