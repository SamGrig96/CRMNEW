{"ast":null,"code":"export var getBody=function getBody(message,mimeType){var encodedBody=\"\";if(typeof message.parts===\"undefined\"){encodedBody=message.body.data;}else{encodedBody=getHTMLPart(message.parts,mimeType);}encodedBody=encodedBody.replace(/-/g,\"+\").replace(/_/g,\"/\").replace(/\\s/g,\"\");return decodeURIComponent(escape(window.atob(encodedBody)));};var getHTMLPart=function getHTMLPart(arr,mimeType){for(var x=0;x<arr.length;x++){if(typeof arr[x].parts===\"undefined\"){if(arr[x].mimeType===mimeType){return arr[x].body.data;}}else{return getHTMLPart(arr[x].parts,mimeType);}}return\"\";};export var isHTML=function isHTML(str){var doc=new DOMParser().parseFromString(str,\"text/html\");return Array.from(doc.body.childNodes).some(function(node){return node.nodeType===1;});};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/api/utils.jsx"],"names":["getBody","message","mimeType","encodedBody","parts","body","data","getHTMLPart","replace","decodeURIComponent","escape","window","atob","arr","x","length","isHTML","str","doc","DOMParser","parseFromString","Array","from","childNodes","some","node","nodeType"],"mappings":"AAEA,MAAO,IAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,CAAUC,QAAV,CAAuB,CAC5C,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAI,MAAOF,CAAAA,OAAO,CAACG,KAAf,GAAyB,WAA7B,CAA0C,CACxCD,WAAW,CAAGF,OAAO,CAACI,IAAR,CAAaC,IAA3B,CACD,CAFD,IAEO,CACLH,WAAW,CAAGI,WAAW,CAACN,OAAO,CAACG,KAAT,CAAgBF,QAAhB,CAAzB,CACD,CACDC,WAAW,CAAGA,WAAW,CACtBK,OADW,CACH,IADG,CACG,GADH,EAEXA,OAFW,CAEH,IAFG,CAEG,GAFH,EAGXA,OAHW,CAGH,KAHG,CAGI,EAHJ,CAAd,CAIA,MAAOC,CAAAA,kBAAkB,CAACC,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYT,WAAZ,CAAD,CAAP,CAAzB,CACD,CAZM,CAcP,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACM,GAAD,CAAMX,QAAN,CAAmB,CACrC,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,GAAG,CAACE,MAAxB,CAAgCD,CAAC,EAAjC,CAAqC,CACnC,GAAI,MAAOD,CAAAA,GAAG,CAACC,CAAD,CAAH,CAAOV,KAAd,GAAwB,WAA5B,CAAyC,CACvC,GAAIS,GAAG,CAACC,CAAD,CAAH,CAAOZ,QAAP,GAAoBA,QAAxB,CAAkC,CAChC,MAAOW,CAAAA,GAAG,CAACC,CAAD,CAAH,CAAOT,IAAP,CAAYC,IAAnB,CACD,CACF,CAJD,IAIO,CACL,MAAOC,CAAAA,WAAW,CAACM,GAAG,CAACC,CAAD,CAAH,CAAOV,KAAR,CAAeF,QAAf,CAAlB,CACD,CACF,CACD,MAAO,EAAP,CACD,CAXD,CAaA,MAAO,IAAMc,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,GAAG,CAAI,CAC3B,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,SAAJ,GAAgBC,eAAhB,CAAgCH,GAAhC,CAAqC,WAArC,CAAZ,CACA,MAAOI,CAAAA,KAAK,CAACC,IAAN,CAAWJ,GAAG,CAACb,IAAJ,CAASkB,UAApB,EAAgCC,IAAhC,CAAqC,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,QAAL,GAAkB,CAAtB,EAAzC,CAAP,CACD,CAHM","sourcesContent":["\r\n\r\nexport const getBody = (message, mimeType) => {\r\n  let encodedBody = \"\";\r\n  if (typeof message.parts === \"undefined\") {\r\n    encodedBody = message.body.data;\r\n  } else {\r\n    encodedBody = getHTMLPart(message.parts, mimeType);\r\n  }\r\n  encodedBody = encodedBody\r\n    .replace(/-/g, \"+\")\r\n    .replace(/_/g, \"/\")\r\n    .replace(/\\s/g, \"\");\r\n  return decodeURIComponent(escape(window.atob(encodedBody)));\r\n};\r\n\r\nconst getHTMLPart = (arr, mimeType) => {\r\n  for (let x = 0; x < arr.length; x++) {\r\n    if (typeof arr[x].parts === \"undefined\") {\r\n      if (arr[x].mimeType === mimeType) {\r\n        return arr[x].body.data;\r\n      }\r\n    } else {\r\n      return getHTMLPart(arr[x].parts, mimeType);\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const isHTML = str => {\r\n  const doc = new DOMParser().parseFromString(str, \"text/html\");\r\n  return Array.from(doc.body.childNodes).some(node => node.nodeType === 1);\r\n}"]},"metadata":{},"sourceType":"module"}