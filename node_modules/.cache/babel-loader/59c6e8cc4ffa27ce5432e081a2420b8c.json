{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\compose-message\\\\ComposeMessage.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { sendMessage } from \"../../api\";\nimport { getValidEmails } from \"../../utils\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactQuill from \"react-quill\";\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\nimport \"./composeMessage.scss\";\nexport class Compose extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayModal: false,\n      to: props.to || \"\",\n      cc: props.cc || \"\",\n      bcc: props.bcc || \"\",\n      subject: props.subject || \"\",\n      content: props.content || \"\"\n    };\n    this.showModal = this.showModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendEmail = this.sendEmail.bind(this);\n    this.setField = this.setField.bind(this);\n  }\n\n  showModal() {\n    this.setState({\n      displayModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      displayModal: false\n    });\n  }\n\n  handleChange(value) {\n    this.setState({\n      content: value\n    });\n  }\n\n  sendEmail() {\n    const validTo = getValidEmails(this.state.to);\n\n    if (!validTo.length || this.state.subject.trim() === \"\" || this.state.content === \"\") {\n      return;\n    }\n\n    const headers = {\n      To: validTo.join(\", \"),\n      Subject: this.state.subject\n    };\n    const validCc = getValidEmails(this.state.cc);\n\n    if (validCc.length) {\n      headers.Cc = validCc.join(\", \");\n    }\n\n    const validBcc = getValidEmails(this.state.bcc);\n\n    if (validBcc.length) {\n      headers.Bcc = validBcc.join(\", \");\n    }\n\n    sendMessage({\n      headers,\n      body: this.state.content\n    }).then(_ => {\n      this.closeModal();\n      this.resetFields();\n    });\n    this.closeModal();\n  }\n\n  resetFields() {\n    this.setState({\n      to: this.props.to || \"\",\n      cc: this.props.cc || \"\",\n      bcc: this.props.bcc || \"\",\n      subject: this.props.subject || \"\",\n      content: this.props.content || \"\"\n    });\n  }\n\n  setField(field, trimValue = true) {\n    return evt => {\n      this.setState({\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value\n      });\n    };\n  }\n\n  isInvalid(field) {\n    const fieldValue = this.state[field].trim();\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, React.cloneElement(this.props.children, {\n      onClick: this.showModal\n    }), this.state.displayModal ? /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.displayModal,\n      className: \"compose-dialog\",\n      size: \"lg\",\n      onOpened: this.onModalOpened,\n      backdrop: \"static\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Compose Message\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-fields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"To:\"), /*#__PURE__*/React.createElement(Input, {\n      tabIndex: 1,\n      value: this.state.to,\n      placeholder: \"comma-separated email list\",\n      invalid: this.isInvalid(\"to\"),\n      onChange: this.setField(\"to\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"Cc:\"), /*#__PURE__*/React.createElement(Input, {\n      tabIndex: 2,\n      value: this.state.cc,\n      placeholder: \"comma-separated email list\",\n      invalid: this.isInvalid(\"cc\"),\n      onChange: this.setField(\"cc\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \"Bcc:\"), /*#__PURE__*/React.createElement(Input, {\n      tabIndex: 3,\n      placeholder: \"comma-separated email list\",\n      invalid: this.isInvalid(\"bcc\"),\n      onChange: this.setField(\"bcc\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Subject:\"), /*#__PURE__*/React.createElement(Input, {\n      tabIndex: 4,\n      placeholder: \"\",\n      value: this.state.subject,\n      onChange: this.setField(\"subject\", false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-auto font-weight-bold\",\n      size: \"lg\",\n      color: \"primary\",\n      onClick: this.sendEmail,\n      title: \"Send message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Send\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      title: \"Discard\",\n      color: \"light\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    })))) : null);\n  }\n\n}\nexport default Compose;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/compose-message/ComposeMessage.jsx"],"names":["React","PureComponent","sendMessage","getValidEmails","Button","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","Input","FontAwesomeIcon","faTrash","ReactQuill","Compose","constructor","props","state","displayModal","to","cc","bcc","subject","content","showModal","bind","closeModal","handleChange","sendEmail","setField","setState","value","validTo","length","trim","headers","To","join","Subject","validCc","Cc","validBcc","Bcc","body","then","_","resetFields","field","trimValue","evt","target","isInvalid","fieldValue","render","cloneElement","children","onClick","onModalOpened"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { sendMessage } from \"../../api\";\r\nimport { getValidEmails } from \"../../utils\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input\r\n} from \"reactstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"../../../node_modules/react-quill/dist/quill.snow.css\";\r\nimport \"./composeMessage.scss\";\r\n\r\nexport class Compose extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayModal: false,\r\n      to: props.to || \"\",\r\n      cc: props.cc || \"\",\r\n      bcc: props.bcc || \"\",\r\n      subject: props.subject || \"\",\r\n      content: props.content || \"\"\r\n    };\r\n\r\n    this.showModal = this.showModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sendEmail = this.sendEmail.bind(this);\r\n    this.setField = this.setField.bind(this);\r\n  }\r\n\r\n  showModal() {\r\n    this.setState({\r\n      displayModal: true\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      displayModal: false\r\n    });\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({ content: value });\r\n  }\r\n\r\n  sendEmail() {\r\n    const validTo = getValidEmails(this.state.to);\r\n\r\n    if (\r\n      !validTo.length ||\r\n      this.state.subject.trim() === \"\" ||\r\n      this.state.content === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const headers = {\r\n      To: validTo.join(\", \"),\r\n      Subject: this.state.subject\r\n    };\r\n\r\n    const validCc = getValidEmails(this.state.cc);\r\n    if (validCc.length) {\r\n      headers.Cc = validCc.join(\", \");\r\n    }\r\n\r\n    const validBcc = getValidEmails(this.state.bcc);\r\n    if (validBcc.length) {\r\n      headers.Bcc = validBcc.join(\", \");\r\n    }\r\n\r\n    sendMessage({\r\n      headers,\r\n      body: this.state.content\r\n    }).then(_ => {      \r\n      this.closeModal();\r\n      this.resetFields();\r\n    });\r\n\r\n    this.closeModal();\r\n  }\r\n\r\n  resetFields() {\r\n    this.setState({\r\n      to: this.props.to || \"\",\r\n      cc: this.props.cc || \"\",\r\n      bcc: this.props.bcc || \"\",\r\n      subject: this.props.subject || \"\",\r\n      content: this.props.content || \"\"\r\n    });\r\n  }\r\n\r\n  setField(field, trimValue = true) {\r\n    return evt => {\r\n      this.setState({\r\n        [field]: trimValue ? evt.target.value.trim() : evt.target.value \r\n      });\r\n    };\r\n  }\r\n\r\n  isInvalid(field) {\r\n    const fieldValue = this.state[field].trim();\r\n    return fieldValue.length > 0 && !getValidEmails(fieldValue).length;\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          React.cloneElement(this.props.children, {\r\n            onClick: this.showModal\r\n          })\r\n        }\r\n        {this.state.displayModal ? (\r\n          <Modal\r\n            isOpen={this.state.displayModal}\r\n            className=\"compose-dialog\"\r\n            size=\"lg\"\r\n            onOpened={this.onModalOpened}\r\n            backdrop=\"static\"\r\n            centered={true}\r\n          >\r\n            <ModalHeader toggle={this.closeModal}>Compose Message</ModalHeader>\r\n            <ModalBody>\r\n              <div className=\"message-fields\">\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">To:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={1}\r\n                    value={this.state.to}\r\n                    placeholder=\"comma-separated email list\"\r\n                    invalid={this.isInvalid(\"to\")}\r\n                    onChange={this.setField(\"to\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Cc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={2}\r\n                    value={this.state.cc}\r\n                    placeholder=\"comma-separated email list\"\r\n                    invalid={this.isInvalid(\"cc\")}\r\n                    onChange={this.setField(\"cc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">Bcc:</InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={3}\r\n                    placeholder=\"comma-separated email list\"\r\n                    invalid={this.isInvalid(\"bcc\")}\r\n                    onChange={this.setField(\"bcc\")}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    Subject:\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    tabIndex={4}\r\n                    placeholder=\"\"\r\n                    value={this.state.subject}\r\n                    onChange={this.setField(\"subject\", false)}\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              {/* <div className=\"editor-wrapper\">\r\n                <ReactQuill\r\n                  tabIndex={5}\r\n                  value={this.state.content}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div> */}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                className=\"mr-auto font-weight-bold\"\r\n                size=\"lg\"\r\n                color=\"primary\"\r\n                onClick={this.sendEmail}\r\n                title=\"Send message\"\r\n              >\r\n                Send\r\n              </Button>{\" \"}\r\n              <Button title=\"Discard\" color=\"light\" onClick={this.closeModal}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Compose;\r\n"]},"metadata":{},"sourceType":"module"}