{"ast":null,"code":"export var getValidEmails=function getValidEmails(emailInput){var result=[];if(!emailInput||emailInput.trim()===''){return result;}var regex=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;var emails=emailInput.trim().replace(/[;\\s]/g,',').split(',');for(var i=0;i<emails.length;i++){var e=emails[i];if(e===''){continue;}if(regex.test(e)){result.push(e);}else{result=[];break;}}return result;};export var getNameEmail=function getNameEmail(value){if(!value){return null;}var regex=/(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;var m,name,email;if((m=regex.exec(value))!==null){email=m[2];name=m[1]||email.slice(0,email.indexOf(\"@\"));}return{name:name,email:email};};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/utils/index.jsx"],"names":["getValidEmails","emailInput","result","trim","regex","emails","replace","split","i","length","e","test","push","getNameEmail","value","m","name","email","exec","slice","indexOf"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CAC5C,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAI,CAACD,UAAD,EAAeA,UAAU,CAACE,IAAX,KAAsB,EAAzC,CAA6C,CAC3C,MAAOD,CAAAA,MAAP,CACD,CACD,GAAME,CAAAA,KAAK,CAAG,wJAAd,CAEA,GAAMC,CAAAA,MAAM,CAAGJ,UAAU,CAACE,IAAX,GAAkBG,OAAlB,CAA0B,QAA1B,CAAoC,GAApC,EAAyCC,KAAzC,CAA+C,GAA/C,CAAf,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,MAAM,CAACI,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GAAME,CAAAA,CAAC,CAAGL,MAAM,CAACG,CAAD,CAAhB,CACA,GAAIE,CAAC,GAAK,EAAV,CAAc,CAAC,SAAU,CAEzB,GAAIN,KAAK,CAACO,IAAN,CAAWD,CAAX,CAAJ,CAAmB,CACjBR,MAAM,CAACU,IAAP,CAAYF,CAAZ,EACD,CAFD,IAGK,CACHR,MAAM,CAAG,EAAT,CACA,MACD,CACF,CAED,MAAOA,CAAAA,MAAP,CACD,CAvBM,CAyBP,MAAO,IAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CACrC,GAAI,CAACA,KAAL,CAAY,CAAC,MAAO,KAAP,CAAa,CAE1B,GAAMV,CAAAA,KAAK,CAAG,sCAAd,CACA,GAAIW,CAAAA,CAAJ,CAAOC,IAAP,CAAaC,KAAb,CACA,GAAI,CAACF,CAAC,CAAGX,KAAK,CAACc,IAAN,CAAWJ,KAAX,CAAL,IAA4B,IAAhC,CAAsC,CACpCG,KAAK,CAAGF,CAAC,CAAC,CAAD,CAAT,CACAC,IAAI,CAAGD,CAAC,CAAC,CAAD,CAAD,EAAQE,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAeF,KAAK,CAACG,OAAN,CAAc,GAAd,CAAf,CAAf,CACD,CACD,MAAO,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAAP,CACD,CAVM","sourcesContent":["export const getValidEmails = (emailInput) => {\r\n  let result = [];\r\n  if (!emailInput || emailInput.trim() === '') {\r\n    return result;\r\n  }\r\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\r\n\r\n  for (let i = 0; i < emails.length; i++) {\r\n    const e = emails[i];\r\n    if (e === '') {continue;}\r\n\r\n    if (regex.test(e)) {\r\n      result.push(e);\r\n    }\r\n    else {\r\n      result = [];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getNameEmail = (value) => {\r\n  if (!value) {return null;}\r\n  \r\n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\r\n  let m, name, email;\r\n  if ((m = regex.exec(value)) !== null) {\r\n    email = m[2];\r\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\r\n  }\r\n  return { name, email };\r\n}"]},"metadata":{},"sourceType":"module"}