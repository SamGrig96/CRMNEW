{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\calendar\\\\calendar.js\";\nimport './calendar.css';\nimport \"./index.css\";\nimport * as React from 'react';\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop, lastDateOfMonth } from '@syncfusion/ej2-react-schedule';\nimport SampleBase from './sample-base';\nimport Menu from '../menu/menu';\nimport Axios from 'axios';\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\n\nclass Calendar extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n  }\n\n  onEventRendered(args) {\n    switch (args.data.EventType) {\n      case 'Requested':\n        args.element.style.backgroundColor = '#F57F17';\n        break;\n\n      case 'Confirmed':\n        args.element.style.backgroundColor = '#7fa900';\n        break;\n\n      case 'New':\n        args.element.style.backgroundColor = '#8e24aa';\n        break;\n    }\n  }\n\n  getId() {\n    Axios.get('http://localhost:8080/api/calendarEvent/addEvents/getAll').then(response => {\n      // console.log(response.data.post, 'post')\n      this.setState({\n        data: response.data.post\n      });\n    });\n  }\n\n  editorTemplate(props) {\n    return props !== undefined ? React.createElement(\"table\", {\n      className: \"custom-event-editor\",\n      style: {\n        width: '100%',\n        cellpadding: '5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Summary\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Summary\",\n      className: \"e-field e-input\",\n      type: \"text\",\n      name: \"Subject\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DropDownListComponent, {\n      id: \"EventType\",\n      placeholder: \"Choose status\",\n      \"data-name\": \"EventType\",\n      className: \"e-field\",\n      style: {\n        width: '100%'\n      },\n      dataSource: ['New', 'Requested', 'Confirmed'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"Email\",\n      className: \"e-field e-input\",\n      placeholder: \"Email\",\n      type: \"text\",\n      name: \"Email\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(DateTimePickerComponent, {\n      id: \"StartTime\",\n      format: \"dd/MM/yy hh:mm a\",\n      \"data-name\": \"StartTime\",\n      value: new Date(props.startTime || props.StartTime),\n      className: \"e-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"To\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(DateTimePickerComponent, {\n      id: \"EndTime\",\n      format: \"dd/MM/yy hh:mm a\",\n      \"data-name\": \"EndTime\",\n      value: new Date(props.endTime || props.EndTime),\n      className: \"e-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"e-textlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Reason\"), React.createElement(\"td\", {\n      style: {\n        colspan: '4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"Description\",\n      className: \"e-field e-input\",\n      name: \"Description\",\n      rows: 3,\n      cols: 50,\n      style: {\n        width: '100%',\n        height: '60px !important',\n        resize: 'vertical'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n  onActionBegin(args) {\n    console.log(args, 'args');\n\n    if (args.addedRecords && args.addedRecords.length > 0) {\n      Axios.post('http://localhost:8080/api/calendarEvent/addEvents', args.addedRecords[0]).then(res => {\n        console.log(res.data, 'data');\n        this.getId();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    if (args.changedRecords && args.changedRecords.length > 0) {\n      console.log(args, 'args.changedRecords');\n      Axios.put(`http://localhost:8080/api/calendarEvent/addEvents/update/${args.changedRecords[0]['_id']}`, args.changedRecords[0]).then(res => {// console.log(res.config, 'change')\n      }).catch(err => {// console.log(err) \n      });\n    }\n\n    if (args.deletedRecords && args.deletedRecords.length > 0) {\n      Axios.delete(`http://localhost:8080/api/calendarEvent/addEvents/delete/${args.deletedRecords[0]['_id']}`).then(res => {// console.log(res.config,\"delete\")\n      }); // .catch(err=>{console.log(err)})\n    }\n  }\n\n  componentDidMount() {\n    this.getId();\n  }\n\n  render() {\n    console.log(this.state.data, 'this.state.data');\n    return React.createElement(\"div\", {\n      className: \"schedule-control-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-11 control-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(ScheduleComponent, {\n      width: \"100%\",\n      height: \"650px\",\n      selectedDate: new Date(),\n      ref: t => this.scheduleObj = t,\n      editorTemplate: this.editorTemplate.bind(this),\n      eventSettings: {\n        dataSource: this.state.data\n      },\n      eventRendered: this.onEventRendered.bind(this),\n      actionBegin: this.onActionBegin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Inject, {\n      services: [Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/calendar/calendar.js"],"names":["React","ScheduleComponent","Day","Week","WorkWeek","Month","Agenda","Inject","Resize","DragAndDrop","lastDateOfMonth","SampleBase","Menu","Axios","DateTimePickerComponent","DropDownListComponent","Calendar","constructor","arguments","state","data","onEventRendered","args","EventType","element","style","backgroundColor","getId","get","then","response","setState","post","editorTemplate","props","undefined","width","cellpadding","colspan","Date","startTime","StartTime","endTime","EndTime","height","resize","onActionBegin","console","log","addedRecords","length","res","catch","err","changedRecords","put","deletedRecords","delete","componentDidMount","render","t","scheduleObj","bind","dataSource"],"mappings":"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","sourcesContent":["\r\nimport './calendar.css';\r\nimport \"./index.css\"\r\nimport * as React from 'react';\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop, lastDateOfMonth } from '@syncfusion/ej2-react-schedule';\r\nimport SampleBase from './sample-base'\r\nimport Menu from '../menu/menu';\r\nimport Axios from 'axios';\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\n\r\n\r\n\r\nclass Calendar extends SampleBase {\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n\r\n            data: []\r\n        }\r\n\r\n    }\r\n\r\n    onEventRendered(args) {\r\n        switch (args.data.EventType) {\r\n            case 'Requested':\r\n                args.element.style.backgroundColor = '#F57F17';\r\n                break;\r\n            case 'Confirmed':\r\n                args.element.style.backgroundColor = '#7fa900';\r\n                break;\r\n            case 'New':\r\n                args.element.style.backgroundColor = '#8e24aa';\r\n                break;\r\n        }\r\n    }\r\n\r\ngetId(){\r\n    Axios.get('http://localhost:8080/api/calendarEvent/addEvents/getAll')\r\n    .then(response => {\r\n        // console.log(response.data.post, 'post')\r\n        this.setState({ data: response.data.post })\r\n\r\n    })\r\n}\r\n\r\n\r\n    editorTemplate(props) {\r\n        return ((props !== undefined) ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Summary</td><td style={{ colspan: '4' }}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Status</td><td style={{ colspan: '4' }}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name='EventType' className=\"e-field\" style={{ width: '100%' }} dataSource={['New', 'Requested', 'Confirmed']}>\r\n                </DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Email</td><td style={{ colspan: '4' }}>\r\n                <input id=\"Email\" className=\"e-field e-input\" placeholder=\"Email\" type=\"text\" name=\"Email\" style={{ width: '100%' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">From</td><td style={{ colspan: '4' }}>\r\n                <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yy hh:mm a' data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">To</td><td style={{ colspan: '4' }}>\r\n                <DateTimePickerComponent id=\"EndTime\" format='dd/MM/yy hh:mm a' data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Reason</td><td style={{ colspan: '4' }}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n            </td></tr></tbody></table> : <div></div>);\r\n    }\r\n\r\n\r\n\r\n    onActionBegin(args) {\r\n        console.log(args, 'args')\r\n\r\n        if (args.addedRecords && args.addedRecords.length > 0) {\r\n\r\n\r\n\r\n            Axios.post('http://localhost:8080/api/calendarEvent/addEvents', args.addedRecords[0])\r\n                .then(res =>{\r\n                     console.log(res.data, 'data')\r\n                     this.getId()\r\n                    })\r\n                .catch(err => {\r\n                    console.log(err);\r\n\r\n                })\r\n            \r\n        }\r\n\r\n        if (args.changedRecords && args.changedRecords.length > 0) {\r\n            console.log(args, 'args.changedRecords')\r\n            Axios.put(`http://localhost:8080/api/calendarEvent/addEvents/update/${args.changedRecords[0]['_id']}`, args.changedRecords[0])\r\n                .then(res => {\r\n                    // console.log(res.config, 'change')\r\n                  \r\n                })\r\n                .catch(err => {\r\n                    // console.log(err) \r\n                })\r\n        }\r\n\r\n\r\n        if (args.deletedRecords && args.deletedRecords.length > 0) {\r\n            Axios.delete(`http://localhost:8080/api/calendarEvent/addEvents/delete/${args.deletedRecords[0]['_id']}`)\r\n                .then(res => {\r\n                    // console.log(res.config,\"delete\")\r\n                   \r\n                })\r\n            // .catch(err=>{console.log(err)})\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getId()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        console.log(this.state.data, 'this.state.data')\r\n\r\n        return (\r\n            <div className='schedule-control-section'>\r\n                <Menu />\r\n                <div className='col-md-11 control-section'>\r\n                    <div className='control-wrapper'>\r\n                        <ScheduleComponent width='100%' height='650px' selectedDate={new Date()} ref={t => this.scheduleObj = t} editorTemplate={this.editorTemplate.bind(this)} eventSettings={{ dataSource: this.state.data }} eventRendered={this.onEventRendered.bind(this)} actionBegin={this.onActionBegin.bind(this)}>\r\n                            <Inject services={[Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop]} />\r\n                        </ScheduleComponent>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Calendar\r\n"]},"metadata":{},"sourceType":"module"}