{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import _toConsumableArray from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_MESSAGES,GET_MESSAGES_FAILED,TOGGLE_SELECTED,MESSAGE_LOAD_IN_PROGRESS,MESSAGE_LOAD_SUCCESS,MESSAGE_LOAD_FAIL,GET_MESSAGES_LOAD_IN_PROGRESS,EMPTY_MESSAGES,SET_PAGE_TOKENS,ADD_INITIAL_PAGE_TOKEN,CLEAR_PAGE_TOKENS,MODIFY_MESSAGES_SUCCESS,SET_SEARCH_QUERY}from\"../actions/message-list.actions\";var defaultMessagesState={messages:[],loading:true,pageTokens:[]};export var messagesResult=function messagesResult(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultMessagesState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_MESSAGES:var stateClone=_objectSpread({},state);stateClone.nextPageToken=null;var _pageTokens=_toConsumableArray(stateClone.pageTokens);var nextPageToken=action.payload.nextPageToken;if(nextPageToken&&_pageTokens.indexOf(nextPageToken)===-1){_pageTokens.push(nextPageToken);}return _objectSpread(_objectSpread(_objectSpread({},stateClone),action.payload),{},{loading:false,pageTokens:_pageTokens});case GET_MESSAGES_FAILED:{return _objectSpread(_objectSpread({},state),{},{loading:false,failed:true,error:action.payload});}case EMPTY_MESSAGES:return _objectSpread(_objectSpread({},state),{},{messages:[]});case GET_MESSAGES_LOAD_IN_PROGRESS:return _objectSpread(_objectSpread({},state),{},{label:null,nextPageToken:null,loading:true});case TOGGLE_SELECTED:return _objectSpread(_objectSpread({},state),{},{messages:state.messages.map(function(el){if(action.payload.messageIds.indexOf(el.id)>-1){return _objectSpread(_objectSpread({},el),{},{selected:action.payload.selected});}return el;})});case ADD_INITIAL_PAGE_TOKEN:return _objectSpread(_objectSpread({},state),{},{pageTokens:[action.payload]});case CLEAR_PAGE_TOKENS:return _objectSpread(_objectSpread({},state),{},{pageTokens:[]});case MODIFY_MESSAGES_SUCCESS:return _objectSpread(_objectSpread({},state),{},{messages:state.messages.filter(function(el){return action.payload.modifiedIds.indexOf(el.id)===-1;})});default:return state;}};export var pageTokens=function pageTokens(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{prevPageToken:\"\",nextPageToken:\"\"};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_PAGE_TOKENS:return _objectSpread(_objectSpread({},state),action.payload);default:return state;}};var defaultEmailMessageResult={body:\"\",loading:false,failed:false};export var emailMessageResult=function emailMessageResult(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultEmailMessageResult;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_MESSAGES_LOAD_IN_PROGRESS:case MESSAGE_LOAD_IN_PROGRESS:return _objectSpread(_objectSpread({},state),{},{body:\"\",loading:true,failed:false});case MESSAGE_LOAD_SUCCESS:var _action$payload=action.payload,body=_action$payload.body,rest=_objectWithoutProperties(_action$payload,[\"body\"]);return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{loading:false,failed:false});case MESSAGE_LOAD_FAIL:return _objectSpread(_objectSpread({},state),{},{loading:false,failed:true,error:action.payload});default:return state;}};export var searchQuery=function searchQuery(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_SEARCH_QUERY:return action.payload;default:return state;}};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/content/message-list/reducers/message-list.reducers.jsx"],"names":["GET_MESSAGES","GET_MESSAGES_FAILED","TOGGLE_SELECTED","MESSAGE_LOAD_IN_PROGRESS","MESSAGE_LOAD_SUCCESS","MESSAGE_LOAD_FAIL","GET_MESSAGES_LOAD_IN_PROGRESS","EMPTY_MESSAGES","SET_PAGE_TOKENS","ADD_INITIAL_PAGE_TOKEN","CLEAR_PAGE_TOKENS","MODIFY_MESSAGES_SUCCESS","SET_SEARCH_QUERY","defaultMessagesState","messages","loading","pageTokens","messagesResult","state","action","type","stateClone","nextPageToken","payload","indexOf","push","failed","error","label","map","el","messageIds","id","selected","filter","modifiedIds","prevPageToken","defaultEmailMessageResult","body","emailMessageResult","rest","searchQuery"],"mappings":"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","sourcesContent":["import {\r\n  GET_MESSAGES,\r\n  GET_MESSAGES_FAILED,\r\n  TOGGLE_SELECTED,\r\n  MESSAGE_LOAD_IN_PROGRESS,\r\n  MESSAGE_LOAD_SUCCESS,\r\n  MESSAGE_LOAD_FAIL,\r\n  GET_MESSAGES_LOAD_IN_PROGRESS,\r\n  EMPTY_MESSAGES,\r\n  SET_PAGE_TOKENS,\r\n  ADD_INITIAL_PAGE_TOKEN,\r\n  CLEAR_PAGE_TOKENS,\r\n  MODIFY_MESSAGES_SUCCESS,\r\n  SET_SEARCH_QUERY\r\n} from \"../actions/message-list.actions\";\r\n\r\nconst defaultMessagesState = {\r\n  messages: [],\r\n  loading: true,\r\n  pageTokens: []\r\n};\r\n\r\nexport const messagesResult = (state = defaultMessagesState, action) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES:\r\n      const stateClone = {...state};\r\n      stateClone.nextPageToken = null;\r\n      const pageTokens = [...stateClone.pageTokens];\r\n      const nextPageToken = action.payload.nextPageToken;\r\n      if (nextPageToken && pageTokens.indexOf(nextPageToken) === -1) {\r\n        pageTokens.push(nextPageToken);\r\n      }\r\n      return {\r\n        ...stateClone,\r\n        ...action.payload,\r\n        loading: false,\r\n        pageTokens: pageTokens\r\n      };\r\n    case GET_MESSAGES_FAILED: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    }\r\n    case EMPTY_MESSAGES:\r\n      return {...state, messages: []};\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n      return {\r\n        ...state,\r\n        label: null,\r\n        nextPageToken: null,\r\n        loading: true\r\n      }\r\n    case TOGGLE_SELECTED:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(el => {\r\n          if (action.payload.messageIds.indexOf(el.id) > -1) {\r\n            return { ...el, selected: action.payload.selected };\r\n          }\r\n          return el;\r\n        })\r\n      };\r\n    case ADD_INITIAL_PAGE_TOKEN:\r\n      return {\r\n        ...state,\r\n        pageTokens: [action.payload]\r\n      }\r\n    case CLEAR_PAGE_TOKENS:\r\n      return {\r\n        ...state,\r\n        pageTokens: []\r\n      }\r\n    case MODIFY_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(el => action.payload.modifiedIds.indexOf(el.id) === -1)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const pageTokens = (\r\n  state = { prevPageToken: \"\", nextPageToken: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_PAGE_TOKENS:\r\n      return {...state, ...action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst defaultEmailMessageResult = {\r\n  body: \"\",\r\n  loading: false,\r\n  failed: false\r\n};\r\n\r\nexport const emailMessageResult = (\r\n  state = defaultEmailMessageResult,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES_LOAD_IN_PROGRESS:\r\n    case MESSAGE_LOAD_IN_PROGRESS:\r\n      return { ...state, body: \"\", loading: true, failed: false };\r\n    case MESSAGE_LOAD_SUCCESS:\r\n      const {body, ...rest} = action.payload;\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        loading: false,\r\n        failed: false\r\n      };\r\n    case MESSAGE_LOAD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        failed: true,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const searchQuery = (state = \"\", action) => {\r\n  switch(action.type) {\r\n    case SET_SEARCH_QUERY:\r\n      return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}