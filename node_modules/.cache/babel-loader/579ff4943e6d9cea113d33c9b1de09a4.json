{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_LABELS,SELECT_LABEL}from\"./sidebar.actions\";var defaultLabelState={labels:[]};export var labelsResult=function labelsResult(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultLabelState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_LABELS:console.log(action.payload);return _objectSpread(_objectSpread({},state),{},{labels:action.payload});case SELECT_LABEL:return _objectSpread(_objectSpread({},state),{},{labels:state.labels.map(function(el){if(el.id===action.payload){return _objectSpread(_objectSpread({},el),{},{selected:true});}return _objectSpread(_objectSpread({},el),{},{selected:false});})});default:return state;}};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/sidebar/sidebar.reducers.jsx"],"names":["GET_LABELS","SELECT_LABEL","defaultLabelState","labels","labelsResult","state","action","type","console","log","payload","map","el","id","selected"],"mappings":"+NAAA,OAASA,UAAT,CAAqBC,YAArB,KAAyC,mBAAzC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACtBC,MAAM,CAAE,EADc,CAA1B,CAIA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAuC,IAAtCC,CAAAA,KAAsC,2DAA9BH,iBAA8B,IAAXI,CAAAA,MAAW,2CACjE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,UAAL,CACAQ,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EACE,sCACKL,KADL,MAEEF,MAAM,CAAEG,MAAM,CAACI,OAFjB,GAIF,IAAKT,CAAAA,YAAL,CACE,sCACKI,KADL,MAEEF,MAAM,CAAEE,KAAK,CAACF,MAAN,CAAaQ,GAAb,CAAiB,SAAAC,EAAE,CAAI,CAC7B,GAAIA,EAAE,CAACC,EAAH,GAAUP,MAAM,CAACI,OAArB,CAA8B,CAC5B,sCACKE,EADL,MAEEE,QAAQ,CAAE,IAFZ,GAID,CACD,sCACKF,EADL,MAEEE,QAAQ,CAAE,KAFZ,GAID,CAXO,CAFV,GAeF,QACE,MAAOT,CAAAA,KAAP,CAxBJ,CA0BD,CA3BM","sourcesContent":["import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\r\n\r\nconst defaultLabelState = {\r\n    labels: []\r\n}\r\n\r\nexport const labelsResult = (state = defaultLabelState, action) => {\r\n  switch (action.type) {\r\n    case GET_LABELS:\r\n    console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      };\r\n    case SELECT_LABEL:\r\n      return {\r\n        ...state, \r\n        labels: state.labels.map(el => {\r\n          if (el.id === action.payload) {\r\n            return {\r\n              ...el, \r\n              selected: true\r\n            }\r\n          }\r\n          return {\r\n            ...el, \r\n            selected: false\r\n          };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}