{"ast":null,"code":"export const getValidEmails = emailInput => {\n  let result = [];\n\n  if (!emailInput || emailInput.trim() === '') {\n    return result;\n  }\n\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\n\n  for (let i = 0; i < emails.length; i++) {\n    const e = emails[i];\n\n    if (e === '') {\n      continue;\n    }\n\n    if (regex.test(e)) {\n      result.push(e);\n    } else {\n      result = [];\n      break;\n    }\n  }\n\n  return result;\n};\nexport const getNameEmail = value => {\n  if (!value) {\n    return null;\n  }\n\n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\n  let m, name, email;\n\n  if ((m = regex.exec(value)) !== null) {\n    email = m[2];\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\n  }\n\n  return {\n    name,\n    email\n  };\n};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/utils/index.jsx"],"names":["getValidEmails","emailInput","result","trim","regex","emails","replace","split","i","length","e","test","push","getNameEmail","value","m","name","email","exec","slice","indexOf"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,UAAD,IAAgB;AAC5C,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,CAACD,UAAD,IAAeA,UAAU,CAACE,IAAX,OAAsB,EAAzC,EAA6C;AAC3C,WAAOD,MAAP;AACD;;AACD,QAAME,KAAK,GAAG,wJAAd;AAEA,QAAMC,MAAM,GAAGJ,UAAU,CAACE,IAAX,GAAkBG,OAAlB,CAA0B,QAA1B,EAAoC,GAApC,EAAyCC,KAAzC,CAA+C,GAA/C,CAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAME,CAAC,GAAGL,MAAM,CAACG,CAAD,CAAhB;;AACA,QAAIE,CAAC,KAAK,EAAV,EAAc;AAAC;AAAU;;AAEzB,QAAIN,KAAK,CAACO,IAAN,CAAWD,CAAX,CAAJ,EAAmB;AACjBR,MAAAA,MAAM,CAACU,IAAP,CAAYF,CAAZ;AACD,KAFD,MAGK;AACHR,MAAAA,MAAM,GAAG,EAAT;AACA;AACD;AACF;;AAED,SAAOA,MAAP;AACD,CAvBM;AAyBP,OAAO,MAAMW,YAAY,GAAIC,KAAD,IAAW;AACrC,MAAI,CAACA,KAAL,EAAY;AAAC,WAAO,IAAP;AAAa;;AAE1B,QAAMV,KAAK,GAAG,sCAAd;AACA,MAAIW,CAAJ,EAAOC,IAAP,EAAaC,KAAb;;AACA,MAAI,CAACF,CAAC,GAAGX,KAAK,CAACc,IAAN,CAAWJ,KAAX,CAAL,MAA4B,IAAhC,EAAsC;AACpCG,IAAAA,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAT;AACAC,IAAAA,IAAI,GAAGD,CAAC,CAAC,CAAD,CAAD,IAAQE,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeF,KAAK,CAACG,OAAN,CAAc,GAAd,CAAf,CAAf;AACD;;AACD,SAAO;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD,CAVM","sourcesContent":["export const getValidEmails = (emailInput) => {\r\n  let result = [];\r\n  if (!emailInput || emailInput.trim() === '') {\r\n    return result;\r\n  }\r\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  \r\n  const emails = emailInput.trim().replace(/[;\\s]/g, ',').split(',');\r\n\r\n  for (let i = 0; i < emails.length; i++) {\r\n    const e = emails[i];\r\n    if (e === '') {continue;}\r\n\r\n    if (regex.test(e)) {\r\n      result.push(e);\r\n    }\r\n    else {\r\n      result = [];\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getNameEmail = (value) => {\r\n  if (!value) {return null;}\r\n  \r\n  const regex = /(?:\"?([^\"]*)\"?\\s)?(?:<?(.+@[^>]+)>?)/;\r\n  let m, name, email;\r\n  if ((m = regex.exec(value)) !== null) {\r\n    email = m[2];\r\n    name = m[1] || email.slice(0, email.indexOf(\"@\"));\r\n  }\r\n  return { name, email };\r\n}"]},"metadata":{},"sourceType":"module"}