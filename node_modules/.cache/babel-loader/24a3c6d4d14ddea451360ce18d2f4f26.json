{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\AppContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Main from \"./components/main/Main\";\nimport Login from \"./components/login/Login\";\nimport Authenticating from \"./components/authenticating/Authenticating\";\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { signOut, signIn, checkSignInStatus } from \"./api/authentication\";\nimport { mountScripts } from \"./api/scripts\";\nimport { SIGNED_OUT, SIGNED_IN, AUTH_SUCCESS, AUTH_FAIL, AUTH_IN_PROGRESS } from \"./constants\";\nexport class AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInStatus: SIGNED_OUT,\n      googleUser: undefined\n    };\n    this.init = this.init.bind(this);\n    this.initClient = this.initClient.bind(this);\n    this.onSignout = this.onSignout.bind(this);\n    this.onSignInSuccess = this.onSignInSuccess.bind(this);\n    this.onSignIn = this.onSignIn.bind(this);\n  }\n\n  componentDidMount() {\n    mountScripts().then(this.init);\n  }\n\n  init() {\n    window.gapi.load(\"client:auth2\", this.initClient); // let mygapi=JSON.stringify(gapi)\n    // console.log(mygapi,\"json\")\n  }\n\n  initClient() {\n    checkSignInStatus().then(this.onSignInSuccess).catch(_ => {\n      this.setState({\n        signInStatus: AUTH_FAIL\n      });\n    });\n  }\n\n  onSignout() {\n    this.props.signOut();\n  }\n\n  onSignIn() {\n    signIn().then(this.onSignInSuccess);\n  }\n\n  onSignInSuccess(googleUser) {\n    this.setState({\n      signInStatus: AUTH_SUCCESS,\n      googleUser\n    });\n  }\n\n  renderView() {\n    const {\n      signInStatus\n    } = this.state;\n\n    if (signInStatus === AUTH_SUCCESS) {\n      return /*#__PURE__*/React.createElement(Main, {\n        googleUser: this.state.googleUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      });\n    } else if (signInStatus === AUTH_IN_PROGRESS) {\n      return /*#__PURE__*/React.createElement(Authenticating, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Login, {\n        onSignIn: this.onSignIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    } // return(    <div>false url</div>)\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.props.location.pathname === \"/\" ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/inbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }) : this.renderView());\n  }\n\n}\nexport default withRouter(AppContainer);","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/AppContainer.jsx"],"names":["React","Component","Redirect","withRouter","Main","Login","Authenticating","signOut","signIn","checkSignInStatus","mountScripts","SIGNED_OUT","SIGNED_IN","AUTH_SUCCESS","AUTH_FAIL","AUTH_IN_PROGRESS","AppContainer","constructor","props","state","signInStatus","googleUser","undefined","init","bind","initClient","onSignout","onSignInSuccess","onSignIn","componentDidMount","then","window","gapi","load","catch","_","setState","renderView","render","location","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport Main from \"./components/main/Main\";\r\nimport Login from \"./components/login/Login\";\r\nimport Authenticating from \"./components/authenticating/Authenticating\";\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n\r\nimport { signOut, signIn, checkSignInStatus } from \"./api/authentication\";\r\nimport { mountScripts } from \"./api/scripts\";\r\n\r\nimport {\r\n  SIGNED_OUT,\r\n  SIGNED_IN,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_IN_PROGRESS\r\n} from \"./constants\";\r\n\r\nexport class AppContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      signInStatus: SIGNED_OUT,\r\n      googleUser: undefined\r\n    }\r\n\r\n    this.init = this.init.bind(this);\r\n    this.initClient = this.initClient.bind(this);\r\n    this.onSignout = this.onSignout.bind(this);\r\n    this.onSignInSuccess = this.onSignInSuccess.bind(this);\r\n    this.onSignIn = this.onSignIn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    mountScripts().then(this.init);\r\n  }\r\n\r\n  init() {\r\n    window.gapi.load(\"client:auth2\", this.initClient);\r\n    // let mygapi=JSON.stringify(gapi)\r\n    // console.log(mygapi,\"json\")\r\n  }\r\n\r\n  initClient() {\r\n    checkSignInStatus()\r\n    .then(this.onSignInSuccess)\r\n    .catch(_ => {\r\n      this.setState({\r\n        signInStatus: AUTH_FAIL\r\n      })\r\n    });\r\n  }\r\n\r\n  onSignout() {\r\n    this.props.signOut();\r\n  }\r\n\r\n  onSignIn() {\r\n    signIn().then(this.onSignInSuccess);\r\n  }\r\n\r\n  onSignInSuccess(googleUser) {\r\n    this.setState({\r\n      signInStatus: AUTH_SUCCESS,\r\n      googleUser\r\n    });\r\n  }\r\n\r\n  renderView() {\r\n\r\n    const { signInStatus } = this.state;\r\n\r\n    if (signInStatus === AUTH_SUCCESS) {\r\n      return <Main googleUser={this.state.googleUser} />;\r\n    } else if (signInStatus === AUTH_IN_PROGRESS) {\r\n      return <Authenticating />;\r\n    } else {\r\n      return <Login onSignIn={this.onSignIn} />;\r\n\r\n    }\r\n    // return(    <div>false url</div>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.location.pathname === \"/\" ? (\r\n          <Redirect to=\"/inbox\" />\r\n        ) : (\r\n          this.renderView()\r\n        )}\r\n      </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppContainer);\r\n"]},"metadata":{},"sourceType":"module"}