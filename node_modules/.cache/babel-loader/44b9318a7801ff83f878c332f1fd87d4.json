{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { merge, formatUnit, isNullOrUndefined, append, detach, isBlazor, extend } from '@syncfusion/ej2-base';\nimport { attributes, addClass, removeClass, prepend, closest, remove } from '@syncfusion/ej2-base';\nimport { Component, EventHandler, Property, Complex, Event } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { Animation, rippleEffect, Touch } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { ListBase, getFieldValues } from '../common/list-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, blazorTemplates } from '@syncfusion/ej2-base'; // Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\n\nvar effectsConfig = {\n  'None': [],\n  'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n  'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n  'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n  'None': [],\n  'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n  'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n  'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n  'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n}; // don't use space in classnames.\n\nexport var classNames = {\n  root: 'e-listview',\n  hover: 'e-hover',\n  selected: 'e-active',\n  focused: 'e-focused',\n  parentItem: 'e-list-parent',\n  listItem: 'e-list-item',\n  listIcon: 'e-list-icon',\n  textContent: 'e-text-content',\n  listItemText: 'e-list-text',\n  groupListItem: 'e-list-group-item',\n  hasChild: 'e-has-child',\n  view: 'e-view',\n  header: 'e-list-header',\n  headerText: 'e-headertext',\n  headerTemplateText: 'e-headertemplate-text',\n  text: 'e-text',\n  disable: 'e-disabled',\n  content: 'e-content',\n  icon: 'e-icons',\n  backIcon: 'e-icon-back',\n  checkboxWrapper: 'e-checkbox-wrapper',\n  checkbox: 'e-checkbox',\n  checked: 'e-check',\n  checklist: 'e-checklist',\n  checkboxIcon: 'e-frame',\n  checkboxRight: 'e-checkbox-right',\n  checkboxLeft: 'e-checkbox-left',\n  listviewCheckbox: 'e-listview-checkbox',\n  itemCheckList: 'e-checklist'\n};\nvar LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nvar LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\n\nvar FieldSettings =\n/** @class */\nfunction (_super) {\n  __extends(FieldSettings, _super);\n\n  function FieldSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('id')], FieldSettings.prototype, \"id\", void 0);\n\n  __decorate([Property('text')], FieldSettings.prototype, \"text\", void 0);\n\n  __decorate([Property('isChecked')], FieldSettings.prototype, \"isChecked\", void 0);\n\n  __decorate([Property('isVisible')], FieldSettings.prototype, \"isVisible\", void 0);\n\n  __decorate([Property('enabled')], FieldSettings.prototype, \"enabled\", void 0);\n\n  __decorate([Property('iconCss')], FieldSettings.prototype, \"iconCss\", void 0);\n\n  __decorate([Property('child')], FieldSettings.prototype, \"child\", void 0);\n\n  __decorate([Property('tooltip')], FieldSettings.prototype, \"tooltip\", void 0);\n\n  __decorate([Property('groupBy')], FieldSettings.prototype, \"groupBy\", void 0);\n\n  __decorate([Property('text')], FieldSettings.prototype, \"sortBy\", void 0);\n\n  __decorate([Property('htmlAttributes')], FieldSettings.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('tableName')], FieldSettings.prototype, \"tableName\", void 0);\n\n  return FieldSettings;\n}(ChildProperty);\n\nexport { FieldSettings };\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var lvObj = new ListView({});\n *   lvObj.appendTo(\"#listview\");\n * ```\n */\n\nvar ListView =\n/** @class */\nfunction (_super) {\n  __extends(ListView, _super);\n  /**\n   * Constructor for creating the widget\n   */\n\n\n  function ListView(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * @private\n   */\n\n\n  ListView.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'htmlAttributes':\n          this.setHTMLAttribute();\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n\n        case 'enable':\n          this.setEnable();\n          break;\n\n        case 'width':\n        case 'height':\n          this.setSize();\n          break;\n\n        case 'enableRtl':\n          this.setEnableRTL();\n          break;\n\n        case 'fields':\n          this.listBaseOption.fields = this.fields.properties;\n\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.reRender();\n          }\n\n          break;\n\n        case 'headerTitle':\n          if (!this.curDSLevel.length) {\n            this.header(this.headerTitle, false);\n          }\n\n          break;\n\n        case 'showHeader':\n          this.header(this.headerTitle, false);\n          break;\n\n        case 'enableVirtualization':\n          if (!isNullOrUndefined(this.contentContainer)) {\n            detach(this.contentContainer);\n          }\n\n          this.refresh();\n          break;\n\n        case 'showCheckBox':\n        case 'checkBoxPosition':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.setCheckbox();\n          }\n\n          break;\n\n        case 'dataSource':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.reRender();\n          }\n\n          break;\n\n        case 'sortOrder':\n        case 'showIcon':\n          if (this.enableVirtualization) {\n            this.virtualizationModule.reRenderUiVirtualization();\n          } else {\n            this.listBaseOption.showIcon = this.showIcon;\n            this.curViewDS = this.getSubDS();\n            this.resetCurrentList();\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }; // Model Changes\n\n\n  ListView.prototype.setHTMLAttribute = function () {\n    if (Object.keys(this.htmlAttributes).length) {\n      attributes(this.element, this.htmlAttributes);\n    }\n  };\n\n  ListView.prototype.setCSSClass = function (oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.element], this.cssClass.split(' ').filter(function (css) {\n        return css;\n      }));\n    }\n\n    if (oldCSSClass) {\n      removeClass([this.element], oldCSSClass.split(' ').filter(function (css) {\n        return css;\n      }));\n    }\n  };\n\n  ListView.prototype.setSize = function () {\n    this.element.style.height = formatUnit(this.height);\n    this.element.style.width = formatUnit(this.width);\n    this.isWindow = this.element.clientHeight ? false : true;\n  };\n\n  ListView.prototype.setEnable = function () {\n    this.enableElement(this.element, this.enable);\n  };\n\n  ListView.prototype.setEnableRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  ListView.prototype.enableElement = function (element, isEnabled) {\n    if (isEnabled) {\n      element.classList.remove(classNames.disable);\n    } else {\n      element.classList.add(classNames.disable);\n    }\n  }; // Support Component Functions\n\n\n  ListView.prototype.header = function (text, showBack) {\n    if (this.headerEle === undefined && this.showHeader) {\n      if (this.enableHtmlSanitizer) {\n        this.setProperties({\n          headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n        }, true);\n      }\n\n      this.headerEle = this.createElement('div', {\n        className: classNames.header\n      });\n      var innerHeaderEle = this.createElement('span', {\n        className: classNames.headerText,\n        innerHTML: this.headerTitle\n      });\n      var textEle = this.createElement('div', {\n        className: classNames.text,\n        innerHTML: innerHeaderEle.outerHTML\n      });\n      var hedBackButton = this.createElement('div', {\n        className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n        attrs: {\n          style: 'display:none;'\n        }\n      });\n      this.headerEle.appendChild(hedBackButton);\n      this.headerEle.appendChild(textEle);\n\n      if (this.headerTemplate) {\n        var compiledString = compile(this.headerTemplate);\n        var headerTemplateEle = this.createElement('div', {\n          className: classNames.headerTemplateText\n        });\n        append(compiledString({}, null, null, this.LISTVIEW_HEADERTEMPLATE_ID), headerTemplateEle);\n        append([headerTemplateEle], this.headerEle);\n        this.updateBlazorTemplates(false, true, true);\n      }\n\n      if (this.headerTemplate && this.headerTitle) {\n        textEle.classList.add('header');\n      }\n\n      this.element.classList.add('e-has-header');\n      prepend([this.headerEle], this.element);\n    } else if (this.headerEle) {\n      if (this.showHeader) {\n        this.headerEle.style.display = '';\n        var textEle = this.headerEle.querySelector('.' + classNames.headerText);\n        var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n\n        if (this.enableHtmlSanitizer) {\n          text = SanitizeHtmlHelper.sanitize(text);\n        }\n\n        textEle.innerHTML = text;\n\n        if (this.headerTemplate && showBack) {\n          textEle.parentElement.classList.remove('header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n        }\n\n        if (this.headerTemplate && !showBack) {\n          textEle.parentElement.classList.add('header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n          this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n        }\n\n        if (showBack === true) {\n          hedBackButton.style.display = '';\n        } else {\n          hedBackButton.style.display = 'none';\n        }\n      } else {\n        this.headerEle.style.display = 'none';\n      }\n    }\n  }; // Animation Related Functions\n\n\n  ListView.prototype.switchView = function (fromView, toView, reverse) {\n    var _this = this;\n\n    if (fromView && toView) {\n      var fPos_1 = fromView.style.position;\n      var overflow_1 = this.element.style.overflow !== 'hidden' ? this.element.style.overflow : '';\n      fromView.style.position = 'absolute';\n      fromView.classList.add('e-view');\n      var anim = void 0;\n      var duration = this.animation.duration;\n\n      if (this.animation.effect) {\n        anim = this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect];\n      } else {\n        var slideLeft = 'SlideLeft';\n        anim = effectsConfig[slideLeft];\n        reverse = this.enableRtl;\n        duration = 0;\n      }\n\n      this.element.style.overflow = 'hidden';\n      this.aniObj.animate(fromView, {\n        name: reverse === true ? anim[0] : anim[1],\n        duration: duration,\n        timingFunction: this.animation.easing,\n        end: function end(model) {\n          fromView.style.display = 'none';\n          _this.element.style.overflow = overflow_1;\n          fromView.style.position = fPos_1;\n          fromView.classList.remove('e-view');\n        }\n      });\n      toView.style.display = '';\n      this.aniObj.animate(toView, {\n        name: reverse === true ? anim[2] : anim[3],\n        duration: duration,\n        timingFunction: this.animation.easing,\n        end: function end() {\n          _this.trigger('actionComplete');\n        }\n      });\n      this.curUL = toView;\n    }\n  };\n\n  ListView.prototype.preRender = function () {\n    this.listBaseOption = {\n      template: this.template,\n      headerTemplate: this.headerTemplate,\n      groupTemplate: this.groupTemplate,\n      expandCollapse: true,\n      listClass: '',\n      ariaAttributes: {\n        itemRole: 'option',\n        listRole: 'presentation',\n        itemText: '',\n        groupItemRole: 'group',\n        wrapperRole: 'presentation'\n      },\n      fields: this.fields.properties,\n      sortOrder: this.sortOrder,\n      showIcon: this.showIcon,\n      itemCreated: this.renderCheckbox.bind(this),\n      templateID: \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY,\n      groupTemplateID: \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY,\n      enableHtmlSanitizer: this.enableHtmlSanitizer,\n      removeBlazorID: true\n    };\n    this.initialization();\n  };\n\n  ListView.prototype.initialization = function () {\n    this.curDSLevel = [];\n    this.animateOptions = {};\n    this.curViewDS = [];\n    this.currentLiElements = [];\n    this.isNestedList = false;\n    this.selectedData = [];\n    this.selectedId = [];\n    this.LISTVIEW_TEMPLATE_ID = \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY;\n    this.LISTVIEW_GROUPTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY;\n    this.LISTVIEW_HEADERTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_HEADERTEMPLATE_PROPERTY;\n    this.aniObj = new Animation(this.animateOptions);\n    this.removeElement(this.curUL);\n    this.removeElement(this.ulElement);\n    this.removeElement(this.headerEle);\n    this.removeElement(this.contentContainer);\n    this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n  };\n\n  ListView.prototype.renderCheckbox = function (args) {\n    if (args.item.classList.contains(classNames.hasChild)) {\n      this.isNestedList = true;\n    }\n\n    if (this.showCheckBox && this.isValidLI(args.item)) {\n      var checkboxElement = void 0;\n      var fieldData = void 0;\n      checkboxElement = createCheckBox(this.createElement, false, {\n        checked: false,\n        enableRtl: this.enableRtl,\n        cssClass: classNames.listviewCheckbox\n      });\n      checkboxElement.setAttribute('role', 'checkbox');\n      var frameElement_1 = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n      args.item.classList.add(classNames.itemCheckList);\n      args.item.firstElementChild.classList.add(classNames.checkbox);\n\n      if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n        fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n\n        if (fieldData[this.listBaseOption.fields.isChecked]) {\n          this.checkInternally(args, checkboxElement);\n        }\n      } else if ((typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1) {\n        this.checkInternally(args, checkboxElement);\n      }\n\n      checkboxElement.setAttribute('aria-checked', frameElement_1.classList.contains(classNames.checked) ? 'true' : 'false');\n\n      if (this.checkBoxPosition === 'Left') {\n        checkboxElement.classList.add(classNames.checkboxLeft);\n        args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n        args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n      } else {\n        checkboxElement.classList.add(classNames.checkboxRight);\n        args.item.firstElementChild.classList.add(classNames.checkboxRight);\n        args.item.firstElementChild.appendChild(checkboxElement);\n      }\n\n      this.currentLiElements.push(args.item);\n    }\n  };\n\n  ListView.prototype.checkInternally = function (args, checkboxElement) {\n    args.item.classList.add(classNames.selected);\n    args.item.setAttribute('aria-selected', 'true');\n    checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n    checkboxElement.setAttribute('aria-checked', 'true');\n  };\n  /**\n   * It is used to check the checkbox of an item.\n   * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n   */\n\n\n  ListView.prototype.checkItem = function (item) {\n    this.toggleCheckBase(item, true);\n  };\n\n  ListView.prototype.toggleCheckBase = function (item, checked) {\n    if (this.showCheckBox) {\n      var liElement = item;\n\n      if (item instanceof Object && item.constructor !== HTMLLIElement) {\n        liElement = this.getLiFromObjOrElement(item);\n      }\n\n      if (!isNullOrUndefined(liElement)) {\n        var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n        checked ? liElement.classList.add(classNames.selected) : liElement.classList.remove(classNames.selected);\n        liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n        checked ? checkboxIcon.classList.add(classNames.checked) : checkboxIcon.classList.remove(classNames.checked);\n        checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n      }\n\n      this.setSelectedItemData(liElement);\n    }\n  };\n  /**\n   * It is used to uncheck the checkbox of an item.\n   * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n   */\n\n\n  ListView.prototype.uncheckItem = function (item) {\n    this.toggleCheckBase(item, false);\n  };\n  /**\n   * It is used to check all the items in ListView.\n   */\n\n\n  ListView.prototype.checkAllItems = function () {\n    this.toggleAllCheckBase(true);\n  };\n  /**\n   * It is used to un-check all the items in ListView.\n   */\n\n\n  ListView.prototype.uncheckAllItems = function () {\n    this.toggleAllCheckBase(false);\n  };\n\n  ListView.prototype.toggleAllCheckBase = function (checked) {\n    if (this.showCheckBox) {\n      for (var i = 0; i < this.liCollection.length; i++) {\n        var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n\n        if (checkIcon) {\n          if (checked) {\n            if (!checkIcon.classList.contains(classNames.checked)) {\n              this.checkItem(this.liCollection[i]);\n            }\n          } else {\n            if (checkIcon.classList.contains(classNames.checked)) {\n              this.uncheckItem(this.liCollection[i]);\n            }\n          }\n        }\n      }\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.checkedItem(checked);\n      }\n    }\n  };\n\n  ListView.prototype.setCheckbox = function () {\n    var _this = this;\n\n    if (this.showCheckBox) {\n      var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n      var args_1 = {\n        item: undefined,\n        curData: undefined,\n        dataSource: undefined,\n        fields: undefined,\n        options: undefined,\n        text: ''\n      };\n      liCollection.forEach(function (element) {\n        args_1.item = element;\n        args_1.curData = _this.getItemData(element);\n\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n\n        _this.renderCheckbox(args_1);\n\n        if (args_1.item.classList.contains(classNames.selected)) {\n          _this.checkInternally(args_1, args_1.item.querySelector('.' + classNames.checkboxWrapper));\n        }\n      });\n    } else {\n      var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n      liCollection.forEach(function (element) {\n        element.classList.remove(classNames.selected);\n        element.firstElementChild.classList.remove(classNames.checkbox);\n\n        _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n      });\n\n      if (this.selectedItems) {\n        this.selectedItems.item.classList.add(classNames.selected);\n      }\n    }\n  };\n  /**\n   * It is used to refresh the UI list item height\n   */\n\n\n  ListView.prototype.refreshItemHeight = function () {\n    this.virtualizationModule.refreshItemHeight();\n  };\n\n  ListView.prototype.clickHandler = function (e) {\n    var target = e.target;\n    var classList = target.classList;\n\n    if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n      if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n        this.uncheckAllItems();\n      }\n\n      this.back();\n    } else {\n      var li = closest(target.parentNode, '.' + classNames.listItem);\n\n      if (li === null) {\n        li = target;\n      }\n\n      this.removeFocus();\n\n      if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n        if (e.target.classList.contains(classNames.checkboxIcon)) {\n          li.classList.add(classNames.focused);\n\n          if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n            var args = {\n              curData: undefined,\n              dataSource: undefined,\n              fields: undefined,\n              options: undefined,\n              text: undefined,\n              item: li\n            };\n            this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n          } else {\n            this.uncheckItem(li);\n            li.classList.add(classNames.focused);\n          }\n\n          if (this.enableVirtualization) {\n            this.virtualizationModule.setCheckboxLI(li, e);\n          }\n\n          if (e) {\n            var eventArgs = this.selectEventData(li, e);\n            var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n            merge(eventArgs, {\n              isChecked: checkIcon.classList.contains(classNames.checked)\n            });\n            this.trigger('select', eventArgs);\n          }\n        } else if (li.classList.contains(classNames.hasChild)) {\n          this.removeHover();\n          this.removeSelect();\n          this.removeSelect(li);\n          this.setSelectLI(li, e);\n          li.classList.remove(classNames.selected);\n        } else {\n          this.setCheckboxLI(li, e);\n        }\n      } else {\n        this.setSelectLI(li, e);\n      }\n    }\n  };\n\n  ListView.prototype.removeElement = function (element) {\n    return element && element.parentNode && element.parentNode.removeChild(element);\n  };\n\n  ListView.prototype.hoverHandler = function (e) {\n    var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n    this.setHoverLI(curLi);\n  };\n\n  ListView.prototype.leaveHandler = function (e) {\n    this.removeHover();\n  };\n\n  ;\n\n  ListView.prototype.homeKeyHandler = function (e, end) {\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      if (this.selectedItems) {\n        this.selectedItems.item.setAttribute('aria-selected', 'false');\n      }\n\n      var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n      var focusedElement = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n\n      if (focusedElement) {\n        focusedElement.classList.remove(classNames.focused);\n\n        if (!this.showCheckBox) {\n          focusedElement.classList.remove(classNames.selected);\n        }\n      }\n\n      var index = !end ? 0 : li.length - 1;\n\n      if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n        li[index].classList.add(classNames.focused);\n      } else {\n        this.setSelectLI(li[index], e);\n      }\n\n      if (li[index]) {\n        this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n      } else {\n        this.element.removeAttribute('aria-activedescendant');\n      }\n    }\n  };\n\n  ListView.prototype.onArrowKeyDown = function (e, prev) {\n    var siblingLI;\n    var li;\n    var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n\n    if (hasChild || this.showCheckBox) {\n      li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n      siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n\n      if (!isNullOrUndefined(siblingLI)) {\n        if (li) {\n          li.classList.remove(classNames.focused);\n\n          if (!this.showCheckBox) {\n            li.classList.remove(classNames.selected);\n          }\n        }\n\n        if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n          siblingLI.classList.add(classNames.focused);\n        } else {\n          this.setSelectLI(siblingLI, e);\n        }\n      }\n    } else {\n      li = this.curUL.querySelector('.' + classNames.selected);\n      siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n      this.setSelectLI(siblingLI, e);\n    }\n\n    if (siblingLI) {\n      this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n    } else {\n      this.element.removeAttribute('aria-activedescendant');\n    }\n\n    return siblingLI;\n  };\n\n  ListView.prototype.arrowKeyHandler = function (e, prev) {\n    var _this = this;\n\n    e.preventDefault();\n\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      var siblingLI = this.onArrowKeyDown(e, prev);\n      var elementTop = this.element.getBoundingClientRect().top;\n      var elementHeight = this.element.getBoundingClientRect().height;\n      var firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n      var heightDiff = void 0;\n      var groupItemBounds = void 0;\n\n      if (this.fields.groupBy) {\n        groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n      }\n\n      if (siblingLI) {\n        var siblingTop = siblingLI.getBoundingClientRect().top;\n        var siblingHeight = siblingLI.getBoundingClientRect().height;\n\n        if (!prev) {\n          var height = this.isWindow ? window.innerHeight : elementHeight;\n          heightDiff = this.isWindow ? siblingTop + siblingHeight : siblingTop - elementTop + siblingHeight;\n\n          if (heightDiff > height) {\n            this.isWindow ? window.scroll(0, pageYOffset + (heightDiff - height)) : this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n          }\n        } else {\n          heightDiff = this.isWindow ? siblingTop : siblingTop - elementTop;\n\n          if (heightDiff < 0) {\n            this.isWindow ? window.scroll(0, pageYOffset + heightDiff) : this.element.scrollTop = this.element.scrollTop + heightDiff;\n          }\n        }\n      } else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n        this.onUIScrolled = function () {\n          _this.onArrowKeyDown(e, prev);\n\n          _this.onUIScrolled = undefined;\n        };\n\n        heightDiff = this.virtualizationModule.listItemHeight;\n        this.isWindow ? window.scroll(0, pageYOffset - heightDiff) : this.element.scrollTop = this.element.scrollTop - heightDiff;\n      } else if (prev) {\n        if (this.showHeader && this.headerEle) {\n          var topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n          var headerBounds = this.headerEle.getBoundingClientRect();\n          heightDiff = headerBounds.top < 0 ? headerBounds.height - topHeight : 0;\n          this.isWindow ? window.scroll(0, pageYOffset - heightDiff) : this.element.scrollTop = 0;\n        } else if (this.fields.groupBy) {\n          heightDiff = this.isWindow ? groupItemBounds.top < 0 ? groupItemBounds.top : 0 : elementTop - firstItemBounds.top + groupItemBounds.height;\n          this.isWindow ? window.scroll(0, pageYOffset + heightDiff) : this.element.scrollTop = this.element.scrollTop - heightDiff;\n        }\n      }\n    }\n  };\n\n  ListView.prototype.enterKeyHandler = function (e) {\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n      var li = this.curUL.querySelector('.' + classNames.focused);\n\n      if (hasChild && li) {\n        li.classList.remove(classNames.focused);\n\n        if (this.showCheckBox) {\n          this.removeSelect();\n          this.removeSelect(li);\n          this.removeHover();\n        }\n\n        this.setSelectLI(li, e);\n      }\n    }\n  };\n\n  ListView.prototype.spaceKeyHandler = function (e) {\n    if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n      var li = this.curUL.querySelector('.' + classNames.focused);\n\n      if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n        var args = {\n          curData: undefined,\n          dataSource: undefined,\n          fields: undefined,\n          options: undefined,\n          text: undefined,\n          item: li\n        };\n        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n      } else {\n        this.uncheckItem(li);\n      }\n    }\n  };\n\n  ListView.prototype.keyActionHandler = function (e) {\n    switch (e.keyCode) {\n      case 36:\n        this.homeKeyHandler(e);\n        break;\n\n      case 35:\n        this.homeKeyHandler(e, true);\n        break;\n\n      case 40:\n        this.arrowKeyHandler(e);\n        break;\n\n      case 38:\n        this.arrowKeyHandler(e, true);\n        break;\n\n      case 13:\n        this.enterKeyHandler(e);\n        break;\n\n      case 8:\n        if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n          this.uncheckAllItems();\n        }\n\n        this.back();\n        break;\n\n      case 32:\n        this.spaceKeyHandler(e);\n        break;\n    }\n  };\n\n  ListView.prototype.swipeActionHandler = function (e) {\n    if (e.swipeDirection === 'Right') {\n      if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n        this.uncheckAllItems();\n      }\n\n      this.back();\n    }\n  };\n\n  ListView.prototype.focusout = function () {\n    if (Object.keys(this.dataSource).length && this.curUL) {\n      var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n      var activeElement = this.curUL.querySelector('[aria-selected = true]');\n\n      if (focusedElement) {\n        focusedElement.classList.remove(classNames.focused);\n\n        if (activeElement && !this.showCheckBox) {\n          activeElement.classList.add(classNames.selected);\n        }\n      }\n    }\n  };\n\n  ListView.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n    EventHandler.add(this.element, 'click', this.clickHandler, this);\n\n    if (!this.enableVirtualization) {\n      EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n      EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n    }\n\n    EventHandler.add(this.element, 'focusout', this.focusout, this);\n    this.touchModule = new Touch(this.element, {\n      swipe: this.swipeActionHandler.bind(this)\n    });\n  };\n\n  ListView.prototype.unWireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.clickHandler);\n\n    if (!this.enableVirtualization) {\n      EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n      EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n    }\n\n    EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n    EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n    this.touchModule.destroy();\n  };\n\n  ListView.prototype.removeFocus = function () {\n    var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n\n    for (var _i = 0, focusedLI_1 = focusedLI; _i < focusedLI_1.length; _i++) {\n      var ele = focusedLI_1[_i];\n      ele.classList.remove(classNames.focused);\n    }\n  };\n\n  ListView.prototype.removeHover = function () {\n    var hoverLI = this.element.querySelector('.' + classNames.hover);\n\n    if (hoverLI) {\n      hoverLI.classList.remove(classNames.hover);\n    }\n  };\n\n  ListView.prototype.removeSelect = function (li) {\n    if (isNullOrUndefined(li)) {\n      var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n\n      for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n        var ele = selectedLI_1[_i];\n\n        if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n          continue;\n        } else {\n          ele.setAttribute('aria-selected', 'false');\n          ele.classList.remove(classNames.selected);\n        }\n      }\n    } else {\n      li.classList.remove(classNames.selected);\n      li.setAttribute('aria-selected', 'false');\n    }\n  };\n\n  ListView.prototype.isValidLI = function (li) {\n    return li && li.classList.contains(classNames.listItem) && !li.classList.contains(classNames.groupListItem) && !li.classList.contains(classNames.disable);\n  };\n\n  ListView.prototype.setCheckboxLI = function (li, e) {\n    if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n      if (this.curUL.querySelector('.' + classNames.focused)) {\n        this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n      }\n\n      li.classList.add(classNames.focused);\n      var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n      var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n      this.removeHover();\n\n      if (!checkIcon.classList.contains(classNames.checked)) {\n        checkIcon.classList.add(classNames.checked);\n        li.classList.add(classNames.selected);\n        li.setAttribute('aria-selected', 'true');\n      } else {\n        checkIcon.classList.remove(classNames.checked);\n        li.classList.remove(classNames.selected);\n        li.setAttribute('aria-selected', 'false');\n      }\n\n      checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ? 'true' : 'false');\n      var eventArgs = this.selectEventData(li, e);\n      merge(eventArgs, {\n        isChecked: checkIcon.classList.contains(classNames.checked)\n      });\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.setCheckboxLI(li, e);\n      }\n\n      this.trigger('select', eventArgs);\n      this.setSelectedItemData(li);\n      this.renderSubList(li);\n    }\n  };\n\n  ListView.prototype.selectEventData = function (li, e) {\n    var data = this.getItemData(li);\n    var fieldData = getFieldValues(data, this.listBaseOption.fields);\n    var selectedItem;\n\n    if (!isNullOrUndefined(data) && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n      selectedItem = {\n        item: li,\n        text: li && li.innerText.trim(),\n        data: this.dataSource\n      };\n    } else {\n      selectedItem = {\n        item: li,\n        text: fieldData && fieldData[this.listBaseOption.fields.text],\n        data: data\n      };\n    }\n\n    var eventArgs = {};\n    merge(eventArgs, selectedItem);\n\n    if (e) {\n      merge(eventArgs, {\n        isInteracted: true,\n        event: e,\n        index: Array.prototype.indexOf.call(this.curUL.children, li)\n      });\n    }\n\n    return eventArgs;\n  };\n\n  ListView.prototype.setSelectedItemData = function (li) {\n    var data = this.getItemData(li);\n    var fieldData = getFieldValues(data, this.listBaseOption.fields);\n\n    if (!isNullOrUndefined(data) && (typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number')) {\n      this.selectedItems = {\n        item: li,\n        text: li && li.innerText.trim(),\n        data: this.dataSource\n      };\n    } else {\n      this.selectedItems = {\n        item: li,\n        text: fieldData && fieldData[this.listBaseOption.fields.text],\n        data: data\n      };\n    }\n  };\n\n  ListView.prototype.setSelectLI = function (li, e) {\n    if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n      if (!this.showCheckBox) {\n        this.removeSelect();\n      }\n\n      li.classList.add(classNames.selected);\n      li.setAttribute('aria-selected', 'true');\n      this.removeHover();\n      this.setSelectedItemData(li);\n\n      if (this.enableVirtualization) {\n        this.virtualizationModule.setSelectLI(li, e);\n      }\n\n      var eventArgs = this.selectEventData(li, e);\n      this.trigger('select', eventArgs);\n      this.selectedLI = li;\n      this.renderSubList(li);\n    }\n  };\n\n  ListView.prototype.setHoverLI = function (li) {\n    if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n      var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n\n      if (lastLi && lastLi.length) {\n        removeClass(lastLi, classNames.hover);\n      }\n\n      if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n        li.classList.add(classNames.hover);\n      }\n    }\n  }; //Data Source Related Functions\n\n\n  ListView.prototype.getSubDS = function () {\n    var levelKeys = this.curDSLevel;\n\n    if (levelKeys.length) {\n      var ds = this.localData;\n\n      for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {\n        var key = levelKeys_1[_i];\n        var field = {};\n        field[this.fields.id] = key;\n        this.curDSJSON = this.findItemFromDS(ds, field);\n        var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n      }\n\n      return ds;\n    }\n\n    return this.localData;\n  };\n\n  ListView.prototype.getItemData = function (li) {\n    var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n    var fields = this.getElementUID(li);\n    var curDS;\n\n    if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n      curDS = this.curViewDS;\n    } else {\n      curDS = dataSource;\n    }\n\n    return this.findItemFromDS(curDS, fields);\n  };\n\n  ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {\n    var _this = this;\n\n    var resultJSON;\n\n    if (dataSource && dataSource.length && fields) {\n      dataSource.some(function (data) {\n        var fieldData = getFieldValues(data, _this.listBaseOption.fields); //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n\n        if ((fields[_this.fields.id] || fields[_this.fields.text]) && (!fields[_this.fields.id] || (!isNullOrUndefined(fieldData[_this.fields.id]) && fieldData[_this.fields.id].toString()) === fields[_this.fields.id].toString()) && (!fields[_this.fields.text] || fieldData[_this.fields.text] === fields[_this.fields.text])) {\n          resultJSON = parent ? dataSource : data;\n        } else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n          resultJSON = parent ? dataSource : data;\n        } else if (!isNullOrUndefined(fields[_this.fields.id]) && isNullOrUndefined(fieldData[_this.fields.id])) {\n          var li = _this.element.querySelector('[data-uid=\"' + fields[_this.fields.id] + '\"]');\n\n          if (li && li.innerText.trim() === fieldData[_this.fields.text]) {\n            resultJSON = data;\n          }\n        } else if (fieldData.hasOwnProperty(_this.fields.child) && fieldData[_this.fields.child].length) {\n          resultJSON = _this.findItemFromDS(fieldData[_this.fields.child], fields, parent);\n        }\n\n        return !!resultJSON;\n      });\n    } else {\n      resultJSON = dataSource;\n    }\n\n    return resultJSON;\n  };\n\n  ListView.prototype.getQuery = function () {\n    var columns = [];\n    var query = this.query ? this.query : new Query();\n\n    if (!this.query) {\n      for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {\n        var column = _a[_i];\n\n        if (column !== 'tableName' && !!this.fields[column] && this.fields[column] !== ListBase.defaultMappedFields[column] && columns.indexOf(this.fields[column]) === -1) {\n          columns.push(this.fields[column]);\n        }\n      }\n\n      query.select(columns);\n\n      if (this.fields.properties.hasOwnProperty('tableName')) {\n        query.from(this.fields.tableName);\n      }\n    }\n\n    return query;\n  };\n\n  ListView.prototype.setViewDataSource = function (dataSource) {\n    if (dataSource === void 0) {\n      dataSource = this.localData;\n    }\n\n    if (dataSource && this.fields.groupBy) {\n      if (this.sortOrder !== 'None') {\n        this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy)), this.listBaseOption.fields, this.sortOrder);\n      } else {\n        this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n      }\n    } else if (dataSource && this.sortOrder !== 'None') {\n      this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy));\n    } else {\n      this.curViewDS = dataSource;\n    }\n  };\n\n  ListView.prototype.isInAnimation = function () {\n    return this.curUL.classList.contains('.e-animate');\n  };\n\n  ListView.prototype.setLocalData = function () {\n    var _this = this;\n\n    this.trigger('actionBegin');\n\n    if (this.dataSource instanceof DataManager) {\n      this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n        if (_this.isDestroyed) {\n          return;\n        }\n\n        _this.localData = e.result;\n\n        _this.removeElement(_this.contentContainer);\n\n        _this.renderList();\n\n        _this.trigger('actionComplete', e);\n      }).catch(function (e) {\n        if (_this.isDestroyed) {\n          return;\n        }\n\n        _this.trigger('actionFailure', e);\n      });\n    } else if (!this.dataSource || !this.dataSource.length) {\n      var ul = this.element.querySelector('ul');\n\n      if (ul) {\n        remove(ul);\n        this.setProperties({\n          dataSource: ListBase.createJsonFromElement(ul)\n        }, true);\n        this.localData = this.dataSource;\n        this.renderList();\n        this.trigger('actionComplete', {\n          data: this.localData\n        });\n      }\n    } else {\n      this.localData = this.dataSource;\n      this.renderList();\n      this.trigger('actionComplete', {\n        data: this.localData\n      });\n    }\n  };\n\n  ListView.prototype.reRender = function () {\n    this.resetBlazorTemplates();\n    this.removeElement(this.headerEle);\n    this.removeElement(this.ulElement);\n    this.removeElement(this.contentContainer);\n\n    if (Object.keys(window).indexOf('ejsInterop') === -1) {\n      this.element.innerHTML = '';\n    }\n\n    this.headerEle = this.ulElement = this.liCollection = undefined;\n    this.setLocalData();\n    this.header();\n  };\n\n  ListView.prototype.resetCurrentList = function () {\n    this.resetBlazorTemplates();\n    this.setViewDataSource(this.curViewDS);\n    this.contentContainer.innerHTML = '';\n    this.createList();\n    this.renderIntoDom(this.curUL);\n  };\n\n  ListView.prototype.setAttributes = function (liElements) {\n    var _this = this;\n\n    liElements.forEach(function (element) {\n      if (element.classList.contains('e-list-item')) {\n        element.setAttribute('id', _this.element.id + '_' + element.getAttribute('data-uid'));\n        element.setAttribute('aria-selected', 'false');\n        element.setAttribute('tabindex', '-1');\n      }\n    });\n  };\n\n  ListView.prototype.createList = function () {\n    this.currentLiElements = [];\n    this.isNestedList = false;\n    this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption);\n    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n    this.setAttributes(this.liCollection);\n    this.updateBlazorTemplates(true);\n  };\n\n  ListView.prototype.resetBlazorTemplates = function () {\n    // tslint:disable-next-line:no-any\n    var templateCollection = blazorTemplates;\n\n    if (this.template) {\n      templateCollection[this.LISTVIEW_TEMPLATE_ID] = [];\n      resetBlazorTemplate(this.LISTVIEW_TEMPLATE_ID, LISTVIEW_TEMPLATE_PROPERTY);\n    }\n\n    if (this.groupTemplate) {\n      templateCollection[this.LISTVIEW_GROUPTEMPLATE_ID] = [];\n      resetBlazorTemplate(this.LISTVIEW_GROUPTEMPLATE_ID, LISTVIEW_GROUPTEMPLATE_PROPERTY);\n    }\n\n    if (this.headerTemplate) {\n      resetBlazorTemplate(this.LISTVIEW_HEADERTEMPLATE_ID, LISTVIEW_HEADERTEMPLATE_PROPERTY);\n    }\n  };\n\n  ListView.prototype.updateBlazorTemplates = function (template, headerTemplate, resetExistingElements) {\n    if (template === void 0) {\n      template = false;\n    }\n\n    if (headerTemplate === void 0) {\n      headerTemplate = false;\n    }\n\n    if (resetExistingElements === void 0) {\n      resetExistingElements = false;\n    }\n\n    if (this.template && template && !this.enableVirtualization) {\n      updateBlazorTemplate(this.LISTVIEW_TEMPLATE_ID, LISTVIEW_TEMPLATE_PROPERTY, this, resetExistingElements);\n    }\n\n    if (this.groupTemplate && template && !this.enableVirtualization) {\n      updateBlazorTemplate(this.LISTVIEW_GROUPTEMPLATE_ID, LISTVIEW_GROUPTEMPLATE_PROPERTY, this, resetExistingElements);\n    }\n\n    if (this.headerTemplate && headerTemplate) {\n      updateBlazorTemplate(this.LISTVIEW_HEADERTEMPLATE_ID, LISTVIEW_HEADERTEMPLATE_PROPERTY, this, resetExistingElements);\n    }\n  };\n\n  ListView.prototype.renderSubList = function (li) {\n    var uID = li.getAttribute('data-uid');\n\n    if (li.classList.contains(classNames.hasChild) && uID) {\n      var ul = closest(li.parentNode, '.' + classNames.parentItem);\n      var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n      this.curDSLevel.push(uID);\n      this.setViewDataSource(this.getSubDS());\n\n      if (!ele) {\n        var data = this.curViewDS;\n        ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length);\n        var lists = ele.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(lists);\n        ele.setAttribute('pID', uID);\n        ele.style.display = 'none';\n        this.renderIntoDom(ele);\n        this.updateBlazorTemplates(true);\n      }\n\n      this.switchView(ul, ele);\n      this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n      if (this.selectedItems) {\n        var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n        this.header(fieldData[this.listBaseOption.fields.text], true);\n      }\n\n      this.selectedLI = undefined;\n    }\n  };\n\n  ListView.prototype.renderIntoDom = function (ele) {\n    this.contentContainer.appendChild(ele);\n  };\n\n  ListView.prototype.renderList = function (data) {\n    this.setViewDataSource(data);\n\n    if (this.enableVirtualization) {\n      if (Object.keys(this.dataSource).length) {\n        if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n          this.listBaseOption.template = null;\n          this.listBaseOption.groupTemplate = null;\n          this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n        }\n\n        this.virtualizationModule.uiVirtualization();\n      }\n    } else {\n      this.createList();\n      this.contentContainer = this.createElement('div', {\n        className: classNames.content\n      });\n      this.element.appendChild(this.contentContainer);\n      this.renderIntoDom(this.ulElement);\n    }\n  };\n\n  ListView.prototype.getElementUID = function (obj) {\n    var fields = {};\n\n    if (obj instanceof Element) {\n      fields[this.fields.id] = obj.getAttribute('data-uid');\n    } else {\n      fields = obj;\n    }\n\n    return fields;\n  };\n  /**\n   * It is used to Initialize the control rendering.\n   */\n\n\n  ListView.prototype.render = function () {\n    this.element.classList.add(classNames.root);\n    attributes(this.element, {\n      role: 'listbox',\n      tabindex: '0'\n    });\n    this.setCSSClass();\n    this.setEnableRTL();\n    this.setEnable();\n    this.setSize();\n    this.wireEvents();\n    this.header();\n    this.setLocalData();\n    this.setHTMLAttribute();\n    this.rippleFn = rippleEffect(this.element, {\n      selector: '.' + classNames.listItem\n    });\n    this.renderComplete();\n  };\n  /**\n   * It is used to destroy the ListView component.\n   */\n\n\n  ListView.prototype.destroy = function () {\n    this.resetBlazorTemplates();\n    this.unWireEvents();\n    var classAr = [classNames.root, classNames.disable, 'e-rtl', 'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter(function (css) {\n      return css;\n    }));\n    removeClass([this.element], classAr);\n    this.element.removeAttribute('role');\n    this.element.removeAttribute('tabindex');\n    this.element.innerHTML = '';\n    this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * It helps to switch back from navigated sub list.\n   */\n\n\n  ListView.prototype.back = function () {\n    var pID = this.curDSLevel[this.curDSLevel.length - 1];\n\n    if (pID === undefined || this.isInAnimation()) {\n      return;\n    }\n\n    this.curDSLevel.pop();\n    this.setViewDataSource(this.getSubDS());\n    var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n    var fromUL = this.curUL;\n\n    if (!toUL) {\n      this.createList();\n      this.renderIntoDom(this.ulElement);\n      toUL = this.curUL;\n    } else {\n      toUL = toUL.parentElement;\n    }\n\n    var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n    var text = fieldData[this.fields.text];\n    this.switchView(fromUL, toUL, true);\n    this.removeFocus();\n    var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n    li.classList.add(classNames.focused);\n\n    if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n      li.setAttribute('aria-selected', 'true');\n    } else {\n      li.classList.remove(classNames.selected);\n      li.setAttribute('aria-selected', 'false');\n    }\n\n    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n\n    if (this.enableHtmlSanitizer) {\n      this.setProperties({\n        headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle)\n      }, true);\n    }\n\n    this.header(this.curDSLevel.length ? text : this.headerTitle, this.curDSLevel.length ? true : false);\n  };\n  /**\n   * It is used to select the list item from the ListView.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.selectItem = function (obj) {\n    if (this.enableVirtualization) {\n      this.virtualizationModule.selectItem(obj);\n    } else if (this.showCheckBox) {\n      this.setCheckboxLI(this.getLiFromObjOrElement(obj));\n    } else {\n      isNullOrUndefined(obj) ? this.removeSelect() : this.setSelectLI(this.getLiFromObjOrElement(obj));\n    }\n  };\n\n  ListView.prototype.getLiFromObjOrElement = function (obj) {\n    var li;\n    var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (!isNullOrUndefined(obj)) {\n      if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n        if (obj instanceof Element) {\n          var uid = obj.getAttribute('data-uid').toString();\n\n          for (var i = 0; i < this.liCollection.length; i++) {\n            if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n              li = this.liCollection[i];\n              break;\n            }\n          }\n        } else {\n          Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), function (item) {\n            if (item.innerText.trim() === obj.toString()) {\n              li = item;\n              return true;\n            } else {\n              return false;\n            }\n          });\n        }\n      } else {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n        if (resultJSON) {\n          li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n          if (!this.enableVirtualization && isNullOrUndefined(li)) {\n            var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n\n            for (var i = 0; i < curLi.length; i++) {\n              if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                li = curLi[i];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return li;\n  };\n  /**\n   * It is used to select multiple list item from the ListView.\n   * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.selectMultipleItems = function (obj) {\n    if (!isNullOrUndefined(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        if (!isNullOrUndefined(obj[i])) {\n          this.selectItem(obj[i]);\n        }\n      }\n    }\n  };\n\n  ListView.prototype.getParentId = function () {\n    var parentId = [];\n\n    if (this.isNestedList) {\n      for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n        parentId.push(this.curDSLevel[i]);\n      }\n    }\n\n    return parentId;\n  };\n  /**\n   * It is used to get the currently [here](./api-selectedItem)\n   *  item details from the list items.\n   * @blazorType ListSelectedItem<TValue>\n   */\n\n\n  ListView.prototype.getSelectedItems = function () {\n    // tslint:disable-next-line:no-any\n    var finalValue;\n    var isCompleted = false;\n    this.selectedId = [];\n    var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (this.enableVirtualization && !isCompleted) {\n      finalValue = this.virtualizationModule.getSelectedItems();\n      isCompleted = true;\n    } else if (this.showCheckBox && !isCompleted) {\n      // tslint:disable-next-line:no-any\n      var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n      var liTextCollection = [];\n      var liDataCollection = [];\n      this.selectedId = [];\n      var dataParent = [];\n\n      for (var i = 0; i < liCollection.length; i++) {\n        if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n          liTextCollection.push(liCollection[i].innerText.trim());\n        } else {\n          var tempData = this.getItemData(liCollection[i]);\n          var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n\n          if (this.isNestedList) {\n            dataParent.push({\n              data: tempData,\n              parentId: this.getParentId()\n            });\n          } else {\n            liDataCollection.push(tempData);\n          }\n\n          if (fieldData) {\n            liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n            this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n          } else {\n            liTextCollection.push(undefined);\n            this.selectedId.push(undefined);\n          }\n        }\n      }\n\n      if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: dataSource,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      }\n\n      if (this.isNestedList && !isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: dataParent,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      } else if (!isCompleted) {\n        finalValue = {\n          item: liCollection,\n          data: liDataCollection,\n          text: liTextCollection\n        };\n        isCompleted = true;\n      }\n    } else if (!isCompleted) {\n      var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n      var fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n\n      if ((typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') && !isCompleted) {\n        finalValue = !isNullOrUndefined(liElement) ? {\n          item: liElement,\n          data: dataSource,\n          text: liElement.innerText.trim()\n        } : undefined;\n        isCompleted = true;\n      } else if (!isCompleted) {\n        if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n          finalValue = undefined;\n          isCompleted = true;\n        } else {\n          this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n          finalValue = {\n            text: fieldData[this.listBaseOption.fields.text],\n            item: liElement,\n            data: this.getItemData(liElement)\n          };\n          isCompleted = true;\n        }\n      }\n    }\n\n    if (isBlazor()) {\n      // tslint:disable-next-line:no-any\n      return this.blazorGetSelectedItems(finalValue);\n    } else {\n      return finalValue;\n    }\n  }; // tslint:disable-next-line:no-any\n\n\n  ListView.prototype.blazorGetSelectedItems = function (finalGetSelectedItem) {\n    var blazorSelectedItem = {\n      data: [],\n      index: [],\n      parentId: [],\n      text: []\n    };\n\n    if (!isNullOrUndefined(finalGetSelectedItem)) {\n      if (!isNullOrUndefined(finalGetSelectedItem.data)) {\n        if (this.showCheckBox && this.isNestedList) {\n          finalGetSelectedItem.data.forEach(function (currentData) {\n            blazorSelectedItem.data.push(currentData.data);\n          });\n\n          if (!isNullOrUndefined(finalGetSelectedItem.data[0]) && !isNullOrUndefined(finalGetSelectedItem.data[0].parentId)) {\n            blazorSelectedItem.parentId = finalGetSelectedItem.data[0].parentId;\n          }\n        } else {\n          blazorSelectedItem.data = this.convertItemsToArray(finalGetSelectedItem.data);\n        }\n      }\n\n      if (!isNullOrUndefined(finalGetSelectedItem.text)) {\n        blazorSelectedItem.text = this.convertItemsToArray(finalGetSelectedItem.text);\n      }\n\n      if (!isNullOrUndefined(finalGetSelectedItem.index)) {\n        blazorSelectedItem.index = this.convertItemsToArray(finalGetSelectedItem.index);\n      }\n    }\n\n    return blazorSelectedItem;\n  }; // tslint:disable-next-line:no-any\n\n\n  ListView.prototype.convertItemsToArray = function (items) {\n    return Array.isArray(items) ? items.slice() : [items];\n  };\n  /**\n   * It is used to find out an item details from the current list.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   * @blazorType TValue\n   */\n\n\n  ListView.prototype.findItem = function (obj) {\n    return this.getItemData(obj);\n  };\n  /**\n   * A function that used to enable the disabled list items based on passed element.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.enableItem = function (obj) {\n    this.setItemState(obj, true);\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.enableItem(obj);\n    }\n  };\n  /**\n   * It is used to disable the list items based on passed element.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.disableItem = function (obj) {\n    this.setItemState(obj, false);\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.disableItem(obj);\n    }\n  }; //A function that used to set state of the list item like enable, disable.\n\n\n  ListView.prototype.setItemState = function (obj, isEnable) {\n    var resultJSON = this.getItemData(obj);\n    var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n    if (resultJSON) {\n      var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n      if (isEnable) {\n        if (li) {\n          li.classList.remove(classNames.disable);\n        }\n\n        delete resultJSON[this.fields.enabled];\n      } else if (!isEnable) {\n        if (li) {\n          li.classList.add(classNames.disable);\n        }\n\n        resultJSON[this.fields.enabled] = false;\n      }\n    }\n  };\n  /**\n   * It is used to show an list item from the ListView.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.showItem = function (obj) {\n    this.showHideItem(obj, false, '');\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.showItem(obj);\n    }\n  };\n  /**\n   * It is used to hide an item from the ListView.\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.hideItem = function (obj) {\n    this.showHideItem(obj, true, 'none');\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.hideItem(obj);\n    }\n  };\n\n  ListView.prototype.showHideItem = function (obj, isHide, display) {\n    var resultJSON = this.getItemData(obj);\n    var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n\n    if (resultJSON) {\n      var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n\n      if (li) {\n        li.style.display = display;\n      }\n\n      if (isHide) {\n        resultJSON[this.fields.isVisible] = false;\n      } else {\n        delete resultJSON[this.fields.isVisible];\n      }\n    }\n  };\n  /**\n   * It adds new item(s) to current ListView.\n   * To add a new item(s) in the listview, we need to pass `data` as array of items that needs\n   * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n   * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n   * @param  {{[key:string]:Object}[]} data - JSON Array Data that need to add.\n   * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n   * @blazorArgsType data|List<TValue>,fields|TValue\n   */\n\n\n  ListView.prototype.addItem = function (data, fields) {\n    if (fields === void 0) {\n      fields = undefined;\n    }\n\n    var dataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n    this.addItemInternally(data, fields, dataSource);\n  };\n\n  ListView.prototype.addItemInternally = function (data, fields, dataSource) {\n    var _this = this;\n\n    if (data instanceof Array) {\n      if (this.enableVirtualization) {\n        this.virtualizationModule.addItem(data, fields, dataSource);\n      } else {\n        var ds = this.findItemFromDS(dataSource, fields);\n        var child = void 0;\n\n        if (ds) {\n          var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n          child = fieldData[this.fields.child];\n\n          if (!child) {\n            child = [];\n          }\n\n          child = child.concat(data);\n        } // check for whether target is nested level or top level in list\n\n\n        if (ds instanceof Array) {\n          data.forEach(function (currentItem) {\n            dataSource.push(currentItem);\n\n            _this.setViewDataSource(dataSource); // since it is top level target, get the content container's first child\n            // as it is always the top level UL\n\n\n            var targetUL = _this.contentContainer ? _this.contentContainer.children[0] : null; // check for whether the list was previously empty or not, if it is\n            // proceed to call initial render\n\n            if (_this.contentContainer && targetUL) {\n              _this.addItemIntoDom(currentItem, targetUL, _this.curViewDS);\n            } else {\n              _this.reRender();\n            }\n          });\n\n          if (this.curUL) {\n            this.updateBlazorTemplates(true);\n          }\n\n          this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        } else {\n          // proceed as target item is in nested level, only if it is a valid target ds\n          if (ds) {\n            ds[this.fields.child] = child;\n            this.addItemInNestedList(ds, data);\n          }\n        }\n      }\n    }\n  };\n\n  ListView.prototype.addItemInNestedList = function (targetItemData, itemQueue) {\n    var _this = this;\n\n    var targetItemId = targetItemData[this.fields.id];\n    var targetChildDS = targetItemData[this.fields.child];\n    var isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n    var targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n    var targetUL = isAlreadyRenderedUL ? isAlreadyRenderedUL : targetLi ? closest(targetLi, 'ul') : null;\n    var targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n    var isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n    var isRefreshTemplateNeeded = false; // if li element is already rendered, that element needs to be refreshed so that\n    // it becomes child viewable due to new child items are added now\n\n    if (isTargetEmptyChild) {\n      var targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption);\n      this.setAttributes(targetRefreshedElement);\n      targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n      detach(targetLi);\n      isRefreshTemplateNeeded = true;\n    } // if it is already rendered element, we need to create and append new elements\n\n\n    if (isAlreadyRenderedUL && itemQueue) {\n      itemQueue.forEach(function (currentItem) {\n        targetDS.push(currentItem);\n\n        _this.addItemIntoDom(currentItem, targetUL, targetDS);\n      });\n      isRefreshTemplateNeeded = true;\n    }\n\n    if (isRefreshTemplateNeeded) {\n      this.updateBlazorTemplates(true);\n    }\n  };\n\n  ListView.prototype.addItemIntoDom = function (currentItem, targetUL, curViewDS) {\n    var index = curViewDS.indexOf(currentItem);\n    this.addListItem(currentItem, index, targetUL, curViewDS);\n    var curItemDS = curViewDS[index - 1];\n\n    if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n      this.addListItem(curItemDS, index - 1, targetUL, curViewDS);\n    }\n  };\n\n  ListView.prototype.addListItem = function (dataSource, index, ulElement, curViewDS) {\n    var target = this.getLiFromObjOrElement(curViewDS[index + 1]) || this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n    var li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption);\n    this.setAttributes(li);\n    ulElement.insertBefore(li[0], target);\n  };\n  /**\n   * A function that removes the item from data source based on passed element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n   * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.removeItem = function (obj) {\n    var listDataSource = this.dataSource instanceof DataManager ? this.localData : this.dataSource;\n\n    if (this.enableVirtualization) {\n      this.virtualizationModule.removeItem(obj);\n    } else {\n      this.removeItemFromList(obj, listDataSource);\n      this.updateBlazorTemplates(true);\n    }\n  };\n\n  ListView.prototype.removeItemFromList = function (obj, listDataSource) {\n    var _this = this;\n\n    var curViewDS = this.curViewDS;\n    var fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n    var dataSource;\n    dataSource = this.findItemFromDS(listDataSource, fields, true);\n\n    if (dataSource) {\n      var data_1;\n      data_1 = this.findItemFromDS(dataSource, fields);\n      var index = curViewDS.indexOf(data_1);\n      var li = this.getLiFromObjOrElement(obj);\n      var groupLi = void 0;\n      this.validateNestedView(li);\n\n      if (this.fields.groupBy && this.curViewDS[index - 1] && curViewDS[index - 1].isHeader && curViewDS[index - 1].items.length === 1) {\n        if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) && (isNullOrUndefined(li.nextElementSibling) || li.nextElementSibling && li.nextElementSibling.classList.contains(classNames.groupListItem))) {\n          groupLi = li.previousElementSibling;\n        }\n      }\n\n      if (li) {\n        detach(li);\n      }\n\n      if (groupLi) {\n        detach(groupLi);\n      } // tslint:disable-next-line:no-any\n\n\n      var foundData = dataSource.length - 1 <= 0 ? this.findParent(this.localData, this.fields.id, function (value) {\n        return value === data_1[_this.fields.id];\n      }, null) : null;\n      var dsIndex = dataSource.indexOf(data_1);\n      dataSource.splice(dsIndex, 1);\n      this.setViewDataSource(listDataSource);\n\n      if (foundData && foundData.parent && Array.isArray(foundData.parent[this.fields.child]) && foundData.parent[this.fields.child].length <= 0) {\n        var parentLi = this.getLiFromObjOrElement(foundData.parent);\n\n        if (parentLi) {\n          var li_1 = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption);\n          this.setAttributes(li_1);\n          parentLi.parentElement.insertBefore(li_1[0], parentLi);\n          parentLi.parentElement.removeChild(parentLi);\n        }\n      }\n\n      if (dataSource.length <= 0) {\n        this.back();\n      }\n\n      this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n    }\n  }; // validate before removing an element whether the current view is inside target element's child view\n\n\n  ListView.prototype.validateNestedView = function (li) {\n    var liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n\n    if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n      while (this.curDSLevel.some(function (id) {\n        return id.toString().toLowerCase() === liID;\n      })) {\n        this.back();\n      }\n    }\n  };\n  /**\n   * A function that removes multiple item from list view based on given input.\n   * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n   */\n\n\n  ListView.prototype.removeMultipleItems = function (obj) {\n    if (obj.length) {\n      for (var i = 0; i < obj.length; i++) {\n        this.removeItem(obj[i]);\n      }\n\n      this.updateBlazorTemplates(true);\n    }\n  }; // tslint:disable-next-line:no-any\n\n\n  ListView.prototype.findParent = function (dataSource, id, callback, parent) {\n    if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n      return extend({}, dataSource);\n    }\n\n    for (var i = 0; i < Object.keys(dataSource).length; i++) {\n      if (dataSource[Object.keys(dataSource)[i]] && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n        // tslint:disable-next-line:no-any\n        var result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n\n        if (result != null) {\n          if (!result.parent) {\n            result.parent = parent;\n          }\n\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }; // Module Required function\n\n\n  ListView.prototype.getModuleName = function () {\n    return 'listview';\n  };\n\n  ListView.prototype.requiredModules = function () {\n    var modules = [];\n\n    if (this.enableVirtualization) {\n      modules.push({\n        args: [this],\n        member: 'virtualization'\n      });\n    }\n\n    return modules;\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   */\n\n\n  ListView.prototype.getPersistData = function () {\n    return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes', 'enable', 'fields', 'animation', 'headerTitle', 'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n  };\n\n  __decorate([Property('')], ListView.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(false)], ListView.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property({})], ListView.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property(true)], ListView.prototype, \"enable\", void 0);\n\n  __decorate([Property([])], ListView.prototype, \"dataSource\", void 0);\n\n  __decorate([Property()], ListView.prototype, \"query\", void 0);\n\n  __decorate([Complex(ListBase.defaultMappedFields, FieldSettings)], ListView.prototype, \"fields\", void 0);\n\n  __decorate([Property({\n    effect: 'SlideLeft',\n    duration: 400,\n    easing: 'ease'\n  })], ListView.prototype, \"animation\", void 0);\n\n  __decorate([Property('None')], ListView.prototype, \"sortOrder\", void 0);\n\n  __decorate([Property(false)], ListView.prototype, \"showIcon\", void 0);\n\n  __decorate([Property(false)], ListView.prototype, \"showCheckBox\", void 0);\n\n  __decorate([Property('Left')], ListView.prototype, \"checkBoxPosition\", void 0);\n\n  __decorate([Property('')], ListView.prototype, \"headerTitle\", void 0);\n\n  __decorate([Property(false)], ListView.prototype, \"showHeader\", void 0);\n\n  __decorate([Property(false)], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property('')], ListView.prototype, \"height\", void 0);\n\n  __decorate([Property('')], ListView.prototype, \"width\", void 0);\n\n  __decorate([Property(null)], ListView.prototype, \"template\", void 0);\n\n  __decorate([Property(null)], ListView.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Property(null)], ListView.prototype, \"groupTemplate\", void 0);\n\n  __decorate([Event()], ListView.prototype, \"select\", void 0);\n\n  __decorate([Event()], ListView.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], ListView.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], ListView.prototype, \"actionFailure\", void 0);\n\n  ListView = __decorate([NotifyPropertyChanges], ListView);\n  return ListView;\n}(Component);\n\nexport { ListView };","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/node_modules/@syncfusion/ej2-lists/src/list-view/list-view.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","merge","formatUnit","isNullOrUndefined","append","detach","isBlazor","extend","attributes","addClass","removeClass","prepend","closest","remove","Component","EventHandler","Property","Complex","Event","NotifyPropertyChanges","ChildProperty","compile","SanitizeHtmlHelper","Animation","rippleEffect","Touch","DataManager","Query","createCheckBox","ListBase","getFieldValues","updateBlazorTemplate","resetBlazorTemplate","blazorTemplates","effectsConfig","effectsRTLConfig","classNames","root","hover","selected","focused","parentItem","listItem","listIcon","textContent","listItemText","groupListItem","hasChild","view","header","headerText","headerTemplateText","text","disable","content","icon","backIcon","checkboxWrapper","checkbox","checked","checklist","checkboxIcon","checkboxRight","checkboxLeft","listviewCheckbox","itemCheckList","LISTVIEW_TEMPLATE_PROPERTY","LISTVIEW_GROUPTEMPLATE_PROPERTY","LISTVIEW_HEADERTEMPLATE_PROPERTY","FieldSettings","_super","apply","ListView","options","element","call","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","setHTMLAttribute","setCSSClass","cssClass","setEnable","setSize","setEnableRTL","listBaseOption","fields","properties","enableVirtualization","virtualizationModule","reRenderUiVirtualization","reRender","curDSLevel","headerTitle","contentContainer","refresh","setCheckbox","showIcon","curViewDS","getSubDS","resetCurrentList","htmlAttributes","oldCSSClass","split","filter","css","style","height","width","isWindow","clientHeight","enableElement","enable","enableRtl","classList","add","isEnabled","showBack","headerEle","undefined","showHeader","enableHtmlSanitizer","setProperties","sanitize","createElement","className","innerHeaderEle","innerHTML","textEle","outerHTML","hedBackButton","attrs","appendChild","headerTemplate","compiledString","headerTemplateEle","LISTVIEW_HEADERTEMPLATE_ID","updateBlazorTemplates","display","querySelector","parentElement","switchView","fromView","toView","reverse","_this","fPos_1","position","overflow_1","overflow","anim","duration","animation","effect","slideLeft","aniObj","animate","name","timingFunction","easing","end","model","trigger","curUL","preRender","template","groupTemplate","expandCollapse","listClass","ariaAttributes","itemRole","listRole","itemText","groupItemRole","wrapperRole","sortOrder","itemCreated","renderCheckbox","bind","templateID","id","groupTemplateID","removeBlazorID","initialization","animateOptions","currentLiElements","isNestedList","selectedData","selectedId","LISTVIEW_TEMPLATE_ID","LISTVIEW_GROUPTEMPLATE_ID","removeElement","ulElement","liCollection","args","item","contains","showCheckBox","isValidLI","checkboxElement","fieldData","setAttribute","frameElement_1","firstElementChild","dataSource","curData","isChecked","checkInternally","indexOf","checkBoxPosition","insertBefore","childNodes","push","checkItem","toggleCheckBase","liElement","HTMLLIElement","getLiFromObjOrElement","setSelectedItemData","uncheckItem","checkAllItems","toggleAllCheckBase","uncheckAllItems","checkIcon","checkedItem","slice","querySelectorAll","args_1","forEach","getItemData","selectedItems","refreshItemHeight","clickHandler","e","back","li","parentNode","removeFocus","setCheckboxLI","eventArgs","selectEventData","removeHover","removeSelect","setSelectLI","removeChild","hoverHandler","curLi","setHoverLI","leaveHandler","homeKeyHandler","focusedElement","index","toString","removeAttribute","onArrowKeyDown","prev","siblingLI","getSiblingLI","arrowKeyHandler","preventDefault","elementTop","getBoundingClientRect","top","elementHeight","firstItemBounds","heightDiff","groupItemBounds","groupBy","siblingTop","siblingHeight","window","innerHeight","scroll","pageYOffset","scrollTop","uiFirstIndex","onUIScrolled","listItemHeight","topHeight","headerBounds","enterKeyHandler","spaceKeyHandler","keyActionHandler","keyCode","swipeActionHandler","swipeDirection","focusout","activeElement","wireEvents","touchModule","swipe","unWireEvents","destroy","focusedLI","focusedLI_1","ele","hoverLI","selectedLI","selectedLI_1","renderSubList","data","selectedItem","innerText","trim","isInteracted","event","children","lastLi","levelKeys","ds","localData","levelKeys_1","field","curDSJSON","findItemFromDS","child","getElementUID","curDS","parent","resultJSON","some","getQuery","columns","query","column","defaultMappedFields","select","from","tableName","setViewDataSource","groupDataSource","getDataSource","addSorting","sortBy","isInAnimation","setLocalData","executeQuery","then","isDestroyed","result","renderList","catch","ul","createJsonFromElement","resetBlazorTemplates","createList","renderIntoDom","setAttributes","liElements","getAttribute","templateCollection","resetExistingElements","uID","createListFromJson","lists","isNgTemplate","createUIItem","uiVirtualization","obj","Element","render","role","tabindex","rippleFn","selector","renderComplete","classAr","concat","pID","pop","toUL","fromUL","selectItem","uid","selectMultipleItems","getParentId","parentId","getSelectedItems","finalValue","isCompleted","getElementsByClassName","liTextCollection","liDataCollection","dataParent","tempData","blazorGetSelectedItems","finalGetSelectedItem","blazorSelectedItem","currentData","convertItemsToArray","items","isArray","findItem","enableItem","setItemState","disableItem","isEnable","enabled","showItem","showHideItem","hideItem","isHide","isVisible","addItem","addItemInternally","currentItem","targetUL","addItemIntoDom","addItemInNestedList","targetItemData","itemQueue","targetItemId","targetChildDS","isAlreadyRenderedUL","targetLi","targetDS","isTargetEmptyChild","isRefreshTemplateNeeded","targetRefreshedElement","createListItemFromJson","addListItem","curItemDS","isHeader","removeItem","listDataSource","removeItemFromList","data_1","groupLi","validateNestedView","previousElementSibling","nextElementSibling","foundData","findParent","value","dsIndex","splice","parentLi","li_1","liID","toLowerCase","removeMultipleItems","callback","getModuleName","requiredModules","modules","member","getPersistData","addOnPersist"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, formatUnit, isNullOrUndefined, append, detach, isBlazor, extend } from '@syncfusion/ej2-base';\nimport { attributes, addClass, removeClass, prepend, closest, remove } from '@syncfusion/ej2-base';\nimport { Component, EventHandler, Property, Complex, Event } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, ChildProperty } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { Animation, rippleEffect, Touch } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { ListBase, getFieldValues } from '../common/list-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, blazorTemplates } from '@syncfusion/ej2-base';\n// Effect Configuration Effect[] =  [fromViewBackward,fromViewForward,toViewBackward,toviewForward];\nvar effectsConfig = {\n    'None': [],\n    'SlideLeft': ['SlideRightOut', 'SlideLeftOut', 'SlideLeftIn', 'SlideRightIn'],\n    'SlideDown': ['SlideTopOut', 'SlideBottomOut', 'SlideBottomIn', 'SlideTopIn'],\n    'Zoom': ['FadeOut', 'FadeZoomOut', 'FadeZoomIn', 'FadeIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\nvar effectsRTLConfig = {\n    'None': [],\n    'SlideLeft': ['SlideLeftOut', 'SlideRightOut', 'SlideRightIn', 'SlideLeftIn'],\n    'SlideDown': ['SlideBottomOut', 'SlideTopOut', 'SlideTopIn', 'SlideBottomIn'],\n    'Zoom': ['FadeZoomOut', 'FadeOut', 'FadeIn', 'FadeZoomIn'],\n    'Fade': ['FadeOut', 'FadeOut', 'FadeIn', 'FadeIn']\n};\n// don't use space in classnames.\nexport var classNames = {\n    root: 'e-listview',\n    hover: 'e-hover',\n    selected: 'e-active',\n    focused: 'e-focused',\n    parentItem: 'e-list-parent',\n    listItem: 'e-list-item',\n    listIcon: 'e-list-icon',\n    textContent: 'e-text-content',\n    listItemText: 'e-list-text',\n    groupListItem: 'e-list-group-item',\n    hasChild: 'e-has-child',\n    view: 'e-view',\n    header: 'e-list-header',\n    headerText: 'e-headertext',\n    headerTemplateText: 'e-headertemplate-text',\n    text: 'e-text',\n    disable: 'e-disabled',\n    content: 'e-content',\n    icon: 'e-icons',\n    backIcon: 'e-icon-back',\n    checkboxWrapper: 'e-checkbox-wrapper',\n    checkbox: 'e-checkbox',\n    checked: 'e-check',\n    checklist: 'e-checklist',\n    checkboxIcon: 'e-frame',\n    checkboxRight: 'e-checkbox-right',\n    checkboxLeft: 'e-checkbox-left',\n    listviewCheckbox: 'e-listview-checkbox',\n    itemCheckList: 'e-checklist'\n};\nvar LISTVIEW_TEMPLATE_PROPERTY = 'Template';\nvar LISTVIEW_GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar LISTVIEW_HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nvar FieldSettings = /** @class */ (function (_super) {\n    __extends(FieldSettings, _super);\n    function FieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('id')\n    ], FieldSettings.prototype, \"id\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('isChecked')\n    ], FieldSettings.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property('isVisible')\n    ], FieldSettings.prototype, \"isVisible\", void 0);\n    __decorate([\n        Property('enabled')\n    ], FieldSettings.prototype, \"enabled\", void 0);\n    __decorate([\n        Property('iconCss')\n    ], FieldSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('child')\n    ], FieldSettings.prototype, \"child\", void 0);\n    __decorate([\n        Property('tooltip')\n    ], FieldSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('groupBy')\n    ], FieldSettings.prototype, \"groupBy\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldSettings.prototype, \"sortBy\", void 0);\n    __decorate([\n        Property('htmlAttributes')\n    ], FieldSettings.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('tableName')\n    ], FieldSettings.prototype, \"tableName\", void 0);\n    return FieldSettings;\n}(ChildProperty));\nexport { FieldSettings };\n/**\n * Represents the EJ2 ListView control.\n * ```html\n * <div id=\"listview\">\n * <ul>\n * <li>Favorite</li>\n * <li>Documents</li>\n * <li>Downloads</li>\n * </ul>\n * </div>\n * ```\n * ```typescript\n *   var lvObj = new ListView({});\n *   lvObj.appendTo(\"#listview\");\n * ```\n */\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function ListView(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * @private\n     */\n    ListView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'htmlAttributes':\n                    this.setHTMLAttribute();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enable':\n                    this.setEnable();\n                    break;\n                case 'width':\n                case 'height':\n                    this.setSize();\n                    break;\n                case 'enableRtl':\n                    this.setEnableRTL();\n                    break;\n                case 'fields':\n                    this.listBaseOption.fields = this.fields.properties;\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'headerTitle':\n                    if (!this.curDSLevel.length) {\n                        this.header(this.headerTitle, false);\n                    }\n                    break;\n                case 'showHeader':\n                    this.header(this.headerTitle, false);\n                    break;\n                case 'enableVirtualization':\n                    if (!isNullOrUndefined(this.contentContainer)) {\n                        detach(this.contentContainer);\n                    }\n                    this.refresh();\n                    break;\n                case 'showCheckBox':\n                case 'checkBoxPosition':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.setCheckbox();\n                    }\n                    break;\n                case 'dataSource':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.reRender();\n                    }\n                    break;\n                case 'sortOrder':\n                case 'showIcon':\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.reRenderUiVirtualization();\n                    }\n                    else {\n                        this.listBaseOption.showIcon = this.showIcon;\n                        this.curViewDS = this.getSubDS();\n                        this.resetCurrentList();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // Model Changes\n    ListView.prototype.setHTMLAttribute = function () {\n        if (Object.keys(this.htmlAttributes).length) {\n            attributes(this.element, this.htmlAttributes);\n        }\n    };\n    ListView.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' ').filter(function (css) { return css; }));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' ').filter(function (css) { return css; }));\n        }\n    };\n    ListView.prototype.setSize = function () {\n        this.element.style.height = formatUnit(this.height);\n        this.element.style.width = formatUnit(this.width);\n        this.isWindow = this.element.clientHeight ? false : true;\n    };\n    ListView.prototype.setEnable = function () {\n        this.enableElement(this.element, this.enable);\n    };\n    ListView.prototype.setEnableRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    ListView.prototype.enableElement = function (element, isEnabled) {\n        if (isEnabled) {\n            element.classList.remove(classNames.disable);\n        }\n        else {\n            element.classList.add(classNames.disable);\n        }\n    };\n    // Support Component Functions\n    ListView.prototype.header = function (text, showBack) {\n        if (this.headerEle === undefined && this.showHeader) {\n            if (this.enableHtmlSanitizer) {\n                this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n            }\n            this.headerEle = this.createElement('div', { className: classNames.header });\n            var innerHeaderEle = this.createElement('span', { className: classNames.headerText, innerHTML: this.headerTitle });\n            var textEle = this.createElement('div', { className: classNames.text, innerHTML: innerHeaderEle.outerHTML });\n            var hedBackButton = this.createElement('div', {\n                className: classNames.icon + ' ' + classNames.backIcon + ' e-but-back',\n                attrs: { style: 'display:none;' }\n            });\n            this.headerEle.appendChild(hedBackButton);\n            this.headerEle.appendChild(textEle);\n            if (this.headerTemplate) {\n                var compiledString = compile(this.headerTemplate);\n                var headerTemplateEle = this.createElement('div', { className: classNames.headerTemplateText });\n                append(compiledString({}, null, null, this.LISTVIEW_HEADERTEMPLATE_ID), headerTemplateEle);\n                append([headerTemplateEle], this.headerEle);\n                this.updateBlazorTemplates(false, true, true);\n            }\n            if (this.headerTemplate && this.headerTitle) {\n                textEle.classList.add('header');\n            }\n            this.element.classList.add('e-has-header');\n            prepend([this.headerEle], this.element);\n        }\n        else if (this.headerEle) {\n            if (this.showHeader) {\n                this.headerEle.style.display = '';\n                var textEle = this.headerEle.querySelector('.' + classNames.headerText);\n                var hedBackButton = this.headerEle.querySelector('.' + classNames.backIcon);\n                if (this.enableHtmlSanitizer) {\n                    text = SanitizeHtmlHelper.sanitize(text);\n                }\n                textEle.innerHTML = text;\n                if (this.headerTemplate && showBack) {\n                    textEle.parentElement.classList.remove('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('nested-header');\n                }\n                if (this.headerTemplate && !showBack) {\n                    textEle.parentElement.classList.add('header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.remove('nested-header');\n                    this.headerEle.querySelector('.' + classNames.headerTemplateText).classList.add('header');\n                }\n                if (showBack === true) {\n                    hedBackButton.style.display = '';\n                }\n                else {\n                    hedBackButton.style.display = 'none';\n                }\n            }\n            else {\n                this.headerEle.style.display = 'none';\n            }\n        }\n    };\n    // Animation Related Functions\n    ListView.prototype.switchView = function (fromView, toView, reverse) {\n        var _this = this;\n        if (fromView && toView) {\n            var fPos_1 = fromView.style.position;\n            var overflow_1 = (this.element.style.overflow !== 'hidden') ? this.element.style.overflow : '';\n            fromView.style.position = 'absolute';\n            fromView.classList.add('e-view');\n            var anim = void 0;\n            var duration = this.animation.duration;\n            if (this.animation.effect) {\n                anim = (this.enableRtl ? effectsRTLConfig[this.animation.effect] : effectsConfig[this.animation.effect]);\n            }\n            else {\n                var slideLeft = 'SlideLeft';\n                anim = effectsConfig[slideLeft];\n                reverse = this.enableRtl;\n                duration = 0;\n            }\n            this.element.style.overflow = 'hidden';\n            this.aniObj.animate(fromView, {\n                name: (reverse === true ? anim[0] : anim[1]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function (model) {\n                    fromView.style.display = 'none';\n                    _this.element.style.overflow = overflow_1;\n                    fromView.style.position = fPos_1;\n                    fromView.classList.remove('e-view');\n                }\n            });\n            toView.style.display = '';\n            this.aniObj.animate(toView, {\n                name: (reverse === true ? anim[2] : anim[3]),\n                duration: duration,\n                timingFunction: this.animation.easing,\n                end: function () {\n                    _this.trigger('actionComplete');\n                }\n            });\n            this.curUL = toView;\n        }\n    };\n    ListView.prototype.preRender = function () {\n        this.listBaseOption = {\n            template: this.template,\n            headerTemplate: this.headerTemplate,\n            groupTemplate: this.groupTemplate, expandCollapse: true, listClass: '',\n            ariaAttributes: {\n                itemRole: 'option', listRole: 'presentation', itemText: '',\n                groupItemRole: 'group', wrapperRole: 'presentation'\n            },\n            fields: this.fields.properties, sortOrder: this.sortOrder, showIcon: this.showIcon,\n            itemCreated: this.renderCheckbox.bind(this),\n            templateID: \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY,\n            groupTemplateID: \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY,\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\n            removeBlazorID: true\n        };\n        this.initialization();\n    };\n    ListView.prototype.initialization = function () {\n        this.curDSLevel = [];\n        this.animateOptions = {};\n        this.curViewDS = [];\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.selectedData = [];\n        this.selectedId = [];\n        this.LISTVIEW_TEMPLATE_ID = \"\" + this.element.id + LISTVIEW_TEMPLATE_PROPERTY;\n        this.LISTVIEW_GROUPTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_GROUPTEMPLATE_PROPERTY;\n        this.LISTVIEW_HEADERTEMPLATE_ID = \"\" + this.element.id + LISTVIEW_HEADERTEMPLATE_PROPERTY;\n        this.aniObj = new Animation(this.animateOptions);\n        this.removeElement(this.curUL);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.headerEle);\n        this.removeElement(this.contentContainer);\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = this.contentContainer = undefined;\n    };\n    ListView.prototype.renderCheckbox = function (args) {\n        if (args.item.classList.contains(classNames.hasChild)) {\n            this.isNestedList = true;\n        }\n        if (this.showCheckBox && this.isValidLI(args.item)) {\n            var checkboxElement = void 0;\n            var fieldData = void 0;\n            checkboxElement = createCheckBox(this.createElement, false, {\n                checked: false, enableRtl: this.enableRtl,\n                cssClass: classNames.listviewCheckbox\n            });\n            checkboxElement.setAttribute('role', 'checkbox');\n            var frameElement_1 = checkboxElement.querySelector('.' + classNames.checkboxIcon);\n            args.item.classList.add(classNames.itemCheckList);\n            args.item.firstElementChild.classList.add(classNames.checkbox);\n            if (typeof this.dataSource[0] !== 'string' && typeof this.dataSource[0] !== 'number') {\n                fieldData = getFieldValues(args.curData, this.listBaseOption.fields);\n                if (fieldData[this.listBaseOption.fields.isChecked]) {\n                    this.checkInternally(args, checkboxElement);\n                }\n            }\n            else if (((typeof this.dataSource[0] === 'string' ||\n                typeof this.dataSource[0] === 'number') && this.selectedData.indexOf(args.text) !== -1)) {\n                this.checkInternally(args, checkboxElement);\n            }\n            checkboxElement.setAttribute('aria-checked', frameElement_1.classList.contains(classNames.checked) ? 'true' : 'false');\n            if (this.checkBoxPosition === 'Left') {\n                checkboxElement.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.classList.add(classNames.checkboxLeft);\n                args.item.firstElementChild.insertBefore(checkboxElement, args.item.firstElementChild.childNodes[0]);\n            }\n            else {\n                checkboxElement.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.classList.add(classNames.checkboxRight);\n                args.item.firstElementChild.appendChild(checkboxElement);\n            }\n            this.currentLiElements.push(args.item);\n        }\n    };\n    ListView.prototype.checkInternally = function (args, checkboxElement) {\n        args.item.classList.add(classNames.selected);\n        args.item.setAttribute('aria-selected', 'true');\n        checkboxElement.querySelector('.' + classNames.checkboxIcon).classList.add(classNames.checked);\n        checkboxElement.setAttribute('aria-checked', 'true');\n    };\n    /**\n     * It is used to check the checkbox of an item.\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.checkItem = function (item) {\n        this.toggleCheckBase(item, true);\n    };\n    ListView.prototype.toggleCheckBase = function (item, checked) {\n        if (this.showCheckBox) {\n            var liElement = item;\n            if (item instanceof Object && item.constructor !== HTMLLIElement) {\n                liElement = this.getLiFromObjOrElement(item);\n            }\n            if (!isNullOrUndefined(liElement)) {\n                var checkboxIcon = liElement.querySelector('.' + classNames.checkboxIcon);\n                checked ? liElement.classList.add(classNames.selected) : liElement.classList.remove(classNames.selected);\n                liElement.setAttribute('aria-selected', checked ? 'true' : 'false');\n                checked ? checkboxIcon.classList.add(classNames.checked) : checkboxIcon.classList.remove(classNames.checked);\n                checkboxIcon.parentElement.setAttribute('aria-checked', checked ? 'true' : 'false');\n            }\n            this.setSelectedItemData(liElement);\n        }\n    };\n    /**\n     * It is used to uncheck the checkbox of an item.\n     * @param  {Fields | HTMLElement | Element} item - It accepts Fields or HTML list element as an argument.\n     */\n    ListView.prototype.uncheckItem = function (item) {\n        this.toggleCheckBase(item, false);\n    };\n    /**\n     * It is used to check all the items in ListView.\n     */\n    ListView.prototype.checkAllItems = function () {\n        this.toggleAllCheckBase(true);\n    };\n    /**\n     * It is used to un-check all the items in ListView.\n     */\n    ListView.prototype.uncheckAllItems = function () {\n        this.toggleAllCheckBase(false);\n    };\n    ListView.prototype.toggleAllCheckBase = function (checked) {\n        if (this.showCheckBox) {\n            for (var i = 0; i < this.liCollection.length; i++) {\n                var checkIcon = this.liCollection[i].querySelector('.' + classNames.checkboxIcon);\n                if (checkIcon) {\n                    if (checked) {\n                        if (!checkIcon.classList.contains(classNames.checked)) {\n                            this.checkItem(this.liCollection[i]);\n                        }\n                    }\n                    else {\n                        if (checkIcon.classList.contains(classNames.checked)) {\n                            this.uncheckItem(this.liCollection[i]);\n                        }\n                    }\n                }\n            }\n            if (this.enableVirtualization) {\n                this.virtualizationModule.checkedItem(checked);\n            }\n        }\n    };\n    ListView.prototype.setCheckbox = function () {\n        var _this = this;\n        if (this.showCheckBox) {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n            var args_1 = {\n                item: undefined, curData: undefined, dataSource: undefined, fields: undefined,\n                options: undefined, text: ''\n            };\n            liCollection.forEach(function (element) {\n                args_1.item = element;\n                args_1.curData = _this.getItemData(element);\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n                _this.renderCheckbox(args_1);\n                if (args_1.item.classList.contains(classNames.selected)) {\n                    _this.checkInternally(args_1, args_1.item.querySelector('.' + classNames.checkboxWrapper));\n                }\n            });\n        }\n        else {\n            var liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.itemCheckList));\n            liCollection.forEach(function (element) {\n                element.classList.remove(classNames.selected);\n                element.firstElementChild.classList.remove(classNames.checkbox);\n                _this.removeElement(element.querySelector('.' + classNames.checkboxWrapper));\n            });\n            if (this.selectedItems) {\n                this.selectedItems.item.classList.add(classNames.selected);\n            }\n        }\n    };\n    /**\n     * It is used to refresh the UI list item height\n     */\n    ListView.prototype.refreshItemHeight = function () {\n        this.virtualizationModule.refreshItemHeight();\n    };\n    ListView.prototype.clickHandler = function (e) {\n        var target = e.target;\n        var classList = target.classList;\n        if (classList.contains(classNames.backIcon) || classList.contains(classNames.headerText)) {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n        else {\n            var li = closest(target.parentNode, '.' + classNames.listItem);\n            if (li === null) {\n                li = target;\n            }\n            this.removeFocus();\n            if (this.enable && this.showCheckBox && this.isValidLI(li)) {\n                if (e.target.classList.contains(classNames.checkboxIcon)) {\n                    li.classList.add(classNames.focused);\n                    if (isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                        var args = {\n                            curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                            text: undefined, item: li\n                        };\n                        this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n                    }\n                    else {\n                        this.uncheckItem(li);\n                        li.classList.add(classNames.focused);\n                    }\n                    if (this.enableVirtualization) {\n                        this.virtualizationModule.setCheckboxLI(li, e);\n                    }\n                    if (e) {\n                        var eventArgs = this.selectEventData(li, e);\n                        var checkIcon = li.querySelector('.' + classNames.checkboxIcon);\n                        merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n                        this.trigger('select', eventArgs);\n                    }\n                }\n                else if (li.classList.contains(classNames.hasChild)) {\n                    this.removeHover();\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.setSelectLI(li, e);\n                    li.classList.remove(classNames.selected);\n                }\n                else {\n                    this.setCheckboxLI(li, e);\n                }\n            }\n            else {\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.removeElement = function (element) {\n        return element && element.parentNode && element.parentNode.removeChild(element);\n    };\n    ListView.prototype.hoverHandler = function (e) {\n        var curLi = closest(e.target.parentNode, '.' + classNames.listItem);\n        this.setHoverLI(curLi);\n    };\n    ListView.prototype.leaveHandler = function (e) {\n        this.removeHover();\n    };\n    ;\n    ListView.prototype.homeKeyHandler = function (e, end) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            if (this.selectedItems) {\n                (this.selectedItems.item).setAttribute('aria-selected', 'false');\n            }\n            var li = this.curUL.querySelectorAll('.' + classNames.listItem);\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused) ||\n                this.curUL.querySelector('.' + classNames.selected);\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (!this.showCheckBox) {\n                    focusedElement.classList.remove(classNames.selected);\n                }\n            }\n            var index = !end ? 0 : li.length - 1;\n            if (li[index].classList.contains(classNames.hasChild) || this.showCheckBox) {\n                li[index].classList.add(classNames.focused);\n            }\n            else {\n                this.setSelectLI(li[index], e);\n            }\n            if (li[index]) {\n                this.element.setAttribute('aria-activedescendant', li[index].id.toString());\n            }\n            else {\n                this.element.removeAttribute('aria-activedescendant');\n            }\n        }\n    };\n    ListView.prototype.onArrowKeyDown = function (e, prev) {\n        var siblingLI;\n        var li;\n        var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n        if (hasChild || this.showCheckBox) {\n            li = this.curUL.querySelector('.' + classNames.focused) || this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            if (!isNullOrUndefined(siblingLI)) {\n                if (li) {\n                    li.classList.remove(classNames.focused);\n                    if (!this.showCheckBox) {\n                        li.classList.remove(classNames.selected);\n                    }\n                }\n                if (siblingLI.classList.contains(classNames.hasChild) || this.showCheckBox) {\n                    siblingLI.classList.add(classNames.focused);\n                }\n                else {\n                    this.setSelectLI(siblingLI, e);\n                }\n            }\n        }\n        else {\n            li = this.curUL.querySelector('.' + classNames.selected);\n            siblingLI = ListBase.getSiblingLI(this.curUL.querySelectorAll('.' + classNames.listItem), li, prev);\n            this.setSelectLI(siblingLI, e);\n        }\n        if (siblingLI) {\n            this.element.setAttribute('aria-activedescendant', siblingLI.id.toString());\n        }\n        else {\n            this.element.removeAttribute('aria-activedescendant');\n        }\n        return siblingLI;\n    };\n    ListView.prototype.arrowKeyHandler = function (e, prev) {\n        var _this = this;\n        e.preventDefault();\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var siblingLI = this.onArrowKeyDown(e, prev);\n            var elementTop = this.element.getBoundingClientRect().top;\n            var elementHeight = this.element.getBoundingClientRect().height;\n            var firstItemBounds = this.curUL.querySelector('.' + classNames.listItem).getBoundingClientRect();\n            var heightDiff = void 0;\n            var groupItemBounds = void 0;\n            if (this.fields.groupBy) {\n                groupItemBounds = this.curUL.querySelector('.' + classNames.groupListItem).getBoundingClientRect();\n            }\n            if (siblingLI) {\n                var siblingTop = siblingLI.getBoundingClientRect().top;\n                var siblingHeight = siblingLI.getBoundingClientRect().height;\n                if (!prev) {\n                    var height = this.isWindow ? window.innerHeight : elementHeight;\n                    heightDiff = this.isWindow ? (siblingTop + siblingHeight) :\n                        ((siblingTop - elementTop) + siblingHeight);\n                    if (heightDiff > height) {\n                        this.isWindow ? window.scroll(0, pageYOffset + (heightDiff - height)) :\n                            this.element.scrollTop = this.element.scrollTop + (heightDiff - height);\n                    }\n                }\n                else {\n                    heightDiff = this.isWindow ? siblingTop : (siblingTop - elementTop);\n                    if (heightDiff < 0) {\n                        this.isWindow ? window.scroll(0, pageYOffset + heightDiff) :\n                            this.element.scrollTop = this.element.scrollTop + heightDiff;\n                    }\n                }\n            }\n            else if (this.enableVirtualization && prev && this.virtualizationModule.uiFirstIndex) {\n                this.onUIScrolled = function () {\n                    _this.onArrowKeyDown(e, prev);\n                    _this.onUIScrolled = undefined;\n                };\n                heightDiff = this.virtualizationModule.listItemHeight;\n                this.isWindow ? window.scroll(0, pageYOffset - heightDiff) :\n                    this.element.scrollTop = this.element.scrollTop - heightDiff;\n            }\n            else if (prev) {\n                if (this.showHeader && this.headerEle) {\n                    var topHeight = groupItemBounds ? groupItemBounds.top : firstItemBounds.top;\n                    var headerBounds = this.headerEle.getBoundingClientRect();\n                    heightDiff = headerBounds.top < 0 ? (headerBounds.height - topHeight) : 0;\n                    this.isWindow ? window.scroll(0, pageYOffset - heightDiff)\n                        : this.element.scrollTop = 0;\n                }\n                else if (this.fields.groupBy) {\n                    heightDiff = this.isWindow ? (groupItemBounds.top < 0 ? groupItemBounds.top : 0) :\n                        (elementTop - firstItemBounds.top) + groupItemBounds.height;\n                    this.isWindow ? window.scroll(0, pageYOffset + heightDiff) :\n                        this.element.scrollTop = this.element.scrollTop - heightDiff;\n                }\n            }\n        }\n    };\n    ListView.prototype.enterKeyHandler = function (e) {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var hasChild = !isNullOrUndefined(this.curUL.querySelector('.' + classNames.hasChild)) ? true : false;\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (hasChild && li) {\n                li.classList.remove(classNames.focused);\n                if (this.showCheckBox) {\n                    this.removeSelect();\n                    this.removeSelect(li);\n                    this.removeHover();\n                }\n                this.setSelectLI(li, e);\n            }\n        }\n    };\n    ListView.prototype.spaceKeyHandler = function (e) {\n        if (this.enable && this.showCheckBox && Object.keys(this.dataSource).length && this.curUL) {\n            var li = this.curUL.querySelector('.' + classNames.focused);\n            if (!isNullOrUndefined(li) && isNullOrUndefined(li.querySelector('.' + classNames.checked))) {\n                var args = {\n                    curData: undefined, dataSource: undefined, fields: undefined, options: undefined,\n                    text: undefined, item: li\n                };\n                this.checkInternally(args, args.item.querySelector('.' + classNames.checkboxWrapper));\n            }\n            else {\n                this.uncheckItem(li);\n            }\n        }\n    };\n    ListView.prototype.keyActionHandler = function (e) {\n        switch (e.keyCode) {\n            case 36:\n                this.homeKeyHandler(e);\n                break;\n            case 35:\n                this.homeKeyHandler(e, true);\n                break;\n            case 40:\n                this.arrowKeyHandler(e);\n                break;\n            case 38:\n                this.arrowKeyHandler(e, true);\n                break;\n            case 13:\n                this.enterKeyHandler(e);\n                break;\n            case 8:\n                if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                    this.uncheckAllItems();\n                }\n                this.back();\n                break;\n            case 32:\n                this.spaceKeyHandler(e);\n                break;\n        }\n    };\n    ListView.prototype.swipeActionHandler = function (e) {\n        if (e.swipeDirection === 'Right') {\n            if (this.showCheckBox && this.curDSLevel[this.curDSLevel.length - 1]) {\n                this.uncheckAllItems();\n            }\n            this.back();\n        }\n    };\n    ListView.prototype.focusout = function () {\n        if (Object.keys(this.dataSource).length && this.curUL) {\n            var focusedElement = this.curUL.querySelector('.' + classNames.focused);\n            var activeElement = this.curUL.querySelector('[aria-selected = true]');\n            if (focusedElement) {\n                focusedElement.classList.remove(classNames.focused);\n                if (activeElement && !this.showCheckBox) {\n                    activeElement.classList.add(classNames.selected);\n                }\n            }\n        }\n    };\n    ListView.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'keydown', this.keyActionHandler, this);\n        EventHandler.add(this.element, 'click', this.clickHandler, this);\n        if (!this.enableVirtualization) {\n            EventHandler.add(this.element, 'mouseover', this.hoverHandler, this);\n            EventHandler.add(this.element, 'mouseout', this.leaveHandler, this);\n        }\n        EventHandler.add(this.element, 'focusout', this.focusout, this);\n        this.touchModule = new Touch(this.element, { swipe: this.swipeActionHandler.bind(this) });\n    };\n    ListView.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.clickHandler);\n        if (!this.enableVirtualization) {\n            EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n            EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        }\n        EventHandler.remove(this.element, 'mouseover', this.hoverHandler);\n        EventHandler.remove(this.element, 'mouseout', this.leaveHandler);\n        this.touchModule.destroy();\n    };\n    ListView.prototype.removeFocus = function () {\n        var focusedLI = this.element.querySelectorAll('.' + classNames.focused);\n        for (var _i = 0, focusedLI_1 = focusedLI; _i < focusedLI_1.length; _i++) {\n            var ele = focusedLI_1[_i];\n            ele.classList.remove(classNames.focused);\n        }\n    };\n    ListView.prototype.removeHover = function () {\n        var hoverLI = this.element.querySelector('.' + classNames.hover);\n        if (hoverLI) {\n            hoverLI.classList.remove(classNames.hover);\n        }\n    };\n    ListView.prototype.removeSelect = function (li) {\n        if (isNullOrUndefined(li)) {\n            var selectedLI = this.element.querySelectorAll('.' + classNames.selected);\n            for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n                var ele = selectedLI_1[_i];\n                if (this.showCheckBox && ele.querySelector('.' + classNames.checked)) {\n                    continue;\n                }\n                else {\n                    ele.setAttribute('aria-selected', 'false');\n                    ele.classList.remove(classNames.selected);\n                }\n            }\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n    };\n    ListView.prototype.isValidLI = function (li) {\n        return (li && li.classList.contains(classNames.listItem)\n            && !li.classList.contains(classNames.groupListItem)\n            && !li.classList.contains(classNames.disable));\n    };\n    ListView.prototype.setCheckboxLI = function (li, e) {\n        if (this.isValidLI(li) && this.enable && this.showCheckBox) {\n            if (this.curUL.querySelector('.' + classNames.focused)) {\n                this.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n            }\n            li.classList.add(classNames.focused);\n            var checkboxElement = li.querySelector('.' + classNames.checkboxWrapper);\n            var checkIcon = checkboxElement.querySelector('.' + classNames.checkboxIcon + '.' + classNames.icon);\n            this.removeHover();\n            if (!checkIcon.classList.contains(classNames.checked)) {\n                checkIcon.classList.add(classNames.checked);\n                li.classList.add(classNames.selected);\n                li.setAttribute('aria-selected', 'true');\n            }\n            else {\n                checkIcon.classList.remove(classNames.checked);\n                li.classList.remove(classNames.selected);\n                li.setAttribute('aria-selected', 'false');\n            }\n            checkboxElement.setAttribute('aria-checked', checkIcon.classList.contains(classNames.checked) ?\n                'true' : 'false');\n            var eventArgs = this.selectEventData(li, e);\n            merge(eventArgs, { isChecked: checkIcon.classList.contains(classNames.checked) });\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setCheckboxLI(li, e);\n            }\n            this.trigger('select', eventArgs);\n            this.setSelectedItemData(li);\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.selectEventData = function (li, e) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        var selectedItem;\n        if (!isNullOrUndefined(data)\n            && typeof this.dataSource[0] === 'string' || typeof this.dataSource[0] === 'number') {\n            selectedItem = { item: li, text: li && li.innerText.trim(), data: this.dataSource };\n        }\n        else {\n            selectedItem = { item: li, text: fieldData && fieldData[this.listBaseOption.fields.text], data: data };\n        }\n        var eventArgs = {};\n        merge(eventArgs, selectedItem);\n        if (e) {\n            merge(eventArgs, { isInteracted: true, event: e, index: Array.prototype.indexOf.call(this.curUL.children, li) });\n        }\n        return eventArgs;\n    };\n    ListView.prototype.setSelectedItemData = function (li) {\n        var data = this.getItemData(li);\n        var fieldData = getFieldValues(data, this.listBaseOption.fields);\n        if (!isNullOrUndefined(data) && ((typeof this.dataSource[0] === 'string') ||\n            (typeof this.dataSource[0] === 'number'))) {\n            this.selectedItems = {\n                item: li,\n                text: li && li.innerText.trim(),\n                data: this.dataSource\n            };\n        }\n        else {\n            this.selectedItems = {\n                item: li,\n                text: fieldData && fieldData[this.listBaseOption.fields.text],\n                data: data\n            };\n        }\n    };\n    ListView.prototype.setSelectLI = function (li, e) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.selected) && this.enable) {\n            if (!this.showCheckBox) {\n                this.removeSelect();\n            }\n            li.classList.add(classNames.selected);\n            li.setAttribute('aria-selected', 'true');\n            this.removeHover();\n            this.setSelectedItemData(li);\n            if (this.enableVirtualization) {\n                this.virtualizationModule.setSelectLI(li, e);\n            }\n            var eventArgs = this.selectEventData(li, e);\n            this.trigger('select', eventArgs);\n            this.selectedLI = li;\n            this.renderSubList(li);\n        }\n    };\n    ListView.prototype.setHoverLI = function (li) {\n        if (this.isValidLI(li) && !li.classList.contains(classNames.hover) && this.enable) {\n            var lastLi = this.element.querySelectorAll('.' + classNames.hover);\n            if (lastLi && lastLi.length) {\n                removeClass(lastLi, classNames.hover);\n            }\n            if (!li.classList.contains(classNames.selected) || this.showCheckBox) {\n                li.classList.add(classNames.hover);\n            }\n        }\n    };\n    //Data Source Related Functions\n    ListView.prototype.getSubDS = function () {\n        var levelKeys = this.curDSLevel;\n        if (levelKeys.length) {\n            var ds = this.localData;\n            for (var _i = 0, levelKeys_1 = levelKeys; _i < levelKeys_1.length; _i++) {\n                var key = levelKeys_1[_i];\n                var field = {};\n                field[this.fields.id] = key;\n                this.curDSJSON = this.findItemFromDS(ds, field);\n                var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n                ds = this.curDSJSON ? fieldData[this.fields.child] : ds;\n            }\n            return ds;\n        }\n        return this.localData;\n    };\n    ListView.prototype.getItemData = function (li) {\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        var fields = this.getElementUID(li);\n        var curDS;\n        if (isNullOrUndefined(this.element.querySelector('.' + classNames.hasChild)) && this.fields.groupBy) {\n            curDS = this.curViewDS;\n        }\n        else {\n            curDS = dataSource;\n        }\n        return this.findItemFromDS(curDS, fields);\n    };\n    ListView.prototype.findItemFromDS = function (dataSource, fields, parent) {\n        var _this = this;\n        var resultJSON;\n        if (dataSource && dataSource.length && fields) {\n            dataSource.some(function (data) {\n                var fieldData = getFieldValues(data, _this.listBaseOption.fields);\n                //(!(fid) || id === fid) && (!(ftext) || text === ftext) && (!!fid || !!ftext)\n                if ((fields[_this.fields.id] || fields[_this.fields.text]) &&\n                    (!fields[_this.fields.id] || (!isNullOrUndefined(fieldData[_this.fields.id]) &&\n                        fieldData[_this.fields.id].toString()) === fields[_this.fields.id].toString()) &&\n                    (!fields[_this.fields.text] || fieldData[_this.fields.text] === fields[_this.fields.text])) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (typeof data !== 'object' && dataSource.indexOf(data) !== -1) {\n                    resultJSON = (parent ? dataSource : data);\n                }\n                else if (!isNullOrUndefined(fields[_this.fields.id]) && isNullOrUndefined(fieldData[_this.fields.id])) {\n                    var li = _this.element.querySelector('[data-uid=\"'\n                        + fields[_this.fields.id] + '\"]');\n                    if (li && li.innerText.trim() === fieldData[_this.fields.text]) {\n                        resultJSON = data;\n                    }\n                }\n                else if (fieldData.hasOwnProperty(_this.fields.child) && fieldData[_this.fields.child].length) {\n                    resultJSON = _this.findItemFromDS(fieldData[_this.fields.child], fields, parent);\n                }\n                return !!resultJSON;\n            });\n        }\n        else {\n            resultJSON = dataSource;\n        }\n        return resultJSON;\n    };\n    ListView.prototype.getQuery = function () {\n        var columns = [];\n        var query = (this.query ? this.query : new Query());\n        if (!this.query) {\n            for (var _i = 0, _a = Object.keys(this.fields.properties); _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column !== 'tableName' && !!(this.fields[column]) &&\n                    this.fields[column] !==\n                        ListBase.defaultMappedFields[column]\n                    && columns.indexOf(this.fields[column]) === -1) {\n                    columns.push(this.fields[column]);\n                }\n            }\n            query.select(columns);\n            if (this.fields.properties.hasOwnProperty('tableName')) {\n                query.from(this.fields.tableName);\n            }\n        }\n        return query;\n    };\n    ListView.prototype.setViewDataSource = function (dataSource) {\n        if (dataSource === void 0) { dataSource = this.localData; }\n        if (dataSource && this.fields.groupBy) {\n            if (this.sortOrder !== 'None') {\n                this.curViewDS = ListBase.groupDataSource(ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy)), this.listBaseOption.fields, this.sortOrder);\n            }\n            else {\n                this.curViewDS = ListBase.groupDataSource(dataSource, this.listBaseOption.fields, this.sortOrder);\n            }\n        }\n        else if (dataSource && this.sortOrder !== 'None') {\n            this.curViewDS = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, this.fields.sortBy));\n        }\n        else {\n            this.curViewDS = dataSource;\n        }\n    };\n    ListView.prototype.isInAnimation = function () {\n        return this.curUL.classList.contains('.e-animate');\n    };\n    ListView.prototype.setLocalData = function () {\n        var _this = this;\n        this.trigger('actionBegin');\n        if (this.dataSource instanceof DataManager) {\n            this.dataSource.executeQuery(this.getQuery()).then(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.localData = e.result;\n                _this.removeElement(_this.contentContainer);\n                _this.renderList();\n                _this.trigger('actionComplete', e);\n            }).catch(function (e) {\n                if (_this.isDestroyed) {\n                    return;\n                }\n                _this.trigger('actionFailure', e);\n            });\n        }\n        else if (!this.dataSource || !this.dataSource.length) {\n            var ul = this.element.querySelector('ul');\n            if (ul) {\n                remove(ul);\n                this.setProperties({ dataSource: ListBase.createJsonFromElement(ul) }, true);\n                this.localData = this.dataSource;\n                this.renderList();\n                this.trigger('actionComplete', { data: this.localData });\n            }\n        }\n        else {\n            this.localData = this.dataSource;\n            this.renderList();\n            this.trigger('actionComplete', { data: this.localData });\n        }\n    };\n    ListView.prototype.reRender = function () {\n        this.resetBlazorTemplates();\n        this.removeElement(this.headerEle);\n        this.removeElement(this.ulElement);\n        this.removeElement(this.contentContainer);\n        if (Object.keys(window).indexOf('ejsInterop') === -1) {\n            this.element.innerHTML = '';\n        }\n        this.headerEle = this.ulElement = this.liCollection = undefined;\n        this.setLocalData();\n        this.header();\n    };\n    ListView.prototype.resetCurrentList = function () {\n        this.resetBlazorTemplates();\n        this.setViewDataSource(this.curViewDS);\n        this.contentContainer.innerHTML = '';\n        this.createList();\n        this.renderIntoDom(this.curUL);\n    };\n    ListView.prototype.setAttributes = function (liElements) {\n        var _this = this;\n        liElements.forEach(function (element) {\n            if (element.classList.contains('e-list-item')) {\n                element.setAttribute('id', _this.element.id + '_' + element.getAttribute('data-uid'));\n                element.setAttribute('aria-selected', 'false');\n                element.setAttribute('tabindex', '-1');\n            }\n        });\n    };\n    ListView.prototype.createList = function () {\n        this.currentLiElements = [];\n        this.isNestedList = false;\n        this.ulElement = this.curUL = ListBase.createList(this.createElement, this.curViewDS, this.listBaseOption);\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        this.setAttributes(this.liCollection);\n        this.updateBlazorTemplates(true);\n    };\n    ListView.prototype.resetBlazorTemplates = function () {\n        // tslint:disable-next-line:no-any\n        var templateCollection = blazorTemplates;\n        if (this.template) {\n            templateCollection[this.LISTVIEW_TEMPLATE_ID] = [];\n            resetBlazorTemplate(this.LISTVIEW_TEMPLATE_ID, LISTVIEW_TEMPLATE_PROPERTY);\n        }\n        if (this.groupTemplate) {\n            templateCollection[this.LISTVIEW_GROUPTEMPLATE_ID] = [];\n            resetBlazorTemplate(this.LISTVIEW_GROUPTEMPLATE_ID, LISTVIEW_GROUPTEMPLATE_PROPERTY);\n        }\n        if (this.headerTemplate) {\n            resetBlazorTemplate(this.LISTVIEW_HEADERTEMPLATE_ID, LISTVIEW_HEADERTEMPLATE_PROPERTY);\n        }\n    };\n    ListView.prototype.updateBlazorTemplates = function (template, headerTemplate, resetExistingElements) {\n        if (template === void 0) { template = false; }\n        if (headerTemplate === void 0) { headerTemplate = false; }\n        if (resetExistingElements === void 0) { resetExistingElements = false; }\n        if (this.template && template && !this.enableVirtualization) {\n            updateBlazorTemplate(this.LISTVIEW_TEMPLATE_ID, LISTVIEW_TEMPLATE_PROPERTY, this, resetExistingElements);\n        }\n        if (this.groupTemplate && template && !this.enableVirtualization) {\n            updateBlazorTemplate(this.LISTVIEW_GROUPTEMPLATE_ID, LISTVIEW_GROUPTEMPLATE_PROPERTY, this, resetExistingElements);\n        }\n        if (this.headerTemplate && headerTemplate) {\n            updateBlazorTemplate(this.LISTVIEW_HEADERTEMPLATE_ID, LISTVIEW_HEADERTEMPLATE_PROPERTY, this, resetExistingElements);\n        }\n    };\n    ListView.prototype.renderSubList = function (li) {\n        var uID = li.getAttribute('data-uid');\n        if (li.classList.contains(classNames.hasChild) && uID) {\n            var ul = closest(li.parentNode, '.' + classNames.parentItem);\n            var ele = this.element.querySelector('[pid=\\'' + uID + '\\']');\n            this.curDSLevel.push(uID);\n            this.setViewDataSource(this.getSubDS());\n            if (!ele) {\n                var data = this.curViewDS;\n                ele = ListBase.createListFromJson(this.createElement, data, this.listBaseOption, this.curDSLevel.length);\n                var lists = ele.querySelectorAll('.' + classNames.listItem);\n                this.setAttributes(lists);\n                ele.setAttribute('pID', uID);\n                ele.style.display = 'none';\n                this.renderIntoDom(ele);\n                this.updateBlazorTemplates(true);\n            }\n            this.switchView(ul, ele);\n            this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n            if (this.selectedItems) {\n                var fieldData = getFieldValues(this.selectedItems.data, this.listBaseOption.fields);\n                this.header((fieldData[this.listBaseOption.fields.text]), true);\n            }\n            this.selectedLI = undefined;\n        }\n    };\n    ListView.prototype.renderIntoDom = function (ele) {\n        this.contentContainer.appendChild(ele);\n    };\n    ListView.prototype.renderList = function (data) {\n        this.setViewDataSource(data);\n        if (this.enableVirtualization) {\n            if (Object.keys(this.dataSource).length) {\n                if ((this.template || this.groupTemplate) && !this.virtualizationModule.isNgTemplate()) {\n                    this.listBaseOption.template = null;\n                    this.listBaseOption.groupTemplate = null;\n                    this.listBaseOption.itemCreated = this.virtualizationModule.createUIItem.bind(this.virtualizationModule);\n                }\n                this.virtualizationModule.uiVirtualization();\n            }\n        }\n        else {\n            this.createList();\n            this.contentContainer = this.createElement('div', { className: classNames.content });\n            this.element.appendChild(this.contentContainer);\n            this.renderIntoDom(this.ulElement);\n        }\n    };\n    ListView.prototype.getElementUID = function (obj) {\n        var fields = {};\n        if (obj instanceof Element) {\n            fields[this.fields.id] = obj.getAttribute('data-uid');\n        }\n        else {\n            fields = obj;\n        }\n        return fields;\n    };\n    /**\n     * It is used to Initialize the control rendering.\n     */\n    ListView.prototype.render = function () {\n        this.element.classList.add(classNames.root);\n        attributes(this.element, { role: 'listbox', tabindex: '0' });\n        this.setCSSClass();\n        this.setEnableRTL();\n        this.setEnable();\n        this.setSize();\n        this.wireEvents();\n        this.header();\n        this.setLocalData();\n        this.setHTMLAttribute();\n        this.rippleFn = rippleEffect(this.element, {\n            selector: '.' + classNames.listItem\n        });\n        this.renderComplete();\n    };\n    /**\n     * It is used to destroy the ListView component.\n     */\n    ListView.prototype.destroy = function () {\n        this.resetBlazorTemplates();\n        this.unWireEvents();\n        var classAr = [classNames.root, classNames.disable, 'e-rtl',\n            'e-has-header', 'e-lib'].concat(this.cssClass.split(' ').filter(function (css) { return css; }));\n        removeClass([this.element], classAr);\n        this.element.removeAttribute('role');\n        this.element.removeAttribute('tabindex');\n        this.element.innerHTML = '';\n        this.curUL = this.ulElement = this.liCollection = this.headerEle = undefined;\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * It helps to switch back from navigated sub list.\n     */\n    ListView.prototype.back = function () {\n        var pID = this.curDSLevel[this.curDSLevel.length - 1];\n        if (pID === undefined || this.isInAnimation()) {\n            return;\n        }\n        this.curDSLevel.pop();\n        this.setViewDataSource(this.getSubDS());\n        var toUL = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        var fromUL = this.curUL;\n        if (!toUL) {\n            this.createList();\n            this.renderIntoDom(this.ulElement);\n            toUL = this.curUL;\n        }\n        else {\n            toUL = toUL.parentElement;\n        }\n        var fieldData = getFieldValues(this.curDSJSON, this.listBaseOption.fields);\n        var text = fieldData[this.fields.text];\n        this.switchView(fromUL, toUL, true);\n        this.removeFocus();\n        var li = this.element.querySelector('[data-uid=\\'' + pID + '\\']');\n        li.classList.add(classNames.focused);\n        if (this.showCheckBox && li.querySelector('.' + classNames.checkboxIcon).classList.contains(classNames.checked)) {\n            li.setAttribute('aria-selected', 'true');\n        }\n        else {\n            li.classList.remove(classNames.selected);\n            li.setAttribute('aria-selected', 'false');\n        }\n        this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n        if (this.enableHtmlSanitizer) {\n            this.setProperties({ headerTitle: SanitizeHtmlHelper.sanitize(this.headerTitle) }, true);\n        }\n        this.header((this.curDSLevel.length ? text : this.headerTitle), (this.curDSLevel.length ? true : false));\n    };\n    /**\n     * It is used to select the list item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.selectItem = function (obj) {\n        if (this.enableVirtualization) {\n            this.virtualizationModule.selectItem(obj);\n        }\n        else if (this.showCheckBox) {\n            this.setCheckboxLI(this.getLiFromObjOrElement(obj));\n        }\n        else {\n            isNullOrUndefined(obj) ? this.removeSelect() : this.setSelectLI(this.getLiFromObjOrElement(obj));\n        }\n    };\n    ListView.prototype.getLiFromObjOrElement = function (obj) {\n        var li;\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (!isNullOrUndefined(obj)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                if (obj instanceof Element) {\n                    var uid = obj.getAttribute('data-uid').toString();\n                    for (var i = 0; i < this.liCollection.length; i++) {\n                        if (this.liCollection[i].getAttribute('data-uid').toString() === uid) {\n                            li = this.liCollection[i];\n                            break;\n                        }\n                    }\n                }\n                else {\n                    Array.prototype.some.call(this.curUL.querySelectorAll('.' + classNames.listItem), function (item) {\n                        if (item.innerText.trim() === obj.toString()) {\n                            li = item;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                }\n            }\n            else {\n                var resultJSON = this.getItemData(obj);\n                var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n                if (resultJSON) {\n                    li = this.element.querySelector('[data-uid=\"'\n                        + fieldData[this.fields.id] + '\"]');\n                    if (!this.enableVirtualization && isNullOrUndefined(li)) {\n                        var curLi = this.element.querySelectorAll('.' + classNames.listItem);\n                        for (var i = 0; i < curLi.length; i++) {\n                            if (curLi[i].innerText.trim() === fieldData[this.fields.text]) {\n                                li = curLi[i];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return li;\n    };\n    /**\n     * It is used to select multiple list item from the ListView.\n     * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.selectMultipleItems = function (obj) {\n        if (!isNullOrUndefined(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (!isNullOrUndefined(obj[i])) {\n                    this.selectItem(obj[i]);\n                }\n            }\n        }\n    };\n    ListView.prototype.getParentId = function () {\n        var parentId = [];\n        if (this.isNestedList) {\n            for (var i = this.curDSLevel.length - 1; i >= 0; i--) {\n                parentId.push(this.curDSLevel[i]);\n            }\n        }\n        return parentId;\n    };\n    /**\n     * It is used to get the currently [here](./api-selectedItem)\n     *  item details from the list items.\n     * @blazorType ListSelectedItem<TValue>\n     */\n    ListView.prototype.getSelectedItems = function () {\n        // tslint:disable-next-line:no-any\n        var finalValue;\n        var isCompleted = false;\n        this.selectedId = [];\n        var dataSource = this.dataSource instanceof DataManager ?\n            this.localData : this.dataSource;\n        if (this.enableVirtualization && !isCompleted) {\n            finalValue = this.virtualizationModule.getSelectedItems();\n            isCompleted = true;\n        }\n        else if (this.showCheckBox && !isCompleted) {\n            // tslint:disable-next-line:no-any\n            var liCollection = this.curUL.getElementsByClassName(classNames.selected);\n            var liTextCollection = [];\n            var liDataCollection = [];\n            this.selectedId = [];\n            var dataParent = [];\n            for (var i = 0; i < liCollection.length; i++) {\n                if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                    liTextCollection.push(liCollection[i].innerText.trim());\n                }\n                else {\n                    var tempData = this.getItemData(liCollection[i]);\n                    var fieldData = getFieldValues(tempData, this.listBaseOption.fields);\n                    if (this.isNestedList) {\n                        dataParent.push({ data: tempData, parentId: this.getParentId() });\n                    }\n                    else {\n                        liDataCollection.push(tempData);\n                    }\n                    if (fieldData) {\n                        liTextCollection.push(fieldData[this.listBaseOption.fields.text]);\n                        this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    }\n                    else {\n                        liTextCollection.push(undefined);\n                        this.selectedId.push(undefined);\n                    }\n                }\n            }\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = { item: liCollection, data: dataSource, text: liTextCollection };\n                isCompleted = true;\n            }\n            if (this.isNestedList && !isCompleted) {\n                finalValue = { item: liCollection, data: dataParent, text: liTextCollection };\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                finalValue = { item: liCollection, data: liDataCollection, text: liTextCollection };\n                isCompleted = true;\n            }\n        }\n        else if (!isCompleted) {\n            var liElement = this.element.getElementsByClassName(classNames.selected)[0];\n            var fieldData = getFieldValues(this.getItemData(liElement), this.listBaseOption.fields);\n            if ((typeof dataSource[0] === 'string'\n                || typeof dataSource[0] === 'number')\n                && !isCompleted) {\n                finalValue = (!isNullOrUndefined(liElement)) ? {\n                    item: liElement, data: dataSource,\n                    text: liElement.innerText.trim()\n                } : undefined;\n                isCompleted = true;\n            }\n            else if (!isCompleted) {\n                if (isNullOrUndefined(fieldData) || isNullOrUndefined(liElement)) {\n                    finalValue = undefined;\n                    isCompleted = true;\n                }\n                else {\n                    this.selectedId.push(fieldData[this.listBaseOption.fields.id]);\n                    finalValue = {\n                        text: fieldData[this.listBaseOption.fields.text], item: liElement,\n                        data: this.getItemData(liElement)\n                    };\n                    isCompleted = true;\n                }\n            }\n        }\n        if (isBlazor()) {\n            // tslint:disable-next-line:no-any\n            return this.blazorGetSelectedItems(finalValue);\n        }\n        else {\n            return finalValue;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    ListView.prototype.blazorGetSelectedItems = function (finalGetSelectedItem) {\n        var blazorSelectedItem = {\n            data: [],\n            index: [],\n            parentId: [],\n            text: []\n        };\n        if (!isNullOrUndefined(finalGetSelectedItem)) {\n            if (!isNullOrUndefined(finalGetSelectedItem.data)) {\n                if (this.showCheckBox && this.isNestedList) {\n                    finalGetSelectedItem.data.forEach(function (currentData) {\n                        blazorSelectedItem.data.push(currentData.data);\n                    });\n                    if (!isNullOrUndefined(finalGetSelectedItem.data[0])\n                        && !isNullOrUndefined(finalGetSelectedItem.data[0].parentId)) {\n                        blazorSelectedItem.parentId = finalGetSelectedItem.data[0].parentId;\n                    }\n                }\n                else {\n                    blazorSelectedItem.data = this.convertItemsToArray(finalGetSelectedItem.data);\n                }\n            }\n            if (!isNullOrUndefined(finalGetSelectedItem.text)) {\n                blazorSelectedItem.text = this.convertItemsToArray(finalGetSelectedItem.text);\n            }\n            if (!isNullOrUndefined(finalGetSelectedItem.index)) {\n                blazorSelectedItem.index = this.convertItemsToArray(finalGetSelectedItem.index);\n            }\n        }\n        return blazorSelectedItem;\n    };\n    // tslint:disable-next-line:no-any\n    ListView.prototype.convertItemsToArray = function (items) {\n        return Array.isArray(items) ? items.slice() : [items];\n    };\n    /**\n     * It is used to find out an item details from the current list.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     * @blazorType TValue\n     */\n    ListView.prototype.findItem = function (obj) {\n        return this.getItemData(obj);\n    };\n    /**\n     * A function that used to enable the disabled list items based on passed element.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.enableItem = function (obj) {\n        this.setItemState(obj, true);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.enableItem(obj);\n        }\n    };\n    /**\n     * It is used to disable the list items based on passed element.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.disableItem = function (obj) {\n        this.setItemState(obj, false);\n        if (this.enableVirtualization) {\n            this.virtualizationModule.disableItem(obj);\n        }\n    };\n    //A function that used to set state of the list item like enable, disable.\n    ListView.prototype.setItemState = function (obj, isEnable) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (isEnable) {\n                if (li) {\n                    li.classList.remove(classNames.disable);\n                }\n                delete resultJSON[this.fields.enabled];\n            }\n            else if (!isEnable) {\n                if (li) {\n                    li.classList.add(classNames.disable);\n                }\n                resultJSON[this.fields.enabled] = false;\n            }\n        }\n    };\n    /**\n     * It is used to show an list item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.showItem = function (obj) {\n        this.showHideItem(obj, false, '');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.showItem(obj);\n        }\n    };\n    /**\n     * It is used to hide an item from the ListView.\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.hideItem = function (obj) {\n        this.showHideItem(obj, true, 'none');\n        if (this.enableVirtualization) {\n            this.virtualizationModule.hideItem(obj);\n        }\n    };\n    ListView.prototype.showHideItem = function (obj, isHide, display) {\n        var resultJSON = this.getItemData(obj);\n        var fieldData = getFieldValues(resultJSON, this.listBaseOption.fields);\n        if (resultJSON) {\n            var li = this.element.querySelector('[data-uid=\"' + fieldData[this.fields.id] + '\"]');\n            if (li) {\n                li.style.display = display;\n            }\n            if (isHide) {\n                resultJSON[this.fields.isVisible] = false;\n            }\n            else {\n                delete resultJSON[this.fields.isVisible];\n            }\n        }\n    };\n    /**\n     * It adds new item(s) to current ListView.\n     * To add a new item(s) in the listview, we need to pass `data` as array of items that needs\n     * to be added and `fields` as the target item to which we need to add the given item(s) as its children.\n     * For example fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {{[key:string]:Object}[]} data - JSON Array Data that need to add.\n     * @param  {Fields} fields - Target item to add the given data as its children (can be null).\n     * @blazorArgsType data|List<TValue>,fields|TValue\n     */\n    ListView.prototype.addItem = function (data, fields) {\n        if (fields === void 0) { fields = undefined; }\n        var dataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        this.addItemInternally(data, fields, dataSource);\n    };\n    ListView.prototype.addItemInternally = function (data, fields, dataSource) {\n        var _this = this;\n        if (data instanceof Array) {\n            if (this.enableVirtualization) {\n                this.virtualizationModule.addItem(data, fields, dataSource);\n            }\n            else {\n                var ds = this.findItemFromDS(dataSource, fields);\n                var child = void 0;\n                if (ds) {\n                    var fieldData = getFieldValues(ds, this.listBaseOption.fields);\n                    child = fieldData[this.fields.child];\n                    if (!child) {\n                        child = [];\n                    }\n                    child = child.concat(data);\n                }\n                // check for whether target is nested level or top level in list\n                if (ds instanceof Array) {\n                    data.forEach(function (currentItem) {\n                        dataSource.push(currentItem);\n                        _this.setViewDataSource(dataSource);\n                        // since it is top level target, get the content container's first child\n                        // as it is always the top level UL\n                        var targetUL = _this.contentContainer\n                            ? _this.contentContainer.children[0]\n                            : null;\n                        // check for whether the list was previously empty or not, if it is\n                        // proceed to call initial render\n                        if (_this.contentContainer && targetUL) {\n                            _this.addItemIntoDom(currentItem, targetUL, _this.curViewDS);\n                        }\n                        else {\n                            _this.reRender();\n                        }\n                    });\n                    if (this.curUL) {\n                        this.updateBlazorTemplates(true);\n                    }\n                    this.liCollection = this.curUL.querySelectorAll('.' + classNames.listItem);\n                }\n                else {\n                    // proceed as target item is in nested level, only if it is a valid target ds\n                    if (ds) {\n                        ds[this.fields.child] = child;\n                        this.addItemInNestedList(ds, data);\n                    }\n                }\n            }\n        }\n    };\n    ListView.prototype.addItemInNestedList = function (targetItemData, itemQueue) {\n        var _this = this;\n        var targetItemId = targetItemData[this.fields.id];\n        var targetChildDS = targetItemData[this.fields.child];\n        var isAlreadyRenderedUL = this.element.querySelector('[pid=\\'' + targetItemId + '\\']');\n        var targetLi = this.element.querySelector('[data-uid=\\'' + targetItemId + '\\']');\n        var targetUL = isAlreadyRenderedUL\n            ? isAlreadyRenderedUL\n            : targetLi\n                ? closest(targetLi, 'ul')\n                : null;\n        var targetDS = isAlreadyRenderedUL ? targetChildDS : [targetItemData];\n        var isTargetEmptyChild = targetLi ? !targetLi.classList.contains(classNames.hasChild) : false;\n        var isRefreshTemplateNeeded = false;\n        // if li element is already rendered, that element needs to be refreshed so that\n        // it becomes child viewable due to new child items are added now\n        if (isTargetEmptyChild) {\n            var targetRefreshedElement = ListBase.createListItemFromJson(this.createElement, targetDS, this.listBaseOption);\n            this.setAttributes(targetRefreshedElement);\n            targetUL.insertBefore(targetRefreshedElement[0], targetLi);\n            detach(targetLi);\n            isRefreshTemplateNeeded = true;\n        }\n        // if it is already rendered element, we need to create and append new elements\n        if (isAlreadyRenderedUL && itemQueue) {\n            itemQueue.forEach(function (currentItem) {\n                targetDS.push(currentItem);\n                _this.addItemIntoDom(currentItem, targetUL, targetDS);\n            });\n            isRefreshTemplateNeeded = true;\n        }\n        if (isRefreshTemplateNeeded) {\n            this.updateBlazorTemplates(true);\n        }\n    };\n    ListView.prototype.addItemIntoDom = function (currentItem, targetUL, curViewDS) {\n        var index = curViewDS.indexOf(currentItem);\n        this.addListItem(currentItem, index, targetUL, curViewDS);\n        var curItemDS = curViewDS[index - 1];\n        if (curItemDS && curItemDS.isHeader && curItemDS.items.length === 1) {\n            this.addListItem(curItemDS, (index - 1), targetUL, curViewDS);\n        }\n    };\n    ListView.prototype.addListItem = function (dataSource, index, ulElement, curViewDS) {\n        var target = this.getLiFromObjOrElement(curViewDS[index + 1]) ||\n            this.getLiFromObjOrElement(curViewDS[index + 2]) || null;\n        var li = ListBase.createListItemFromJson(this.createElement, [dataSource], this.listBaseOption);\n        this.setAttributes(li);\n        ulElement.insertBefore(li[0], target);\n    };\n    /**\n     * A function that removes the item from data source based on passed element like fields: { text: 'Name', tooltip: 'Name', id:'id'}\n     * @param  {Fields | HTMLElement | Element} obj - We can pass element Object or Fields as Object with ID and Text fields.\n     */\n    ListView.prototype.removeItem = function (obj) {\n        var listDataSource = this.dataSource instanceof DataManager\n            ? this.localData : this.dataSource;\n        if (this.enableVirtualization) {\n            this.virtualizationModule.removeItem(obj);\n        }\n        else {\n            this.removeItemFromList(obj, listDataSource);\n            this.updateBlazorTemplates(true);\n        }\n    };\n    ListView.prototype.removeItemFromList = function (obj, listDataSource) {\n        var _this = this;\n        var curViewDS = this.curViewDS;\n        var fields = obj instanceof Element ? this.getElementUID(obj) : obj;\n        var dataSource;\n        dataSource = this.findItemFromDS(listDataSource, fields, true);\n        if (dataSource) {\n            var data_1;\n            data_1 = this.findItemFromDS(dataSource, fields);\n            var index = curViewDS.indexOf(data_1);\n            var li = this.getLiFromObjOrElement(obj);\n            var groupLi = void 0;\n            this.validateNestedView(li);\n            if (this.fields.groupBy && this.curViewDS[index - 1] &&\n                curViewDS[index - 1].isHeader &&\n                curViewDS[index - 1].items.length === 1) {\n                if (li && li.previousElementSibling.classList.contains(classNames.groupListItem) &&\n                    (isNullOrUndefined(li.nextElementSibling) || (li.nextElementSibling &&\n                        li.nextElementSibling.classList.contains(classNames.groupListItem)))) {\n                    groupLi = li.previousElementSibling;\n                }\n            }\n            if (li) {\n                detach(li);\n            }\n            if (groupLi) {\n                detach(groupLi);\n            }\n            // tslint:disable-next-line:no-any\n            var foundData = (dataSource.length - 1) <= 0\n                ? this.findParent(this.localData, this.fields.id, function (value) { return value === data_1[_this.fields.id]; }, null) : null;\n            var dsIndex = dataSource.indexOf(data_1);\n            dataSource.splice(dsIndex, 1);\n            this.setViewDataSource(listDataSource);\n            if (foundData\n                && foundData.parent\n                && Array.isArray(foundData.parent[this.fields.child])\n                && foundData.parent[this.fields.child].length <= 0) {\n                var parentLi = this.getLiFromObjOrElement(foundData.parent);\n                if (parentLi) {\n                    var li_1 = ListBase.createListItemFromJson(this.createElement, [foundData.parent], this.listBaseOption);\n                    this.setAttributes(li_1);\n                    parentLi.parentElement.insertBefore(li_1[0], parentLi);\n                    parentLi.parentElement.removeChild(parentLi);\n                }\n            }\n            if (dataSource.length <= 0) {\n                this.back();\n            }\n            this.liCollection = Array.prototype.slice.call(this.element.querySelectorAll('.' + classNames.listItem));\n        }\n    };\n    // validate before removing an element whether the current view is inside target element's child view\n    ListView.prototype.validateNestedView = function (li) {\n        var liID = li ? li.getAttribute('data-uid').toString().toLowerCase() : null;\n        if (liID && this.curDSLevel && this.curDSLevel.length > 0) {\n            while (this.curDSLevel.some(function (id) { return id.toString().toLowerCase() === liID; })) {\n                this.back();\n            }\n        }\n    };\n    /**\n     * A function that removes multiple item from list view based on given input.\n     * @param  {Fields[] | HTMLElement[] | Element[]} obj - We can pass array of elements or array of field Object with ID and Text fields.\n     */\n    ListView.prototype.removeMultipleItems = function (obj) {\n        if (obj.length) {\n            for (var i = 0; i < obj.length; i++) {\n                this.removeItem(obj[i]);\n            }\n            this.updateBlazorTemplates(true);\n        }\n    };\n    // tslint:disable-next-line:no-any\n    ListView.prototype.findParent = function (dataSource, id, callback, parent) {\n        if (dataSource.hasOwnProperty(id) && callback(dataSource[id]) === true) {\n            return extend({}, dataSource);\n        }\n        for (var i = 0; i < Object.keys(dataSource).length; i++) {\n            if (dataSource[Object.keys(dataSource)[i]]\n                && typeof dataSource[Object.keys(dataSource)[i]] === 'object') {\n                // tslint:disable-next-line:no-any\n                var result = this.findParent(dataSource[Object.keys(dataSource)[i]], id, callback, dataSource);\n                if (result != null) {\n                    if (!result.parent) {\n                        result.parent = parent;\n                    }\n                    return result;\n                }\n            }\n        }\n        return null;\n    };\n    // Module Required function\n    ListView.prototype.getModuleName = function () {\n        return 'listview';\n    };\n    ListView.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.enableVirtualization) {\n            modules.push({ args: [this], member: 'virtualization' });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     */\n    ListView.prototype.getPersistData = function () {\n        return this.addOnPersist(['cssClass', 'enableRtl', 'htmlAttributes',\n            'enable', 'fields', 'animation', 'headerTitle',\n            'sortOrder', 'showIcon', 'height', 'width', 'showCheckBox', 'checkBoxPosition']);\n    };\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property({})\n    ], ListView.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(true)\n    ], ListView.prototype, \"enable\", void 0);\n    __decorate([\n        Property([])\n    ], ListView.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], ListView.prototype, \"query\", void 0);\n    __decorate([\n        Complex(ListBase.defaultMappedFields, FieldSettings)\n    ], ListView.prototype, \"fields\", void 0);\n    __decorate([\n        Property({ effect: 'SlideLeft', duration: 400, easing: 'ease' })\n    ], ListView.prototype, \"animation\", void 0);\n    __decorate([\n        Property('None')\n    ], ListView.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showCheckBox\", void 0);\n    __decorate([\n        Property('Left')\n    ], ListView.prototype, \"checkBoxPosition\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"headerTitle\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], ListView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], ListView.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], ListView.prototype, \"groupTemplate\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], ListView.prototype, \"actionFailure\", void 0);\n    ListView = __decorate([\n        NotifyPropertyChanges\n    ], ListView);\n    return ListView;\n}(Component));\nexport { ListView };\n"]},"metadata":{},"sourceType":"module"}