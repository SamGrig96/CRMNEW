{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\content\\\\message-list\\\\MessageList.jsx\";\nimport React, { PureComponent } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport MessageRow from \"./message-row/MessageRow\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\nimport ListFooter from \"./list-footer/ListFooter\";\nimport \"./messageList.scss\";\nconst ViewMode = {\n  LIST: 1,\n  CONTENT: 2,\n  EDIT: 3\n};\nexport class MessageList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewMode: ViewMode.LIST,\n      contentMessageId: undefined,\n      currentLabel: \"\"\n    };\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.renderView = this.renderView.bind(this);\n    this.renderMessages = this.renderMessages.bind(this);\n  }\n\n  componentDidMount() {\n    const searchParam = this.props.location.search;\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\n      this.props.addInitialPageToken(token);\n    }\n\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n    this.props.getLabelMessages({ ...(labelIds && {\n        labelIds\n      }),\n      pageToken: token\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location.search !== this.props.location.search) {\n      const searchParam = this.props.location.search;\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\n      this.props.getLabelMessages({ ...(labelIds && {\n          labelIds\n        }),\n        pageToken: token\n      });\n    }\n  }\n\n  onSelectionChange(selected, msgId) {\n    this.props.toggleSelected([msgId], selected);\n  }\n\n  renderSpinner() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex h-100 justify-content-center align-items-center  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSpinner,\n      spin: true,\n      size: \"5x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderMessages() {\n    if (this.props.messagesResult.loading) {\n      return this.renderSpinner();\n    } else if (this.props.messagesResult.messages.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-4 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"There are no messages with this label.\");\n    }\n\n    return this.props.messagesResult.messages.map(el => {\n      return /*#__PURE__*/React.createElement(MessageRow, {\n        data: el,\n        key: el.id,\n        onSelectionChange: this.onSelectionChange,\n        onClick: this.getMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  renderView() {\n    const {\n      viewMode\n    } = this.state;\n\n    switch (viewMode) {\n      case ViewMode.EDIT:\n        return this.renderEditView();\n\n      default:\n        return this.renderMessages();\n    }\n  }\n\n  getPageTokens() {\n    if (this.props.messagesResult.loading) {\n      return {\n        nextToken: null,\n        prevToken: null\n      };\n    }\n\n    const {\n      messagesResult,\n      location\n    } = this.props;\n    const pathname = location.pathname;\n    let prevToken;\n    let nextToken = messagesResult.nextPageToken;\n    const searchParam = location.search;\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\n\n    if (currentToken) {\n      const tokenIndex = messagesResult.pageTokens.indexOf(currentToken);\n\n      if (tokenIndex > -1) {\n        nextToken = messagesResult.pageTokens[tokenIndex + 1];\n        prevToken = messagesResult.pageTokens[tokenIndex - 1];\n\n        if (!prevToken) {\n          if (tokenIndex > 0) {}\n        }\n\n        prevToken = prevToken ? `${pathname}?${prevToken}` : pathname;\n      } else {\n        prevToken = pathname;\n      }\n    }\n\n    nextToken = nextToken ? `${pathname}?${nextToken}` : null;\n    return {\n      nextToken,\n      prevToken\n    };\n  }\n\n  render() {\n    const {\n      messagesResult\n    } = this.props;\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\n    const {\n      nextToken,\n      prevToken\n    } = this.getPageTokens();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListToolbar, {\n      nextToken: nextToken,\n      prevToken: prevToken,\n      navigateToNextPage: this.props.navigateToNextPage,\n      navigateToPrevPage: this.props.navigateToPrevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      className: \"container-fluid no-gutters px-0 message-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, this.renderView()), /*#__PURE__*/React.createElement(ListFooter, {\n      messagesTotal: messagesTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nexport default MessageList;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/content/message-list/MessageList.jsx"],"names":["React","PureComponent","PerfectScrollbar","MessageRow","FontAwesomeIcon","faSpinner","ListToolbar","ListFooter","ViewMode","LIST","CONTENT","EDIT","MessageList","constructor","props","state","viewMode","contentMessageId","undefined","currentLabel","onSelectionChange","bind","renderView","renderMessages","componentDidMount","searchParam","location","search","token","indexOf","slice","messagesResult","pageTokens","length","addInitialPageToken","labelIds","searchQuery","parentLabel","id","getLabelMessages","pageToken","componentDidUpdate","prevProps","prevState","selected","msgId","toggleSelected","renderSpinner","loading","messages","map","el","getMessage","renderEditView","getPageTokens","nextToken","prevToken","pathname","nextPageToken","currentToken","tokenIndex","render","messagesTotal","label","result","navigateToNextPage","navigateToPrevPage"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport MessageRow from \"./message-row/MessageRow\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport ListToolbar from \"./list-toolbar/ListToolbar\";\r\nimport ListFooter from \"./list-footer/ListFooter\";\r\n\r\nimport \"./messageList.scss\";\r\n\r\nconst ViewMode = {\r\n  LIST: 1,\r\n  CONTENT: 2,\r\n  EDIT: 3\r\n};\r\n\r\nexport class MessageList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewMode: ViewMode.LIST,\r\n      contentMessageId: undefined,\r\n      currentLabel: \"\"\r\n    };\r\n\r\n    this.onSelectionChange = this.onSelectionChange.bind(this);\r\n    this.renderView = this.renderView.bind(this);\r\n    this.renderMessages = this.renderMessages.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchParam = this.props.location.search;\r\n    const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n    if (token && this.props.messagesResult.pageTokens.length === 0) {\r\n      this.props.addInitialPageToken(token);\r\n    }\r\n\r\n    const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n    this.props.getLabelMessages({\r\n      ...labelIds && {labelIds},\r\n      pageToken: token\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n      const searchParam = this.props.location.search;\r\n      const token = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n\r\n      const labelIds = this.props.searchQuery === \"\" ? [this.props.parentLabel.id] : undefined;\r\n\r\n      this.props.getLabelMessages({\r\n        ...labelIds && {labelIds},\r\n        pageToken: token\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onSelectionChange(selected, msgId) {\r\n    this.props.toggleSelected([msgId], selected);\r\n  }\r\n  \r\n\r\n  renderSpinner() {\r\n    return (\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center  \">\r\n        <FontAwesomeIcon icon={faSpinner} spin size=\"5x\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMessages() {\r\n    if (this.props.messagesResult.loading) {\r\n      return this.renderSpinner();\r\n    } else if (this.props.messagesResult.messages.length === 0) {\r\n      return (\r\n        <div className=\"p-4 text-center\">\r\n          There are no messages with this label.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.messagesResult.messages.map(el => {\r\n      return (\r\n        <MessageRow\r\n          data={el}\r\n          key={el.id}\r\n          onSelectionChange={this.onSelectionChange}\r\n          onClick={this.getMessage}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  renderView() {\r\n    const { viewMode } = this.state;\r\n\r\n    switch (viewMode) {\r\n\r\n      case ViewMode.EDIT:\r\n        return this.renderEditView();\r\n\r\n      default:\r\n        return this.renderMessages();\r\n    }\r\n  }\r\n\r\n  getPageTokens() {\r\n    if (this.props.messagesResult.loading) {\r\n      return { nextToken: null, prevToken: null }\r\n    }\r\n    const { messagesResult, location } = this.props;\r\n    const pathname = location.pathname;\r\n    let prevToken;\r\n    let nextToken = messagesResult.nextPageToken;\r\n    const searchParam = location.search;\r\n    const currentToken = searchParam.indexOf(\"?\") === 0 ? searchParam.slice(1) : null;\r\n    if (currentToken) {\r\n      const tokenIndex = messagesResult.pageTokens.indexOf(currentToken);\r\n      if (tokenIndex > -1) {\r\n        nextToken = messagesResult.pageTokens[tokenIndex + 1];\r\n        prevToken = messagesResult.pageTokens[tokenIndex - 1];\r\n        if (!prevToken) {\r\n          if (tokenIndex > 0) {\r\n          }\r\n        }\r\n        prevToken = prevToken ? `${pathname}?${prevToken}` : pathname;\r\n      }\r\n      else {\r\n        prevToken = pathname;\r\n      }\r\n    }\r\n    nextToken = nextToken ? `${pathname}?${nextToken}` : null;\r\n    return { nextToken, prevToken };\r\n  }\r\n\r\n  render() {\r\n    const { messagesResult } = this.props;\r\n    const messagesTotal = messagesResult.label ? messagesResult.label.result.messagesTotal : 0;\r\n    const { nextToken, prevToken } = this.getPageTokens();    \r\n    return (\r\n      <React.Fragment>\r\n        <ListToolbar\r\n          nextToken={nextToken}\r\n          prevToken={prevToken}\r\n          navigateToNextPage={this.props.navigateToNextPage}\r\n          navigateToPrevPage={this.props.navigateToPrevPage}\r\n        />\r\n        <PerfectScrollbar className=\"container-fluid no-gutters px-0 message-list-container\">\r\n          {this.renderView()}\r\n        </PerfectScrollbar>\r\n        <ListFooter messagesTotal={messagesTotal} />\r\n      </React.Fragment>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}