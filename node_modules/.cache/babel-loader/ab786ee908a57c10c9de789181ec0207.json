{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\nconst defaultLabelState = {\n  labels: []\n};\nexport const labelsResult = (state = defaultLabelState, action) => {\n  switch (action.type) {\n    case GET_LABELS:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        labels: action.payload\n      });\n\n    case SELECT_LABEL:\n      return _objectSpread({}, state, {\n        labels: state.labels.map(el => {\n          if (el.id === action.payload) {\n            return _objectSpread({}, el, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, el, {\n            selected: false\n          });\n        })\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/sidebar/sidebar.reducers.jsx"],"names":["GET_LABELS","SELECT_LABEL","defaultLabelState","labels","labelsResult","state","action","type","console","log","payload","map","el","id","selected"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,mBAAzC;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,MAAM,EAAE;AADc,CAA1B;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,iBAAT,EAA4BI,MAA5B,KAAuC;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,UAAL;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACE,+BACKL,KADL;AAEEF,QAAAA,MAAM,EAAEG,MAAM,CAACI;AAFjB;;AAIF,SAAKT,YAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaQ,GAAb,CAAiBC,EAAE,IAAI;AAC7B,cAAIA,EAAE,CAACC,EAAH,KAAUP,MAAM,CAACI,OAArB,EAA8B;AAC5B,qCACKE,EADL;AAEEE,cAAAA,QAAQ,EAAE;AAFZ;AAID;;AACD,mCACKF,EADL;AAEEE,YAAAA,QAAQ,EAAE;AAFZ;AAID,SAXO;AAFV;;AAeF;AACE,aAAOT,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["import { GET_LABELS, SELECT_LABEL } from \"./sidebar.actions\";\r\n\r\nconst defaultLabelState = {\r\n    labels: []\r\n}\r\n\r\nexport const labelsResult = (state = defaultLabelState, action) => {\r\n  switch (action.type) {\r\n    case GET_LABELS:\r\n    console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        labels: action.payload\r\n      };\r\n    case SELECT_LABEL:\r\n      return {\r\n        ...state, \r\n        labels: state.labels.map(el => {\r\n          if (el.id === action.payload) {\r\n            return {\r\n              ...el, \r\n              selected: true\r\n            }\r\n          }\r\n          return {\r\n            ...el, \r\n            selected: false\r\n          };\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}