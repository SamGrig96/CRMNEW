{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\common\\\\Checkbox.jsx\";\nimport React, { PureComponent } from 'react';\nimport './checkbox.scss';\nexport class Checkbox extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: !!props.checked\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.checked !== this.props.checked) {\n      this.setState({\n        isChecked: this.props.checked\n      });\n    }\n  }\n\n  onChange(evt) {\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n    this.props.onChange(evt);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control fill-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      checked: this.state.isChecked,\n      type: \"checkbox\",\n      onChange: this.props.onChange,\n      className: \"fill-control-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fill-control-indicator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), this.props.label ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fill-control-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, this.props.label) : null);\n  }\n\n}\nexport default Checkbox;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/common/Checkbox.jsx"],"names":["React","PureComponent","Checkbox","constructor","props","state","isChecked","checked","onChange","bind","componentDidUpdate","prevProps","setState","evt","render","label"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAO,iBAAP;AAEA,OAAO,MAAMC,QAAN,SAAuBD,aAAvB,CAAqC;AAE1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CAAC,CAACF,KAAK,CAACG;AADR,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACJ,OAAV,KAAsB,KAAKH,KAAL,CAAWG,OAArC,EAA8C;AAC5C,WAAKK,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG;AADV,OAAd;AAGD;AACF;;AAEDC,EAAAA,QAAQ,CAACK,GAAD,EAAM;AACZ,SAAKD,QAAL,CAAc;AACZN,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,KAAd;AAGA,SAAKF,KAAL,CAAWI,QAAX,CAAoBK,GAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,SAAS,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWC,SAA3B;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWI,QAFvB;AAGE,MAAA,SAAS,EAAC,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAQI,KAAKJ,KAAL,CAAWW,KAAX,gBACE;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKX,KAAL,CAAWW,KADb,CADF,GAII,IAZR,CADF;AAiBD;;AA7CyC;AAgD5C,eAAeb,QAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport './checkbox.scss';\r\n\r\nexport class Checkbox extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isChecked: !!props.checked\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.checked !== this.props.checked) {\r\n      this.setState({\r\n        isChecked: this.props.checked\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange(evt) {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked\r\n    })\r\n    this.props.onChange(evt);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"custom-control fill-checkbox\">\r\n        <input checked={this.state.isChecked} \r\n          type=\"checkbox\" \r\n          onChange={this.props.onChange} \r\n          className=\"fill-control-input\" \r\n        />\r\n        <span className=\"fill-control-indicator\" />\r\n        {\r\n          this.props.label ? (\r\n            <span className=\"fill-control-description\">\r\n             {this.props.label}\r\n            </span>\r\n          ) : null\r\n        }\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}