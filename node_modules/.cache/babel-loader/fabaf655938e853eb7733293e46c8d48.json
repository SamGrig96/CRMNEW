{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grigo\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\CRM\\\\src\\\\components\\\\confirmpass\\\\confirmpass.js\";\nimport React from 'react';\nimport './confirmpass.css';\nimport axios from 'axios';\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport { FaKey } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\n\nclass ConfirmPass extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = (e, id) => {\n      this.setState({\n        error: ''\n      });\n      let value = e.currentTarget.value;\n      let inputs = this.state.inputs;\n      let input = inputs[id];\n      input.value = value;\n      input.isTuched = true;\n      Object.keys(input.validation).map((elm, index) => {\n        if (elm === \"required\") {\n          if (value === \"\" || value == null) {\n            input.isValid = false;\n          } else {\n            input.isValid = true;\n          }\n        }\n      });\n    };\n\n    this.confirm = () => {\n      let newpass = this.state.inputs[0].value;\n      let confirmpass = this.state.inputs[1].value;\n\n      if (newpass === confirmpass) {\n        axios.post(' https://voice44.herokuapp.com/api/forgotPass/forgotpass', {\n          newpass\n        }).then(res => {\n          window.location.href = '/react/crmsystem-contact-calendars-autoresponder/build/confrimpass';\n        }).catch(err => {\n          console.log(err, \"errr\");\n        });\n      } else {\n        this.setState({\n          error: \"incorect password!\"\n        });\n      }\n    };\n\n    this.state = {\n      inputs: [{\n        value: \"\",\n        isTuched: false,\n        isValid: false,\n        validation: {\n          required: true\n        }\n      }, {\n        value: \"\",\n        isTuched: false,\n        isValid: false,\n        validation: {\n          required: true\n        }\n      }],\n      error: \"\",\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        redirect: !this.state.redirect\n      });\n    }, 100000);\n  }\n\n  render() {\n    let redirect = this.state.redirect;\n\n    if (redirect) {\n      return React.createElement(\"div\", {\n        className: \"confirmpass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Your password has been sent to your email\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Please check your email\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(FaKey, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: e => this.handleChange(e, 0),\n        placeholder: \"Enter new password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(FaKey, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: e => this.handleChange(e, 1),\n        placeholder: \"Confrim Your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"pass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" Confirm\")));\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default ConfirmPass;","map":{"version":3,"sources":["C:/Users/grigo/OneDrive/Рабочий стол/CRM/src/components/confirmpass/confirmpass.js"],"names":["React","axios","BrowserRouter","Link","FaKey","Redirect","ConfirmPass","Component","constructor","handleChange","e","id","setState","error","value","currentTarget","inputs","state","input","isTuched","Object","keys","validation","map","elm","index","isValid","confirm","newpass","confirmpass","post","then","res","window","location","href","catch","err","console","log","required","redirect","componentDidMount","setTimeout","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './confirmpass.css'\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Link} from \"react-router-dom\";\r\nimport {FaKey} from 'react-icons/fa'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass ConfirmPass extends React.Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n        inputs: [\r\n            \r\n            {\r\n                value: \"\",\r\n                isTuched: false,\r\n                isValid: false,\r\n                validation: {\r\n                    required: true,\r\n\r\n                }\r\n            },\r\n            {\r\n                value: \"\",\r\n                isTuched: false,\r\n                isValid: false,\r\n                validation: {\r\n                    required: true,\r\n\r\n                }\r\n            },\r\n        ],\r\n        error: \"\",\r\n        redirect:false\r\n    }\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n    setTimeout(() => { this.setState({ redirect: !this.state.redirect }) }, 100000);\r\n}\r\n\r\nhandleChange = (e, id) => {\r\n    this.setState({ error: '' })\r\n    let value = e.currentTarget.value\r\n    let inputs = this.state.inputs\r\n    let input = inputs[id]\r\n    input.value = value\r\n    input.isTuched = true\r\n    Object.keys(input.validation).map((elm, index) => {\r\n        if (elm === \"required\") {\r\n            if (value === \"\" || value == null) {\r\n                input.isValid = false;\r\n            } else {\r\n                input.isValid = true\r\n            }\r\n\r\n        } \r\n    })\r\n}\r\n\r\n confirm=()=>{\r\n\r\n    let newpass = this.state.inputs[0].value\r\n    let confirmpass = this.state.inputs[1].value\r\n    if( newpass === confirmpass){\r\n        axios.post(' https://voice44.herokuapp.com/api/forgotPass/forgotpass',{newpass})\r\n        .then(res=>{\r\n            window.location.href='/react/crmsystem-contact-calendars-autoresponder/build/confrimpass'\r\n        }).catch(err=>{\r\n            console.log(err,\"errr\");\r\n            \r\n        })\r\n    }else{\r\n        this.setState({error:\"incorect password!\"})\r\n    }\r\n }\r\n\r\nrender(){\r\n    let redirect=this.state.redirect\r\n    if(redirect){\r\n        return(\r\n        \r\n            <div  className='confirmpass'>\r\n                <h4>Your password has been sent to your email</h4><br/>\r\n                    <h6>Please check your email</h6><br/>\r\n                   \r\n                   \r\n                    <div>\r\n                    <FaKey  />\r\n                        <input type=\"password\" onChange={(e) => this.handleChange(e, 0)} placeholder='Enter new password' />\r\n                    </div>\r\n                    <div>\r\n                    <FaKey  />\r\n                    <input type='password' onChange={(e) => this.handleChange(e, 1)} placeholder='Confrim Your password'/>\r\n                    </div>\r\n                     <Link to ='/signin'><button className='pass'> Confirm</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return <Redirect to =\"/signin\" />\r\n     }\r\n     \r\n   \r\n}\r\n}\r\n\r\nexport default ConfirmPass"]},"metadata":{},"sourceType":"module"}